<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">50</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1537780459000</longProp>
        <longProp name="ThreadGroup.end_time">1537780459000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">/Users/kiwitech/Downloads/DATA_BACKUP/apache-jmeter-3.3/bin/ecom3.txt</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">users,email,device_id</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="45 /api/v1/users-issuse" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;email_opt&quot;:0,&quot;birth_date&quot;:&quot;9\/24\/1982&quot;,&quot;additional_details&quot;:{&quot;date&quot;:&quot;Sep 24, 2045&quot;,&quot;single_chec_box&quot;:0},&quot;device_type&quot;:&quot;ios&quot;,&quot;additional_policy&quot;:0,&quot;password&quot;:&quot;Ankit@123456789&quot;,&quot;location&quot;:&quot;Noida, Uttar Pradesh, India&quot;,&quot;notification_token&quot;:&quot;227bf3c51a38b1dd3c748f8bb26f2db202f86fdbe18f04fbd9f3761408e335c5&quot;,&quot;username&quot;:&quot;${users}&quot;,&quot;device_id&quot;:&quot;${device_id}&quot;,&quot;user_timezone&quot;:&quot;Asia\/Kolkata&quot;,&quot;email&quot;:&quot;${email}&quot;,&quot;gender&quot;:&quot;Male&quot;,&quot;ad_id&quot;:&quot;C6EDA697-CBBA-4189-8B58-6804D53225EB&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">tamm-qa.herokuapp.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/users</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="device_id" elementType="Header">
                <stringProp name="Header.name">device_id</stringProp>
                <stringProp name="Header.value">${device_id}</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-IN;q=1, hi-IN;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">br, gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="X-Afty-Community" elementType="Header">
                <stringProp name="Header.name">X-Afty-Community</stringProp>
                <stringProp name="Header.value">7e567d1f449b4137aa865139</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">TopFan/14205 (iPhone; iOS 11.2.6; Scale/2.00)</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="334 /api/users/login?user_timezone=Asia%2FKolkata&amp;language_code=en_US&amp;country_code=IN" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;username&quot;:&quot;${users}&quot;,&quot;password&quot;:&quot;Ankit@123456789&quot;,&quot;device_id&quot;:&quot;${device_id}&quot;,&quot;device_type&quot;:&quot;android&quot;,&quot;notification_token&quot;:&quot;APA91bEGP1k8h5yf0nvI5gM64V3gdm-8dlGpgAzDBudEpM6OVZuOu6Z2clLtCp3i7eib_ID4jjeFLUxWui-ctUq1437ehrYkbXIg_3M0btLN4-wPx4RR9l2B5PTwbWcWqjdSlZVTJUve&quot;,&quot;ad_id&quot;:&quot;cf1585ec-8c02-4951-82d3-a2ccf844a8a2&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">tamm-qa.herokuapp.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/users/login?user_timezone=Asia%2FKolkata&amp;language_code=en_US&amp;country_code=IN</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="X-Afty-Community" elementType="Header">
                <stringProp name="Header.name">X-Afty-Community</stringProp>
                <stringProp name="Header.value">7e567d1f449b4137aa865139</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Dalvik/2.1.0 (Linux; U; Android 7.1.1; Moto G Play Build/NPIS26.48-43-2)</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">user_id</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;_id&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">user_id_not_found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Launch" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="13 /dispatcher.arpc" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="en-IN_IN&#x0;&#xe;com.apple.geod&#x0;&#xd;11.2.6.15D100&#x0;&#x0;&#x0;&lt;&#x0;&#x0;&#x2;&apos;&#xa;©&#x1;&#xa;&quot;com.topfan.TopFan.EricChurch.AdHoc&#x12;&#x5;14205&#x1a;&#x5;14205&quot;&#x9;iPhone7,2*&#xd;11.2.6.15D1000&#x0;8&#x0;B&#x14;&#x8;ªÂ¿ ÙÁ&#x9a;¥F&#x10;&#x9e;&#x87;Ë¬ÿ&#x8a;&#x86;­$H&#x1;`&#x1;j(&#x8;&#x12;&#x12;$3EDEC1D7-4CB0-4DCE-A451-7B7A6514015Fr&#x9;iPhone OS&#x91;&#x1;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;K?&#x12;%&#xa;&#x2;IN&#x1a;&#x5;en-INJ&#x0;P&#x1;X&#xe;`&#x1;&#x80;&#x1;&#x3;&#x98;&#x1;&#x0;¢&#x6;&#x9;&#x12;&#x0;*&#x5;&#x8;ú" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en-IN_IN&#x0;&#xe;com.apple.geod&#x0;&#xd;11.2.6.15D100&#x0;&#x0;&#x0;&lt;&#x0;&#x0;&#x2;&apos;
©&#x1;
&quot;com.topfan.TopFan.EricChurch.AdHoc&#x12;&#x5;14205&#x1a;&#x5;14205&quot;	iPhone7,2*&#xd;11.2.6.15D1000&#x0;8&#x0;B&#x14;&#x8;ªÂ¿ ÙÁ&#x9a;¥F&#x10;&#x9e;&#x87;Ë¬ÿ&#x8a;&#x86;­$H&#x1;`&#x1;j(&#x8;&#x12;&#x12;$3EDEC1D7-4CB0-4DCE-A451-7B7A6514015Fr	iPhone OS&#x91;&#x1;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;K?&#x12;%
&#x2;IN&#x1a;&#x5;en-INJ&#x0;P&#x1;X&#xe;`&#x1;&#x80;&#x1;&#x3;&#x98;&#x1;&#x0;¢&#x6;	&#x12;&#x0;*&#x5;&#x8;ú</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x10;&#x1;&#x1a;&#x5;en-IN&#x1a;&#x5;hi-IN*&#x4;&#x8;&#x2;&#x18;&#x1;*&#x4;&#x8;&#x1;&#x18;&#x1;*&#x4;&#x8;&#x5;&#x18;&#x1;*&#x10;&#x8;&#x1f;&#x18;&#x1;*&#xa;ú&#x1;&#x7;&#xa;&#x5;6.4.2*&#x4;&#x8;&#x3;&#x18;&#x1;*&#x4;&#x8;&#x6;&#x18;&#x3;*&#x8;&#x8;&#x9;&#x18;ÿÿÿÿ&#x7;*&#x4;&#x8;&#xa;&#x18;&#x1;*1&#x8;&#xb;&#x18;&#x1;*+Z)*&#xd;&#xa;&#x9;&#x8;&#x99;Çã&#x8a;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;2&#xd;&#xa;&#x9;&#x8;&#x99;Çã&#x8a;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;:&#x9;&#x8;&#x99;Çã&#x8a;&#x2;&#x10;&#x88;&#xe;*&#x4;&#x8;&#x18;&#x18;&#x1;*&#x4;&#x8;&#x14;&#x18;&#x1;*&#x4;&#x8;&#x16;&#x18;&#x1;*&#x4;&#x8;&#x17;&#x18;&#x6;*&#x4;&#x8;&apos;&#x18;&#x1;*&#x10;&#x8;&#x7;&#x18;&#x3;*&#xa;:&#x8;&#xa;&#x4;&#x8;&lt;&#x10;&lt;&#x10;&#x1;*&#xf;&#x8;$&#x18;&#x3;*&#x9;¢&#x2;&#x6;&#xa;&#x4;&#x8;&lt;&#x10;&lt;*&#x4;&#x8;&#xd;&#x18;&#x1;*&#x19;&#x8;&#x1a;&#x18;&#x3;*&#x13;Ò&#x1;&#x10;&#xa;&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;&#xa;&#x6;&#x8;ø&#x1;&#x10;º&#x1;*&#x4;&#x8;&#x4;&#x18;&#x1;*&#x4;&#x8;)&#x18;&#x1;*&#x8;&#x8;&#xf;&#x18;ÿÿÿÿ&#x7;*&#x8;&#x8;&#x10;&#x18;ÿÿÿÿ&#x7;*&#x9;&#x8;&#x1e;&#x18;&#x1;*&#x3;ò&#x1;&#x0;*&#x4;&#x8;!&#x18;&#x1;*&#x4;&#x8;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x10;&#x1;&#x1a;&#x5;en-IN&#x1a;&#x5;hi-IN*&#x4;&#x8;&#x2;&#x18;&#x1;*&#x4;&#x8;&#x1;&#x18;&#x1;*&#x4;&#x8;&#x5;&#x18;&#x1;*&#x10;&#x8;&#x1f;&#x18;&#x1;*
ú&#x1;&#x7;
&#x5;6.4.2*&#x4;&#x8;&#x3;&#x18;&#x1;*&#x4;&#x8;&#x6;&#x18;&#x3;*&#x8;&#x8;	&#x18;ÿÿÿÿ&#x7;*&#x4;&#x8;
&#x18;&#x1;*1&#x8;&#xb;&#x18;&#x1;*+Z)*&#xd;
	&#x8;&#x99;Çã&#x8a;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;2&#xd;
	&#x8;&#x99;Çã&#x8a;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;:	&#x8;&#x99;Çã&#x8a;&#x2;&#x10;&#x88;&#xe;*&#x4;&#x8;&#x18;&#x18;&#x1;*&#x4;&#x8;&#x14;&#x18;&#x1;*&#x4;&#x8;&#x16;&#x18;&#x1;*&#x4;&#x8;&#x17;&#x18;&#x6;*&#x4;&#x8;&apos;&#x18;&#x1;*&#x10;&#x8;&#x7;&#x18;&#x3;*
:&#x8;
&#x4;&#x8;&lt;&#x10;&lt;&#x10;&#x1;*&#xf;&#x8;$&#x18;&#x3;*	¢&#x2;&#x6;
&#x4;&#x8;&lt;&#x10;&lt;*&#x4;&#x8;&#xd;&#x18;&#x1;*&#x19;&#x8;&#x1a;&#x18;&#x3;*&#x13;Ò&#x1;&#x10;
&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;
&#x6;&#x8;ø&#x1;&#x10;º&#x1;*&#x4;&#x8;&#x4;&#x18;&#x1;*&#x4;&#x8;)&#x18;&#x1;*&#x8;&#x8;&#xf;&#x18;ÿÿÿÿ&#x7;*&#x8;&#x8;&#x10;&#x18;ÿÿÿÿ&#x7;*	&#x8;&#x1e;&#x18;&#x1;*&#x3;ò&#x1;&#x0;*&#x4;&#x8;!&#x18;&#x1;*&#x4;&#x8;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x18;&#x1;*&#x4;&#x8;5&#x18;&#x1;*&#x4;&#x8;0&#x18;&#x1;*&#x4;&#x8;2&#x18;&#x1;*&#x4;&#x8;6&#x18;&#x1;8&#x4;B&#x1a;&quot;&#x18;&#x18;&#x1;&quot;&#x14;&#xa;&#x12;&#x9;É°IrP&#x94;&lt;@&#x11;&#x87;&#x94;;Q&#x88;TS@J&#x2;IN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x18;&#x1;*&#x4;&#x8;5&#x18;&#x1;*&#x4;&#x8;0&#x18;&#x1;*&#x4;&#x8;2&#x18;&#x1;*&#x4;&#x8;6&#x18;&#x1;8&#x4;B&#x1a;&quot;&#x18;&#x18;&#x1;&quot;&#x14;
&#x12;	É°IrP&#x94;&lt;@&#x11;&#x87;&#x94;;Q&#x88;TS@J&#x2;IN</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">gsp-ssl.ls.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/dispatcher.arpc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">geod/1 CFNetwork/894 Darwin/17.4.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-msg-priority" elementType="Header">
                  <stringProp name="Header.name">x-msg-priority</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="12 /configurations/pep/config/geo/networkDefaults-ios-11.0.plist" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">configuration.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/configurations/pep/config/geo/networkDefaults-ios-11.0.plist</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">geod/1 CFNetwork/894 Darwin/17.4.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8 /api/v3/oauth/token" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">fiS5vD9PqEF6PFuS88qyUrRqiGvGCRTNVXBK9uhkPId8MbOd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_secret" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_secret</stringProp>
                  <stringProp name="Argument.value">k8SfDWiV6v6a0OaFNFxbhXCn2YpqKnSR8q2BeoSjYuDxrz2k</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="country_code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">country_code</stringProp>
                  <stringProp name="Argument.value">IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">client_credentials</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="language_code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language_code</stringProp>
                  <stringProp name="Argument.value">en-IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">topfan-qa.topfan.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/oauth/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN;q=1, hi-IN;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">TopFan/14205 (iPhone; iOS 11.2.6; Scale/2.00)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="15 /5/fb?cabv=2&amp;cc=IN&amp;key=shibainu9415&amp;locale=en_IN&amp;v=2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">ÝV]oã6&#x10;ü+&#x81;&#x1e;&#x82;&#x16;°&#x1c;R¢D)EPÈ&#x1f;A&#x3;\&#x93;ÔIz&#x1;â@ Å&#x95;MD&#x16;U&#x89;J&#x90;&#x1e;òß»&#x94;í³&#x9c;Ü&#x1d;P Oõ&#x93;°Ü]&#x92;3³C&#x7f;qÄ&#x12;Jã&#x9c;:×¢n &#x93;ó&#x13;:$G?©ë&#x95;.&#x81;&#xf;¼_&#x8e;6&#x9f;GW7G&#x94;&#xe;½axD&#x83;	%äç£~&#x85;3pÚ&#x6;êtÙ*&#x89;ÍFñ4b&#x93;qäNÃ`ì²I&#x12;¹#ê&#x13;w&#x14;&#x87;	&apos;Éô|Ä&#x13;,ÉUÝ&#x98;&#x14;&#xb;&#x9d;Ó\&#x14;&#xd;&#xc;&#x9c;&#x1a;&#x1a;ÝÖ&#x19;¤ÏP7J&#x97;&#x8d;súÅiT±Ò-&#x18;&#x3;éËJ&#x19;(Tc@¦FW*Ã&#x4;&apos;ÀV½&#x9c;L&#x97;¹Znã&#x85;ÖOm&#x95;®Ti&#x9a;ô&#x5;à©xMÛºÀU(Ó&#x8b;Kw	&#x9a;º,ÆL©2&#x83;;&#x8a;ú5Ý&#x9d;¢Ù¦J&#x16;°pA)&#x85;&#x98;&#x8;*9!A.&#x98;/}¶&#x90;^Î&#x17;X-Z£sU&#x14;©)äþ&#x94;»úÈ&#x8b;)É&#x18;&#x89;&#x2;Ï&#x97;ÙÂÏò&#x5;ñ&#x8;õX&#x1e;B´°»gµ~&#x91;Ý®ª\¦&#x8b;BdO½&#x6;^&amp;H(r&#x89;&#xd;HNsæ&#x85;q&#x90;&#x87;&#x8b;0ö&quot;&#x99;&#x91;&#x9c;a&#x3;U6F&#x14;&#x5;â&quot;ªêÃ	8÷H&#xc;&#x1e;ø&#x94;&#x8;?&#x90;&#x82;f&#xb;&#x10;&#x1e;p/&#x88;ü&#xc;&#x82;è=Rk]&#x9a;Õw¡ê&#x81;Ý&#x91;&#x90;®qO&lt;÷&#x8e;&#x8b;J&#x9b;B-W&amp;mpùE×r&#x88;	¸È&#xe;&#x16;«U-&#x1a;H÷¸÷²þRi&#xe;Â´õW&#xe;È&#xf;&#x7f;Ô&#x16;eº®¡kÖ5ÝaG(&apos;&#x11;¥&#x1f;@~&#x8f;&#x11;ñ½(à 	Å&#x2;&#x89;dsÏ&#xf;&#x3;&quot;&#x19;&#xb;y&#x10;-äÁá×ZB±&#x17;&#x8a;ÝÇy&#x1b;8&#xb;{#£Ö¨h&#x1a;ø&#x9c;ó8&#x8e;&#x82;&#x81;SÕð¬tÛ¤&#xd;4VÖ)&#x94;&#x12;&#x8b;E£K¬,uú&gt;Á&#xe;ÇÂ9}ø&#x82;¼V­&#x9d;O&#xb;J&#xb;(N;`dà&#x98;Z-&#x97;8qð¼&#x99;ß&#x85;XÚ!ÜÌ_&#x90;&#x8c;ü&#x84;LÇn&lt;&#x89;Ï]FÏqþ&quot;/rY2&quot;SNÙ$¦&#x1c;³W $Î&#x99;&#x9d;±{7©ª&#x2;ÜO¢\¶è	öF&#xf;sdÞ½¸&#x9c;;&#x83;¹³RÝ×#&#x96;Ýá¤»É&#x7f;ã&#x1b;&#x88;&#x99;y­À¢&#x0;&#x6;¥ò&#x84;&#x8;&#x88;:[¡tDmp3&#xb;&amp;~¯«îÖ&#x88;[¥Q¡é¶¨êz¥ÛËw4®&#x8c;©&#x9a;ÓùÉüDTjØ¬µ6Caï6Ìôz~&#x82;©¿fÙÙÅå14ÅYw¿ã&apos;x=kVj!TÙÆ&#x8c;&#x6;Ç&#x85;ÎD&#x1;g&#x9d;î&#x8f;MÛd¢|=£xXË&#x87;&#x81;:&#x17;&#x19;tsa&#x8d;&#xf;EP¡SAÚ¨¿1ê&#x87;4&#x88;P*&#x6;åÛ &#x19;I&#x8c;y&#x84;Xy&#x96;åV&#x9e;5 éÉ¯®÷ïXÛ&#x1;&#x85;ÈX&#x19;Ka&#x4;*åÁ9&#x7;&#x93;­n6°&#x91;ÇÁ&#x83;3Ñk¼Ñ§n®·ñø}|Z¢®iÌm|¼9à6Õ£]&#x93;&#x1b;Èp&#xd;
Ç_Ï¾]eÔë&#x95;t]8ómh&#x6;¨Óf×&#x85;3Ö&#xb;nóÂMh&#x3;Û61â¤&#x1f;í2#Þß&#x4;7¿»»&#x98; &#x2;&#x84;&#x9d;&#x9f;&#x8f;y&#x12;¸~&lt;&#x1e;¹ÌóGn&#x14;EÜõ9&#x8d;¦	ó¢hL&#x9d;ÃÊ&#x1b;t¢[&#x94;ÒX·èo&#xe;&#x12;ùYåjv&#x7f;&#x8d;F&#xb;&#x18;8¥$&#x8;&#x90;¤?E=»½EÆpj&#x7f;We÷&#x8d;áÙýèÕÀ&gt;mv&#x7f;Õ&#x9a;«üªÆùÙ®`ô³ªAözb(y^v=(&#xd;&#x7;Î&#x18;&#x8a;âö`ù0Ù®¿&#x8b;l)i34&#x99;¦;&#x80;-&#x9a;´U¡2a`¿÷63AS^Wf&#x93;x{?&#x3;S&#x8b;²Y+Ó%&#x1d;nÞ&#x1d;÷0t»»&apos;&apos;á &#x83;¨·&#x8e;±·&gt;G#-_»ô&#x19;d &#x9e;ÁrKÃ&#x8e;²Ë&#x8d;F¯kmt¦&#x8b;K&#x81;&#x8e;8èFÓ&#x8e;ý&#x86;&#x9c;&#x19;¬µ&#x81;DJ&#x1c; &amp;)åµî&#x6;&#x9e;ò¡&#x17;xC´í¡ÇÂSÆü&#xf;T¢`~È¥O8ßSé³oS¹Éúß3é&#x87;ì&#x3;&#x93;&#x18;{;&#x4;uf&#x1d;mc&#x1b;&#x7f;Ü]&#x8c;?ïÿgmÜb»¶£þ·îå¸±&#x86;7ð&lt;òMULÀ&#x9a;&#x1f;&#x8a;¢sÄ&#x9e;&#xb;ô&#x8b;}ê?&gt;â&#x3;	ø&#x94;&#x89;&#x8d;&#x14;Ð	¿¡&#x81;ï½&#x13;`&#x8d;¢ÿJ &#x13;¼=¾ý&#x3;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api-glb-hkg.smoot.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/5/fb?cabv=2&amp;cc=IN&amp;key=shibainu9415&amp;locale=en_IN&amp;v=2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Apple-Languages" elementType="Header">
                  <stringProp name="Header.name">X-Apple-Languages</stringProp>
                  <stringProp name="Header.value">[&quot;en-IN&quot;,&quot;hi-IN&quot;]</stringProp>
                </elementProp>
                <elementProp name="X-Apple-Digest" elementType="Header">
                  <stringProp name="Header.name">X-Apple-Digest</stringProp>
                  <stringProp name="Header.value">15548b1cc35cd99474321305e178d369eefe041418629fa528488643a79a2fd84a66d84839aec0547058794353fd40c9ef049f7f2d07dcaff2c9fdb4191137dc</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">deflate</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Parsecd/1.0 (iPhone7,2; iPhone OS 11.2.6 15D100) Parsecd/1.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6 /api/v3/oauth/token" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">fiS5vD9PqEF6PFuS88qyUrRqiGvGCRTNVXBK9uhkPId8MbOd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_secret" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_secret</stringProp>
                  <stringProp name="Argument.value">k8SfDWiV6v6a0OaFNFxbhXCn2YpqKnSR8q2BeoSjYuDxrz2k</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="country_code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">country_code</stringProp>
                  <stringProp name="Argument.value">IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">client_credentials</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="language_code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language_code</stringProp>
                  <stringProp name="Argument.value">en-IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">topfan-qa.topfan.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/oauth/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN;q=1, hi-IN;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">TopFan/14205 (iPhone; iOS 11.2.6; Scale/2.00)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="14 /api/v3/oauth/token" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">fiS5vD9PqEF6PFuS88qyUrRqiGvGCRTNVXBK9uhkPId8MbOd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_secret" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_secret</stringProp>
                  <stringProp name="Argument.value">k8SfDWiV6v6a0OaFNFxbhXCn2YpqKnSR8q2BeoSjYuDxrz2k</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="country_code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">country_code</stringProp>
                  <stringProp name="Argument.value">IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">client_credentials</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="language_code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language_code</stringProp>
                  <stringProp name="Argument.value">en-IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">topfan-qa.topfan.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/oauth/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN;q=1, hi-IN;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">TopFan/14205 (iPhone; iOS 11.2.6; Scale/2.00)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="9 /api/community" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tamm-qa.herokuapp.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/community</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN;q=1, hi-IN;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Afty-Community" elementType="Header">
                  <stringProp name="Header.name">X-Afty-Community</stringProp>
                  <stringProp name="Header.value">c8a9c23d832fb3326f4b0fec</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">TopFan/14205 (iPhone; iOS 11.2.6; Scale/2.00)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7 /api/tags" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="all_communities" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">all_communities</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tamm-qa.herokuapp.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/tags</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN;q=1, hi-IN;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Afty-Community" elementType="Header">
                  <stringProp name="Header.name">X-Afty-Community</stringProp>
                  <stringProp name="Header.value">c8a9c23d832fb3326f4b0fec</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">TopFan/14205 (iPhone; iOS 11.2.6; Scale/2.00)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10 /api/account/device" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;new_content_notification&quot;:1,&quot;notification_status_interactions&quot;:1,&quot;notification_status_dms&quot;:1,&quot;notification_token&quot;:&quot;227bf3c51a38b1dd3c748f8bb26f2db202f86fdbe18f04fbd9f3761408e335c5&quot;,&quot;notification_status_expiring_wall_message&quot;:1,&quot;notification_status_new_groups&quot;:1,&quot;notification_status_groups&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tamm-qa.herokuapp.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/account/device</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN;q=1, hi-IN;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="X-Afty-Community" elementType="Header">
                  <stringProp name="Header.name">X-Afty-Community</stringProp>
                  <stringProp name="Header.value">c8a9c23d832fb3326f4b0fec</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">TopFan/14205 (iPhone; iOS 11.2.6; Scale/2.00)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="11 /api/account/device" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;new_content_notification&quot;:1,&quot;notification_status_interactions&quot;:1,&quot;notification_status_dms&quot;:1,&quot;notification_token&quot;:&quot;227bf3c51a38b1dd3c748f8bb26f2db202f86fdbe18f04fbd9f3761408e335c5&quot;,&quot;notification_status_expiring_wall_message&quot;:1,&quot;notification_status_new_groups&quot;:1,&quot;notification_status_groups&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tamm-qa.herokuapp.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/account/device</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN;q=1, hi-IN;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="X-Afty-Community" elementType="Header">
                  <stringProp name="Header.name">X-Afty-Community</stringProp>
                  <stringProp name="Header.value">c8a9c23d832fb3326f4b0fec</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">TopFan/14205 (iPhone; iOS 11.2.6; Scale/2.00)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="16 /api/account/device" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;new_content_notification&quot;:1,&quot;notification_status_interactions&quot;:1,&quot;notification_status_dms&quot;:1,&quot;notification_token&quot;:&quot;227bf3c51a38b1dd3c748f8bb26f2db202f86fdbe18f04fbd9f3761408e335c5&quot;,&quot;notification_status_expiring_wall_message&quot;:1,&quot;notification_status_new_groups&quot;:1,&quot;notification_status_groups&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tamm-qa.herokuapp.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/account/device</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN;q=1, hi-IN;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="X-Afty-Community" elementType="Header">
                  <stringProp name="Header.name">X-Afty-Community</stringProp>
                  <stringProp name="Header.value">c8a9c23d832fb3326f4b0fec</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">TopFan/14205 (iPhone; iOS 11.2.6; Scale/2.00)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="17 /api/account/device" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;new_content_notification&quot;:1,&quot;notification_status_interactions&quot;:1,&quot;notification_status_dms&quot;:1,&quot;notification_token&quot;:&quot;227bf3c51a38b1dd3c748f8bb26f2db202f86fdbe18f04fbd9f3761408e335c5&quot;,&quot;notification_status_expiring_wall_message&quot;:1,&quot;notification_status_new_groups&quot;:1,&quot;notification_status_groups&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tamm-qa.herokuapp.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/account/device</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN;q=1, hi-IN;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="X-Afty-Community" elementType="Header">
                  <stringProp name="Header.name">X-Afty-Community</stringProp>
                  <stringProp name="Header.value">c8a9c23d832fb3326f4b0fec</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">TopFan/14205 (iPhone; iOS 11.2.6; Scale/2.00)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="18 /api/v3/oauth/token" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">fiS5vD9PqEF6PFuS88qyUrRqiGvGCRTNVXBK9uhkPId8MbOd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_secret" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_secret</stringProp>
                  <stringProp name="Argument.value">k8SfDWiV6v6a0OaFNFxbhXCn2YpqKnSR8q2BeoSjYuDxrz2k</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="country_code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">country_code</stringProp>
                  <stringProp name="Argument.value">IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">client_credentials</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="language_code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language_code</stringProp>
                  <stringProp name="Argument.value">en-IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">topfan-qa.topfan.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/oauth/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN;q=1, hi-IN;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">TopFan/14205 (iPhone; iOS 11.2.6; Scale/2.00)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="19 /hsmessaging/rest" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;&#x8b;&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x13;í&#x9c;[sÚ8&#x14;Ç&#x9f;ÛOÁð´;;2&#x92;,ÙR&amp;¥Ãu»³&#x99;¶S&#x9a;¾2².&#x89;gÁöØ&amp;Ý|û&#x95;&#x81;Ð&#xb;l+ÓÐ&#x0;5&#xf;ÄÈ:ò±ô&#x97;~Gø&#x90;Ë&#x97;ÿÎg­;&#x9d;&#x17;q&#x9a;¼h#&#xf;¶[:&#x91;©&#x8a;&#x93;&#x9b;&#x17;íë÷cÀÚ/»Ï/õ&#x9d;NÊ«¸(»Ï&#x9f;]¾J&#x8b;R«&#x89;Îïb©&#x8b;QuÊ&#x16;?[Uús&#x11;«.¤B&#x18;&#x1a;D T0&#x4;&#x4;S&#xe;XD}&#x80;UÄ1&#x82;&#x11;R¾¸ì|ª¿±&#x1e;&#x96;E&#x17;CÄ&#x0;ä&#x0;&#x93;÷&#x88;\&#x10;vA¨&#x7;&#x19;û&#x3;Ò&#xb;&#x1f;®­ªz&#x1b;£Aªtw0&#x98;&#xc;ÿ&#x9e;NFï&gt;ü5&#x18;­k-OlªM&#x16;Ñ²àõõÕÕtrÝ&#x9f;&#xe;Þ&#xc;&#x1f;j&gt;&#x9c;ûT9]äRw!&#x17;BC&#x89;0	|&#x82;&#x4;&#x8f;&#xc;&#x89;&#x8c;àÜ&#x97;R ©Ô&#x83;ùªve½(t¾¼§ËÎæpÓê[&#x91;&#x8b;ùP&#x94;¢*ú¼¬&#x95;&#x88;¹~ÑÖÉ&#x9d;&apos;Ó¹W}jwot¢s1[_cYï&#x7f;ìD&quot;f÷e,&#xb;/º/õT¦&#x8b;¤ô&#xd;
[©ÝE&#x10;&#x5;û¶°°J&#x98;g¹.&#xd;
­Ú]F¸ïÐÒ²ÀSe1Õ&#x89;µr&#x19;Íï7WÞg¶C&gt;9Y,¢y\:&#x9b;ßØQh×Qå7&#x9b;´&#x83;d&gt;zëIc&#x9b;õ|&#xf;#&#x9f;;&#x98;&#x16;K&#x9d;¬&#x87;w&#x94;Ç²5¸µ%·Î7&quot;E©oÒü¾Ý­ä^k\&#x93;Å|º&lt;]T&#x12;Ëfº¬&#x6;&#x95;º{-²lZ&#x94;i®§UgV2-ÓÌ&#x88;Ä{&#x9f;fcû§º&#x9f;Õíx=õ*&#x95;î-g3Q&#x9a;4&#x9f;·»ñ&#x9b;I-&#x89;&#x15;¥ÈË]&quot;Ã&#x1e;&#x87;ÄYd·e&#x99;yY&#x1e;§y\Ú¾u1ÙÙ±¹ÎÒ¼n¿n&#x84;&#x84;&#x8;&#x86;5ì&#x94;®Ö_ÛgooÓD;w[a§³½Üt5&apos;È&#x90;&#x8f;&#x3;:&#x1c;&#x3;J|&#xc;&#x88;],@¿O&#x10;&#x18;ã&gt;ï&#x7;8&#x18;&#x8e;z#w&#x97;ä,¶&apos;&#x96;úp\9&#x1d;&amp;Új¶ôT&#x1a;éA®E&#x19;ßi7í¯&#x9d;J&#x8b;é¦&#x8b;?¬&#xe;Z&#x8;yØ&#xb;Z¿õ&#x17;ñLµ&#x10;&#x1d;&quot;&#x8;&#x7f;w&#x9f;&#x85;³t¡&#x96;wY	§¸èt¤&#x4;&quot;&#x8b;&#x81;mÝ&#x13;&#x95;£^&#x9c;vlAç&#xe;u&#x96;&#x95;&#x8b;&#xe;\¿À&#x8e;·&#x87;&#x97;«R­êËEQÉ~ËäóÏkÐ\vv&#x3;Û&#x81;ã&#x12;&#x7;&#x91;4&#x11;&#x1;BF&#x10;&#x10;&amp;&#x2;{$8°e\j&#x8;&#x91;Æ¦&#x6;Ç&#x3;&#x8f;0þ«püG&#x94;û&#x5;ô²Ì&#x8b;&#x13;!+ë&apos;&#x9b;&#x89;&#x9f;Q´&#x86;&amp;Nl&#x11;sÀÊ¶&#x82;&#x9f;d&#x1;úFtµ&#x97;&#x87;û&#x1;ø	&#x97;Á/&#x3;åEòO&#x92;~L&#x8e;2&#x0;;xðT;|p&#x8d;_&#x1f;&#x17;%Ê&#x18;#©°Ñvè&#x1b;»l`	&#x98;ÑØ&#x6;ß&#x81;&#xc;iäc&#x81;Â&#x1a;(	=LI&#x83;&#x92;ú(9&#x1e;&#x90;ÔPÄù&#x81;d[¿Ç&#x6;&#x92;½&lt;l@Ò&#x80;äÀ ñ&#x85;&quot;&#x1;G&gt;ÐJK@&#x2;$&#x0;&#x8f;0&#x5;&#x81;aaÈ&#x84;/$Ôµ@âû´&#x1;ÉiïIjhâ&#x1c;Qòµ&#x82;&#x8f;&#xf;%{xØ ¤AÉ&#x81;Q&#x12;i&#x81;&#x95;B&#xd;
&#x18;¡#@&#x4;3 R&#x11;&#x6;¡/©&#xf;©áT#w&#x94;Pè&#x5;(lPrÊ{&#x92;&#x1a;&#x8a;8;&#x90;ìÐï&#x91;&#x81;d?&#xf;&#x1b;&#x90;4 90H&#xc;¢Hh£&#x1;ò&#x95;&#xf;H¨&#x19;&#x88; aÀ&#x87;&#x92;P	!ç&#x11;«&#x1;&#x12;Ô&lt;&apos;9ý=I&#xd;M&#x9c;&#x1f;J¶&#x15;|l(ÙËÃ&#x6;%&#xd;J&#xe;&#x8c;&#x12;­°a&#x1c;jÀ5²s4&#x88;&#xc;`!óA¨1Ç&#x94;*M&quot;å&#x8a;&#x12;~&#x1;©Ç&#x83; AÉ)ïIj(âÌ@²S¿G&#x5;&#x92;}=l@Ò&#x80;äà&#xf;Ü¹@!×@&#x19;C&#x0;Q&#x88;&#x2;!m8ª$¯ÂÒ@1&#x1f;×&#x0;	÷ ÿËìI&#x1e;;&#x7;&#x1b;A&#x97;ì`&#x87;&#x1c;l&#x84;Bä$¹ï­ZÛÃé&#xc;Ç&#x1f;KÂ®!ËÇ&#x98;SG±$­Ìt&#x9e;§¹&#x1d;Ue/ûzrýîjT&#x15;&#xc;Ó¹&#x88;&#x93;&#x8b;&#x16;°&lt;&quot;µD²;¡»FÊÄé$t[Á&#x86;&#x1e;çø	&#x13;ºkôk&#x93;Ð} &#x18;ýì&#x13;º&#xf;&#x9c;Î&#x8d;&#x19;ÓLQ	4&#xf;¬6&#x8c; &#x80;a¡&#x80;&#x89;$µÃ&#x18;a&quot;&#x9d;sð&#x96;&#xc;Á¿ÎÏ²ÎõkÊ&#x1a;&#x9a;8±%Ì&#x1;*Û&#xd;
&gt;¶Ýå^&#x1e;6»Ëfwyð,&lt;Ì&#x99;ò&#x15;&#x10;&#x82;K&#x1b;ÆC&#x3;&#x18;ãU,&#x1f;áPkf&#x82;:»K&#xc;=Âa&#x83;&#x92;ú(&#x99;	»AtÑûOÈÁsVÄÏ&#x2;	&#xe;z¸ïû&#xc;&#x8c;á¨&#x7;H&#xf;&#x6;&#x80;!&#x8b;&#x14;&#x84;Çvrõ&#x90;&#xf;qïQ@²C¿G&#x6;&#x92;ý&lt;&lt;q&#x90;&#x88;EYcj4&#x14;ùùy&#x13;TØ`&#x93;&#x1a;&#x0;&#x15;&#x83;6øÄvõ&#x88;°&#x6;&#x1a;&#x1a;Ãµ&amp;Ü&#x4;Î¿/µ&#x1a;G&#x1e;úê;&#x82;&#x86;&quot;&apos;ö°«&#x86;&quot;Î&#x8f;&quot;Ûú=6&#x8a;ìåá&#x89;S¤Ù&#x8e;&lt;-HÖ5&#x97;ÿ}è?&#x91;Rì¾°H&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">na1e-ccsdk.services.adobe.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/hsmessaging/rest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-Request-Id</stringProp>
                  <stringProp name="Header.value">EF229ACB-04A0-4656-A52F-A158F994E298</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-gzip</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Eric Church/14205 (AdobeCreativeSDK 0.3.2139;Apple;iPhone;iOS;11.2.6)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="20 /v3.0/1731461190418183/activities" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;format&quot;:&quot;json&quot;,&quot;anon_id&quot;:&quot;XZ98BFC5D9-FF13-468B-BA19-D1F953056BFB&quot;,&quot;application_tracking_enabled&quot;:&quot;1&quot;,&quot;extinfo&quot;:&quot;[\&quot;i2\&quot;,\&quot;com.topfan.TopFan.EricChurch.AdHoc\&quot;,\&quot;14205\&quot;,\&quot;14205\&quot;,\&quot;11.2.6\&quot;,\&quot;iPhone7,2\&quot;,\&quot;en_IN\&quot;,\&quot;IST\&quot;,\&quot;NoCarrier\&quot;,375,667,\&quot;2.00\&quot;,2,15,5,\&quot;Asia\\\/Kolkata\&quot;]&quot;,&quot;event&quot;:&quot;CUSTOM_APP_EVENTS&quot;,&quot;advertiser_id&quot;:&quot;C6EDA697-CBBA-4189-8B58-6804D53225EB&quot;,&quot;advertiser_tracking_enabled&quot;:&quot;1&quot;,&quot;custom_events&quot;:&quot;[{\&quot;core_lib_included\&quot;:1,\&quot;_eventName\&quot;:\&quot;fb_sdk_initialize\&quot;,\&quot;_logTime\&quot;:1537780761,\&quot;share_lib_included\&quot;:1,\&quot;login_lib_included\&quot;:1,\&quot;_ui\&quot;:\&quot;no_ui\&quot;}]&quot;,&quot;include_headers&quot;:&quot;false&quot;,&quot;sdk&quot;:&quot;ios&quot;,&quot;url_schemes&quot;:&quot;[\&quot;\&quot;,\&quot;fb1731461190418183\&quot;,\&quot;twitterkit-\&quot;]&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">graph.facebook.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v3.0/1731461190418183/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">FBiOSSDK.4.34.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35 /v3.0/1731461190418183/activities" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;format&quot;:&quot;json&quot;,&quot;anon_id&quot;:&quot;XZ98BFC5D9-FF13-468B-BA19-D1F953056BFB&quot;,&quot;application_tracking_enabled&quot;:&quot;1&quot;,&quot;extinfo&quot;:&quot;[\&quot;i2\&quot;,\&quot;com.topfan.TopFan.EricChurch.AdHoc\&quot;,\&quot;14205\&quot;,\&quot;14205\&quot;,\&quot;11.2.6\&quot;,\&quot;iPhone7,2\&quot;,\&quot;en_IN\&quot;,\&quot;IST\&quot;,\&quot;NoCarrier\&quot;,375,667,\&quot;2.00\&quot;,2,15,5,\&quot;Asia\\\/Kolkata\&quot;]&quot;,&quot;event&quot;:&quot;CUSTOM_APP_EVENTS&quot;,&quot;advertiser_id&quot;:&quot;C6EDA697-CBBA-4189-8B58-6804D53225EB&quot;,&quot;advertiser_tracking_enabled&quot;:&quot;1&quot;,&quot;custom_events&quot;:&quot;[{\&quot;core_lib_included\&quot;:1,\&quot;_eventName\&quot;:\&quot;fb_sdk_initialize\&quot;,\&quot;_logTime\&quot;:1537780980,\&quot;share_lib_included\&quot;:1,\&quot;login_lib_included\&quot;:1,\&quot;_ui\&quot;:\&quot;no_ui\&quot;}]&quot;,&quot;include_headers&quot;:&quot;false&quot;,&quot;sdk&quot;:&quot;ios&quot;,&quot;url_schemes&quot;:&quot;[\&quot;\&quot;,\&quot;fb1731461190418183\&quot;,\&quot;twitterkit-\&quot;]&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">graph.facebook.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v3.0/1731461190418183/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">FBiOSSDK.4.34.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="36 /api/v3/clients/78/force_app_update" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="oauth_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">oauth_token</stringProp>
                  <stringProp name="Argument.value">oMUQhSCFoWq1EnHPvkn2oUgGwzeqRNzFvkbLGlhdlmLoCeQp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">topfan-qa.topfan.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/clients/78/force_app_update</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN;q=1, hi-IN;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">TopFan/14205 (iPhone; iOS 11.2.6; Scale/2.00)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34 /api/v3/client" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="country_code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">country_code</stringProp>
                  <stringProp name="Argument.value">IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="device_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">device_type</stringProp>
                  <stringProp name="Argument.value">ios</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language_code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language_code</stringProp>
                  <stringProp name="Argument.value">en-IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="oauth_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">oauth_token</stringProp>
                  <stringProp name="Argument.value">oMUQhSCFoWq1EnHPvkn2oUgGwzeqRNzFvkbLGlhdlmLoCeQp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">topfan-qa.topfan.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/client</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN;q=1, hi-IN;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">TopFan/14205 (iPhone; iOS 11.2.6; Scale/2.00)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="37 /hsmessaging/rest" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;&#x8b;&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x13;íXßoÛ6&#x10;~nÿ&#xd;
CO&#x1b;&#x6;R¤HÉRà¨H$g&#x1d;&#x1a;´Å&#x9c;ôU H:&#x11;f&#x8b;&#x82;H¹Ë&#x7f;?Jþ&#x91;&#x14;s[Úí&#x90;¬&#x8d;&#x1e;léxwº;~w&#x1f;¡É«¿&#x97;&#x8b;ÑJ¶ºRõ©&#x87;!òF²æJTõÍ©w}u&#x1;bïUúr&quot;W²6&#x97;&#x95;6éË&#x17;&#x93;×J&#x1b;)f²]U\êi¿dÅ/ÖJ¿w&#x95;HÃ(À&#x94;Ð&#x8;à8)&#x1;&#x1d;c&#x1;J,&#x4;&#x88;&#x5;&#x8f;&#x89;d&#x89;`&#x2;Mü{ý&#x9d;unt&#x1a; &#x1c;&#x3;&#x94;&#x80;&#x80;^az&#x12;&#x92;&#x13;Da&#x18;&#x8e;&#x7f;Cá	ÙZõz;£L	&#x99;fÙ,&#x7f;SÌ¦&#x7f;~ø#&#x9b;n´&#x86;&#x85;&#x9d;Ú¬+&#x7;ÁÛëËËbv}^dïò­æví^Yu-&#x97;)J&#x18;&#x93;&#x88;ã&#x80;F&#x84;b&#x96;&#x94;sZÎY&#x92;&#x10;Î&#x19;æBlÍ×Ú½u§e;ä4ñw·;¯ïYË&#x96;93¬&#x17;=&#x94;&#x8d;j¶&#x94;§&#x9e;¬W&#x90;«%ì&#x9f;¼ôFÖ²e&#x8b;Í;&#x6;½ÏØ±&#x9a;-îLÅ5,ï&#x8c;,¸êj&#x3;µUòRLéøX&#xf;&#x9d;EÂ²i¥ÖRXOq&#x10;Å&#xe;®&#x6;&#x1;&#x14;F&#x17;²¶f.Ûùuwæ®±&#x15;¹&#x8f;Rwå²2Îæ7v&#x1b;¼C`ùE&#x97;v&#x97;æ&#x1f;á¦k¼&#x14;A&#x2;&#x3;L&#x12;&#x7;S=&#x0;e³¿Ó¶â£ìÖJn&#x9d;&#x13;áÌÈ&#x1b;ÕÞyi&#x8f;÷&#x83;6¶î&#x96;Å°¬{&#x8c;5&#xb;i&#x86;]Åîa³¦)´Q­,újö@5ª&#x99;³&#x1a;^©æÂþõ	­ó&#x81;gâµâî&#x9e;&#x9b;&#x5;3sÕ.½´z7;&#x8;cÚ°ÖìCY&#x0;ã&#x98;8£ìÖ&#x98;&#x6;6m¥ÚÊØâº&#x98;ì­l+&#x1b;Õ&#x1e;\Ø&#x1d;&#x94;0&#xd;Pèn&apos;d?&#x82;mÑÞßªZ:×MÛ&#x8e;¶¯+Ö]&#x81;s&#x8c;³&lt;&#x9b;&#x82;lz&#x11;&#x3;&#x9a;G	&#x88;§&#x88;&#x80; &#x89;Ïstq&#x86;§&#x94;¸&#x87;Ä&#x17;&#x95;]&#x18;&#x0;â8&lt;&#x1d;ZmÝ/gB&#x95;2k%3ÕJº¡&#x7f;&#x13;&#x94;ÒÅ®Ä&#x1f;Ö7#&#x8c;a&#x0;£Ñ/ç]µ&#x10;#&#x1c;æ&#x18;¡_Ýûp¡:1dÙ#G&#x9f;ø&gt;ç&#x80;5&#x15;°Þ!ë&#x3;&#x85;&#x95;ò­À_a&#x7f;PÖ&gt;Ú\`ÏÏör&#x85;ª&#x85;½ét&#x8f;û&#x7f;&#x99;&lt;|ÞpÍÄßÏÙ&#xe;T&gt;&#xe;Çc&#x19;&#x87;c&#x90;DÜ¢&#x83;D6MA&#x8;À&#x8c;ð&#x12;&#x93;2Á&#x84;¸S9¶³2À?&#xb;&#x95;&#x7f;&#xb;r?¡½¦&#x81;UÍxoýh&#x9d;ø&#x80;G&#xf;ÀÄÿl&#x88;}&#x9d;Wö øQ&#x6;ÐçÏWÇEx&#x1c;&#x3;?â&#x18;üô¬ÜÕ&#x7f;Õêcý$&#x8f;`ÿùééàã&#x83;ë	öûR	&#x1a;G¥&#x88;1&#x2;&#x81;,) 1ã &#x96;A	$A&#x84;ÎIh&#x87;É&#x1;TB&#x13;H&#x92;g*9&#x82;J&#x9e;&#xe;&#x91;&#x1c;&#x80;&#x88;&#x1f;&#x8e;Höà÷&#x89;&#x11;Éq&#x11;&gt;&#x13;É3&#x91;|&#x3;&#x91;l4&#x87;o&#x8d;ÿ&#x0;qÙÕZ&#x9e;&#x14;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">na1e-ccsdk.services.adobe.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">iso-8859-1</stringProp>
            <stringProp name="HTTPSampler.path">/hsmessaging/rest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-Request-Id</stringProp>
                  <stringProp name="Header.value">48672144-1FA4-43A3-A9C8-ACFB99CAFD39</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-gzip</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Eric Church/14205 (AdobeCreativeSDK 0.3.2139;Apple;iPhone;iOS;11.2.6)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Create account" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38 /api/v3/oauth/token" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">fiS5vD9PqEF6PFuS88qyUrRqiGvGCRTNVXBK9uhkPId8MbOd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_secret" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_secret</stringProp>
                  <stringProp name="Argument.value">k8SfDWiV6v6a0OaFNFxbhXCn2YpqKnSR8q2BeoSjYuDxrz2k</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="country_code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">country_code</stringProp>
                  <stringProp name="Argument.value">IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">client_credentials</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="language_code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language_code</stringProp>
                  <stringProp name="Argument.value">en-IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">topfan-qa.topfan.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/oauth/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN;q=1, hi-IN;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">TopFan/14205 (iPhone; iOS 11.2.6; Scale/2.00)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="39 /api/v3/oauth/token" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">fiS5vD9PqEF6PFuS88qyUrRqiGvGCRTNVXBK9uhkPId8MbOd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_secret" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_secret</stringProp>
                  <stringProp name="Argument.value">k8SfDWiV6v6a0OaFNFxbhXCn2YpqKnSR8q2BeoSjYuDxrz2k</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="country_code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">country_code</stringProp>
                  <stringProp name="Argument.value">IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">client_credentials</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="language_code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language_code</stringProp>
                  <stringProp name="Argument.value">en-IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">topfan-qa.topfan.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/oauth/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN;q=1, hi-IN;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">TopFan/14205 (iPhone; iOS 11.2.6; Scale/2.00)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="40 /rpc?prettyPrint=false" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;method&quot;:&quot;placesios.getAutocompletePredictions&quot;,&quot;id&quot;:&quot;gtl_1&quot;,&quot;params&quot;:{&quot;query&quot;:&quot;n&quot;,&quot;filter&quot;:{&quot;types&quot;:[&quot;(cities)&quot;],&quot;restrictToPlaces&quot;:true},&quot;header&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;context&quot;:{&quot;source&quot;:&quot;programmaticApi&quot;}},&quot;bounds&quot;:{&quot;hi&quot;:{&quot;longitude&quot;:0,&quot;latitude&quot;:0},&quot;lo&quot;:{&quot;longitude&quot;:0,&quot;latitude&quot;:0}},&quot;key&quot;:&quot;AIzaSyCxg8IVfrP9KesJZOzqAFqk5rhsKfMHI4s&quot;},&quot;apiVersion&quot;:&quot;v1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/rpc?prettyPrint=false</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Ios-Bundle-Identifier" elementType="Header">
                  <stringProp name="Header.name">X-Ios-Bundle-Identifier</stringProp>
                  <stringProp name="Header.value">com.topfan.TopFan.EricChurch.AdHoc</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json-rpc; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">com.topfan.TopFan.EricChurch.AdHoc/14205 google-api-objc-client/2.0 iPhone/11.2.6 hw/iPhone7_2 GoogleMapsSDK/1.13.24482 (gzip)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json-rpc</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="42 /rpc?prettyPrint=false" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;method&quot;:&quot;placesios.getAutocompletePredictions&quot;,&quot;id&quot;:&quot;gtl_5&quot;,&quot;params&quot;:{&quot;query&quot;:&quot;noi&quot;,&quot;filter&quot;:{&quot;types&quot;:[&quot;(cities)&quot;],&quot;restrictToPlaces&quot;:true},&quot;header&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;context&quot;:{&quot;source&quot;:&quot;programmaticApi&quot;}},&quot;bounds&quot;:{&quot;hi&quot;:{&quot;longitude&quot;:0,&quot;latitude&quot;:0},&quot;lo&quot;:{&quot;longitude&quot;:0,&quot;latitude&quot;:0}},&quot;key&quot;:&quot;AIzaSyCxg8IVfrP9KesJZOzqAFqk5rhsKfMHI4s&quot;},&quot;apiVersion&quot;:&quot;v1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/rpc?prettyPrint=false</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Ios-Bundle-Identifier" elementType="Header">
                  <stringProp name="Header.name">X-Ios-Bundle-Identifier</stringProp>
                  <stringProp name="Header.value">com.topfan.TopFan.EricChurch.AdHoc</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json-rpc; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">com.topfan.TopFan.EricChurch.AdHoc/14205 google-api-objc-client/2.0 iPhone/11.2.6 hw/iPhone7_2 GoogleMapsSDK/1.13.24482 (gzip)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json-rpc</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="41 /rpc?prettyPrint=false" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;method&quot;:&quot;placesios.getAutocompletePredictions&quot;,&quot;id&quot;:&quot;gtl_7&quot;,&quot;params&quot;:{&quot;query&quot;:&quot;noid&quot;,&quot;filter&quot;:{&quot;types&quot;:[&quot;(cities)&quot;],&quot;restrictToPlaces&quot;:true},&quot;header&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;context&quot;:{&quot;source&quot;:&quot;programmaticApi&quot;}},&quot;bounds&quot;:{&quot;hi&quot;:{&quot;longitude&quot;:0,&quot;latitude&quot;:0},&quot;lo&quot;:{&quot;longitude&quot;:0,&quot;latitude&quot;:0}},&quot;key&quot;:&quot;AIzaSyCxg8IVfrP9KesJZOzqAFqk5rhsKfMHI4s&quot;},&quot;apiVersion&quot;:&quot;v1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/rpc?prettyPrint=false</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Ios-Bundle-Identifier" elementType="Header">
                  <stringProp name="Header.name">X-Ios-Bundle-Identifier</stringProp>
                  <stringProp name="Header.value">com.topfan.TopFan.EricChurch.AdHoc</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json-rpc; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">com.topfan.TopFan.EricChurch.AdHoc/14205 google-api-objc-client/2.0 iPhone/11.2.6 hw/iPhone7_2 GoogleMapsSDK/1.13.24482 (gzip)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json-rpc</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="43 /rpc?prettyPrint=false" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;method&quot;:&quot;placesios.getAutocompletePredictions&quot;,&quot;id&quot;:&quot;gtl_3&quot;,&quot;params&quot;:{&quot;query&quot;:&quot;no&quot;,&quot;filter&quot;:{&quot;types&quot;:[&quot;(cities)&quot;],&quot;restrictToPlaces&quot;:true},&quot;header&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;context&quot;:{&quot;source&quot;:&quot;programmaticApi&quot;}},&quot;bounds&quot;:{&quot;hi&quot;:{&quot;longitude&quot;:0,&quot;latitude&quot;:0},&quot;lo&quot;:{&quot;longitude&quot;:0,&quot;latitude&quot;:0}},&quot;key&quot;:&quot;AIzaSyCxg8IVfrP9KesJZOzqAFqk5rhsKfMHI4s&quot;},&quot;apiVersion&quot;:&quot;v1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/rpc?prettyPrint=false</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Ios-Bundle-Identifier" elementType="Header">
                  <stringProp name="Header.name">X-Ios-Bundle-Identifier</stringProp>
                  <stringProp name="Header.value">com.topfan.TopFan.EricChurch.AdHoc</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json-rpc; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">com.topfan.TopFan.EricChurch.AdHoc/14205 google-api-objc-client/2.0 iPhone/11.2.6 hw/iPhone7_2 GoogleMapsSDK/1.13.24482 (gzip)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json-rpc</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="44 /rpc?prettyPrint=false" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;method&quot;:&quot;placesios.getAutocompletePredictions&quot;,&quot;id&quot;:&quot;gtl_9&quot;,&quot;params&quot;:{&quot;query&quot;:&quot;noida&quot;,&quot;filter&quot;:{&quot;types&quot;:[&quot;(cities)&quot;],&quot;restrictToPlaces&quot;:true},&quot;header&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;context&quot;:{&quot;source&quot;:&quot;programmaticApi&quot;}},&quot;bounds&quot;:{&quot;hi&quot;:{&quot;longitude&quot;:0,&quot;latitude&quot;:0},&quot;lo&quot;:{&quot;longitude&quot;:0,&quot;latitude&quot;:0}},&quot;key&quot;:&quot;AIzaSyCxg8IVfrP9KesJZOzqAFqk5rhsKfMHI4s&quot;},&quot;apiVersion&quot;:&quot;v1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/rpc?prettyPrint=false</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Ios-Bundle-Identifier" elementType="Header">
                  <stringProp name="Header.name">X-Ios-Bundle-Identifier</stringProp>
                  <stringProp name="Header.value">com.topfan.TopFan.EricChurch.AdHoc</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json-rpc; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">com.topfan.TopFan.EricChurch.AdHoc/14205 google-api-objc-client/2.0 iPhone/11.2.6 hw/iPhone7_2 GoogleMapsSDK/1.13.24482 (gzip)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json-rpc</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="46 /api/v1/users" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;email_opt&quot;:0,&quot;birth_date&quot;:&quot;9\/24\/1982&quot;,&quot;additional_details&quot;:{&quot;date&quot;:&quot;Sep 24, 2045&quot;,&quot;single_chec_box&quot;:1},&quot;device_type&quot;:&quot;ios&quot;,&quot;additional_policy&quot;:0,&quot;password&quot;:&quot;abhi@123456789&quot;,&quot;location&quot;:&quot;Noida, Uttar Pradesh, India&quot;,&quot;notification_token&quot;:&quot;227bf3c51a38b1dd3c748f8bb26f2db202f86fdbe18f04fbd9f3761408e335c5&quot;,&quot;username&quot;:&quot;abhi5656&quot;,&quot;device_id&quot;:&quot;C6EDA697-CBBA-4189-8B58-6804D53225EB&quot;,&quot;user_timezone&quot;:&quot;Asia\/Kolkata&quot;,&quot;email&quot;:&quot;aabb90266@gmail.com&quot;,&quot;gender&quot;:&quot;Male&quot;,&quot;ad_id&quot;:&quot;C6EDA697-CBBA-4189-8B58-6804D53225EB&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tamm-qa.herokuapp.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/users</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="device_id" elementType="Header">
                  <stringProp name="Header.name">device_id</stringProp>
                  <stringProp name="Header.value">C6EDA697-CBBA-4189-8B58-6804D53225EB</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN;q=1, hi-IN;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="X-Afty-Community" elementType="Header">
                  <stringProp name="Header.name">X-Afty-Community</stringProp>
                  <stringProp name="Header.value">c8a9c23d832fb3326f4b0fec</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">TopFan/14205 (iPhone; iOS 11.2.6; Scale/2.00)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="47 /log" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="C&#x8;&#x3;&quot;?&#x12;#2:Kl6D1rghpJzagqI6:PdNp49G_hvWqVWy6&quot;&#x6;11.2.6*&#x1;02&#x2;IN:&#x9;iPhone7,2&#x10;a ø³&#x9e;×à,*Ó&#x4;v&#x8;&#x86;´&#x95;×à,2f&#x8;&#x1;&#x12;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">C&#x8;&#x3;&quot;?&#x12;#2:Kl6D1rghpJzagqI6:PdNp49G_hvWqVWy6&quot;&#x6;11.2.6*&#x1;02&#x2;IN:	iPhone7,2&#x10;a ø³&#x9e;×à,*Ó&#x4;v&#x8;&#x86;´&#x95;×à,2f&#x8;&#x1;&#x12;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#xa;&quot;com.topfan.TopFan.EricChurch.AdHoc(&#x0;*,&#x8;&#x5;J(&#xa;&#x0;&#x12;&#x18;&#xa;&#xa;&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x12;&#xa;&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x1a;&#xa;&#x12;&#x8;(cities)X&#x0;j&#xa;1.13.24482&#x88;&#x1;£¤»á&#x3;v&#x8;Ùµ&#x95;×à,2f&#x8;&#x1;&#x12;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">
&quot;com.topfan.TopFan.EricChurch.AdHoc(&#x0;*,&#x8;&#x5;J(
&#x0;&#x12;&#x18;

&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x12;
&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x1a;
&#x12;&#x8;(cities)X&#x0;j
1.13.24482&#x88;&#x1;£¤»á&#x3;v&#x8;Ùµ&#x95;×à,2f&#x8;&#x1;&#x12;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#xa;&quot;com.topfan.TopFan.EricChurch.AdHoc(&#x0;*,&#x8;&#x5;J(&#xa;&#x0;&#x12;&#x18;&#xa;&#xa;&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x12;&#xa;&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x1a;&#xa;&#x12;&#x8;(cities)X&#x0;j&#xa;1.13.24482&#x88;&#x1;ó¥»á&#x3;v&#x8;&#x82;·&#x95;×à,2f&#x8;&#x1;&#x12;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">
&quot;com.topfan.TopFan.EricChurch.AdHoc(&#x0;*,&#x8;&#x5;J(
&#x0;&#x12;&#x18;

&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x12;
&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x1a;
&#x12;&#x8;(cities)X&#x0;j
1.13.24482&#x88;&#x1;ó¥»á&#x3;v&#x8;&#x82;·&#x95;×à,2f&#x8;&#x1;&#x12;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#xa;&quot;com.topfan.TopFan.EricChurch.AdHoc(&#x0;*,&#x8;&#x5;J(&#xa;&#x0;&#x12;&#x18;&#xa;&#xa;&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x12;&#xa;&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x1a;&#xa;&#x12;&#x8;(cities)X&#x0;j&#xa;1.13.24482&#x88;&#x1;&#x9c;§»á&#x3;v&#x8;ñ¹&#x95;×à,2f&#x8;&#x1;&#x12;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">
&quot;com.topfan.TopFan.EricChurch.AdHoc(&#x0;*,&#x8;&#x5;J(
&#x0;&#x12;&#x18;

&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x12;
&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x1a;
&#x12;&#x8;(cities)X&#x0;j
1.13.24482&#x88;&#x1;&#x9c;§»á&#x3;v&#x8;ñ¹&#x95;×à,2f&#x8;&#x1;&#x12;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#xa;&quot;com.topfan.TopFan.EricChurch.AdHoc(&#x0;*,&#x8;&#x5;J(&#xa;&#x0;&#x12;&#x18;&#xa;&#xa;&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x12;&#xa;&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x1a;&#xa;&#x12;&#x8;(cities)X&#x0;j&#xa;1.13.24482&#x88;&#x1;&#x89;ª»á&#x3;v&#x8;Û»&#x95;×à,2f&#x8;&#x1;&#x12;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">
&quot;com.topfan.TopFan.EricChurch.AdHoc(&#x0;*,&#x8;&#x5;J(
&#x0;&#x12;&#x18;

&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x12;
&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x1a;
&#x12;&#x8;(cities)X&#x0;j
1.13.24482&#x88;&#x1;&#x89;ª»á&#x3;v&#x8;Û»&#x95;×à,2f&#x8;&#x1;&#x12;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#xa;&quot;com.topfan.TopFan.EricChurch.AdHoc(&#x0;*,&#x8;&#x5;J(&#xa;&#x0;&#x12;&#x18;&#xa;&#xa;&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x12;&#xa;&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x1a;&#xa;&#x12;&#x8;(cities)X&#x0;j&#xa;1.13.24482&#x88;&#x1;ó«»á&#x3;@&#x91;¤Äá" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">
&quot;com.topfan.TopFan.EricChurch.AdHoc(&#x0;*,&#x8;&#x5;J(
&#x0;&#x12;&#x18;

&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x12;
&#xd;&#x0;&#x0;&#x0;&#x0;&#x15;&#x0;&#x0;&#x0;&#x0;&#x1a;
&#x12;&#x8;(cities)X&#x0;j
1.13.24482&#x88;&#x1;ó«»á&#x3;@&#x91;¤Äá</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">play.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/log</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Eric%20Church/14205 CFNetwork/894 Darwin/17.4.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="48 /5/fb?cabv=2&amp;cc=IN&amp;key=shibainu9415&amp;locale=en_IN&amp;v=2" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">�]&#xb;sڸ��*&#x1d;f��wn�J�e[������&#x14;Hy$&lt;�&#x1d;Ư���,6&#x10;��w�G�$�Y���ٽ鴱-KGG:�����ς3&#x8;���ř���&#x7f;�&#xd;&#x17;ч�&#xd;
�&#xc;�8P&#xe;��~��~8m~��H��&#x7;LM��&#x7f;&#x7f;�&#x5;�&#x14;�&#x17;&#xe;&#xb;�4��&#x7;��&#x7;::�T�4T���!H��&#xd;
:&#x16;��3YS�fٺ�A��p�f}hX�t�DipX�&#x5;i2�yA&#x7f;&#x11;��0��§?&#xb;i&#x18;&#xd;�y�eA&#x7f;9&#xc;� &#xd;
�,��Y2&#xd;=�P�@j����&#x17;�`[&#x1e;%�x&gt;�&#xf;�8K�� &#x18;G��|&#x16;�� �k� H� 1��^&#x6;=:�U���t[&#x557;�$�&#x18;�!&#x7;�&#xd;
B�&#x91;D_�\�\(.�v�Yr&#x11;FQ?��&#x1b;.�ګ�a�IH�D�=W�.\D&#x10;&amp;҅&#x1c;�.�ݛ%K?�5�&#x7;}7r��&#xe;&#x1;�9Hv.| �.��DdF/dWfD�=t!&#x1;�0N3&apos;�`^���&#x1e;&#x7;�B&#x10;&#xb;H b��w��&#x6;&#xe;	&#x14;BU�&#xb;�zw�&amp;I�&#xd;&#x1f;����΅П@����,�I&#x16;��a�O��2��E�&#x0;/�[/�Ù�&#x6;��yߩ�Gؿ&#x8;�l&gt;��&#x1;z�&#xf;捼d6&#xb;rb9ѫ�CXA*��&amp;��&#x1c;!��T	|���&#xf;�V�(S�K��P��o1?I� �Q&#x14;�O��a��#��	h4���(����0�&#x5;�0���4H�Z��؇�N���r&#x1e;��d&#x19;s�p&#xb;�~������&#x0;�)Xl�&#x12;��GY&#x7f;���w@�&#xb;��R�:�G�a��&#xd;
*0�)D0��&#x0;&#x14;�&#x1b;#&lt;d�)0TX�i�FA����ß�&#xd;
S�*����&#x19;�S}(�D^���&#x14;n� +�D���y��&quot;&#xc;��I)(7&#x14;��x:�$�Ѻ�%&#x8;�&quot;ȼ!��&#x1b;�&#x8;6kP$+��#*H&#x14;a�&#x19;L&#x17;lU5&#x10;�,&#x1b;1�������q��&#x11;��4&#xd;
�������3F�&#x8;�\��8�`&#xe;��k��_�J�r�k��ka&#x18;�w�vꖂ���=��La2V(b&quot;� �`����J�B&#x15;&quot;�TD2�&#x19;��?&#x10;E*�Xe&quot;�M�&#x1a;d&#xe;h�&#x3;Ԛ&#x3;��u5]�&#x3;]�\.�hI�Ь�1LZ����M�y�&#xc;Oz&amp;��u&#x17;W&#xd;jV&#x1b;e����?a��Տ�v��A&#x1c;)=+��&#x16;���!����� &#x3;�5�o�&#x0;�d�&#x15;�*&#xc;��!̹?M�c��-�y�ۆ\��g&#x19;f�4������9�P&#x18;D�0&#x1c;&#xf;��$I���&#x7;]��������6&#xd;��9��&#x1c;p�Ǿ3;&#x1a;̂A2&#xb;����ʵ� ��rq&#x1f;�SNg��2�&#x8;?&#x12;C&#x11;��� ҃��&#x7;n��a��d�G	�ˏ�Yo[�V���&#xf;��&#x6;1k�d�w0&#xe;VG�0t�0�3	Ӄ�ɢxpD�&quot;U&#x18;E��V��)�k&#xf;��3v�G��?�ȏ����l&#x2;,Ch8�j@&#x1c;�&#x1e;��&#x7;;�A,9&#x2;&#x15;�$Q @���,�L��&#x3;&gt;��5H�HKC�#�?&apos;�&#x18;�� �&#x1c;�y&#x1c;f�Q��&#x1b;��h+&#x6;&#x7f;&gt;s�\��u&#x19;\�Љ�^&#x14;���C&#x1e;q�J���*���J��&#x1d;&#xf;&#x13;&#x1b;-�����&#xd;���&#x5;�����	�&#x17;ƕ&lt;nn���V&#xc;�&#x13;�&#xd;
/7�8�����E�&#x17;6&#x3;&#xf;���&#x15;�}+J�N����r*�&#x0;&lt;OzEEf�N�&#x7b6;&#x8;�U�&#x6;ۊ*�wK�*٥x���f�&#xe;&#xd;
��������/�$K�$�9&#x10;�&#xe;su���&#xb;�N��b;iv:&#xd;8���AZ-��9� .�kB�w���`�3F&#x18;��Y�&#x4;�&#x16;�lY&#x11;%�&#x6;�$H�&#x6;��&#x16;&#x13;$��	x&#x16;Y���.Q=�W�*&#xb;�F�&#x5;ႇ,&#x11;��6�&amp;`�&#x16;(����&#xd;�m0�F�&#xb;@���&#x1d;Y�`��ά�j&#x15;&gt;�V&#xd;��&#x1e;&#x1c;|��wpU��9�g�&#x17;�3&#x18;��&#x5;Tj���ߡ&#x8;E�b����|X0�(j�z}�2&#x7f;&#x7f;�d�2����`�ȜO�Ѓ�|�����q��6&#x15;[�F�͜8��Y^�v�9���ZW�&#x4;{���&#xc;�T��[iN�,�|&#x1f;�n����$w�X)&#x12;J����D�?���b�����&#xd;pߘ�ֆ��&#xc;&lt;�V�h&#x10;���&quot;&#x4;U~R�&quot;��&#xc;U��&#xc;7��/CF�Q2��|O�P����6&#x1c;/���v&apos;���&#x6;̶���d?�B�8�&#xf;�,X���(	��&gt;5&#x1b;V}=� ���&#xd;
��eI���eu�e�ј�[&#x7b2;~v^��|�&#x1c;.C��&#x1a;��,&#x0;&#x4;�xjj��HK�&#x13;/&lt;&#xd;O�nȰ&#x7f;�&#x18;z&#x11;[&#x2;x&#x18;�:��B���i&#xc;�s&#x16;����)�&#x17;�Ď��rX1N��&#xf;wr.z�2Щ�t��p�N�������E�L��S�\m��5�����iu4�壼|4��Z&#x1e;�5�bm%��#+�&#x1b;��js&#x19;z$&#x1a;�z��*���Uu�e@gYm&quot;T5�b��Z�����|l�UҘ�J�&#x15;&#x1f;�&#x7;4ʣ��&#x1a;,O[�X&#x19;Y��&#x1e;�Z&#x13;��k1�]^l&#x0;�4&#x0;@�ll�&#x7;����&#x18;`	�s&#x7;��&#x5;�&#xb;.]��C�&#x2;�J耗a��_��A�&#x19;,O��&#x15;&gt;&#x11;�����&#x5;P8����&apos;Qo8&#x1;4ڏ&#x12;ǿ���h�6RuA�&#xc;]�$�&#x8;���@dD�F�hY�-��&lt;&#x18;���Q?&#x2;�r~&#x1e;@a�&#x1f;�G_y��&#x14;�pp����Oq�&#x10;�Z&#x4;�lQo&#x1f;�&#x7;[P����(&#x6;�x�&#x19;0�?ʉ&#x7f;&#x14;5&#x0;1�&#x17;DV��d���&#x16;�Ca��&amp;i&#x6;�yC��&#xf;�ق�?�&lt;�&#x0;����&amp;��L�&#x15;���X&#x15;v��&#x12;�pA&#xc;~8�$�	�&#x13;&#xb;&#x18;$W&#x1c;M&#x7;&#x7;�4��0%&#x2;�g&#x8;�e�#&#x12;U&#x14;YV&#x5;C�&#x11;��-&quot;�&#x16;�&#x5;&#x13;Ж�4&#x4;�K�9ѱW&#x17;]��TO&#x16;_J��Kg���cua���&#x10;&#x1d;W��+fI&#x18;N&#x6;[�e��ą�$&#xd;}A�&#xc;�X�&#x18;�X6&#x14;0�&#x1f;�&#x1;O&#xc;&#x8;T�&#xf;Ж;L&#x1;˄(&#x1c;�F�3�&#x1a;&#x8;2&lt;&amp;�`&#x16;9+&#x1;��&#x3;2&apos;�4&#x13;D^o&#x5;&#x0;�&#x7;�&#x3;�M���^Q��l*T&#x6;&#x10;�S�!aE&#x15;4	ۂ,ڒŨ�X��S�Tѫ�����/�T�.��|.ttK�#�&#x19;�\.��l&#x18;&#xc;�؟o����K�4p&quot;�M��L��&#xf;���&#x17;�d�M&#xb;�&#xd;
^&#x14;&#x10;&#xd;
�c��E@�P�UZV����&amp;&lt;T���4�/V_Ɣ&#xb;�&#x19;��x�&#x11;\5r��&#x14;��+��`K�&#xd;�&#x2;+WUX&#xc;&#x13;I���G&#x14;5*��*c�zk�;�&#x1a;�As5�٧��be~N�,N��&#x10;&#x1f;�� {�&#x12;�&quot;�l/Kd*&#x11;&#x15;�cz�3�d&#x93;��\�?0�;@HB�tw&#x6;&#x15;Q~(�&gt;����t�~�&#xb;~�=*��&#x1d;����k��Wp&#x7f;h�D�n�&apos;#���fo/��&#x0;{2F�.{`Я��^&#x16;�&#x1a;IZ�&quot;*��&#x13;�ה~/�5���So�DQ�N&#x1f;0kh�&gt;^�I&#x15;&#x15;I&#x11;U�&#xd;
6Ʋ &#x19;\�&#x14;E&#x13;l�&amp;�.&#x12;�$���[Ȥ�&#xf;�L��d)!��L�m�!�{&amp;�/ˤ��������i�&#x7;��&#xf;Ŕ�����ջ�ct?��X&#x6;�^�&#xd;�{	�ݬ�l�&#x3;�n&#x17;�$��&#xf;2���狼��+��w�y���Dd�&#x1a;{ u����O~j��&#x7;)~&#xd;
7p�u�&#x1b;��|�&#x1f;�O��3&apos;�&#x4;�Q�\�n�7�\�&#xc;&#x19;&#x14;LgH@�a�ʉ&#x1a; &#x12;�&#xd;
�)���&#x2;��l��&#x3;o�Sv�&#xf;�=o&#xc;�w�7�/rd��K����&#x7f;��&amp;&#x3;���&#x16;&#x1;�b,��?�v&apos;@/��&lt;&#x17;��z�&#x7;�&#xb;&#x1;�L��-&#xc;&lt;|�&#x1d;�����6���&#x8f;�4I��ۖ�&#xd;
:��;�8��-�&#x14;��s��N��?�ק���E_�LzS/�!��־AG.A&#xb;pX��9A�v4w��s�`�9&gt;��&#x15;^�B�8m:v�&#x1a;���n�ΜN9s�p�x����n�r]i_.\�f.�fN)��Z��3&#x13;&#x1b;�&#x17;b�β^�6�}y�hTi&#x3;&#x1f;�&#x11;zd��Ⓟ���+�&#x16;.��[�%�3uI=�&#x1d;�&#xc;ݶ��ZeT[{�ڤ�_�)wr]��?�^{&#x1c;�F&#x10;(�&#x1b;�;�ʕ&#x15;�&#x11;z��$Zybc�y�L�f�En&#xc;|č!�%�&lt;T�F�}��M*��ԅ�-��c&#x1a;v�x&#xd;
&lt;� ��+��ȟ�&#xf;��j��¹��N5&#x3;&#xc;7�1������i$�&amp;�����Z9�j���i�4�ě���9_v	ˀ����#��E��c��u��&#x5;Gu��&gt;������2�@���&lt;H��4�&#x19;&lt;pE���GU&#x8;`�V&#x1d;�&#x1d;̍��k+$�F�q�&#x15;�k�&#x1;&#x4;�ڸ7iL�!��3�&#xb;��ٙT�&#x1a;橁���ܬ�&#x0;0�&#x6;&#x0;&#xe;�u���i���ֺ�8�&#x19;5�&#x7;ܕ��&#x4;\��n�&#x0;�&#x10;����&#x1f;k�i��&#x1e;��^[��_&#x1f;�&#x1d;�n�R��΅��=\&#xd;
�LU�&#x1d;	y3��&#x14;e��&#x16; �y�&#x14;&#xd;+�림:�&#xd;
P!�w&#x4;��&#x14;��P�J;�vI�+$(&#x18;rIc&#x18;4��&#x1c;5E@&#xf;UZgK0��+B}b����-���&#x12;&#x13;+��&#x0;4#U&#x1;���g&#x1b;&#x14;V[����	����N&#x16;��S0�Kz\��&amp;�\;���l�10h�B_��3�]��Na���&#x12;&#x1b;w;c��Ywr&gt;�A�&#x6;(��G��P�&#xd;���e���_���&#x1a;_��&#x16;�5��t�\�&quot;�	ʳ:y���&#x19;&#x3;&#xc;�&#xc;���&#x1;J��&#x0;��+Q����n=�)�o�&#x14;y���/o�;ުμ�&#x1;�O(7IX��i�@��}8ĸ&#xe;�	�#��Q�&#x13;-�&amp;&#x6;�9&#x1f;�&#x7f;_���]у&#x18;x��;��+ٳ��x�&#x1a;:�&#x13;�7&apos;�&#x2;�&#xb;�L&#x1d;�M!�mU��U[��/&#xd;�-Ħ&#x12;[A��V���lY&#x1d;uװp��jѓ��&#x1f;:��b�_&#x1a;F�&#x17;�㳭k��/V�8�&#x3;�t�˅&#xb;��&#x7;���g����&#x3;��g�+�p�خ�f�&#x10;&#xd;
f&#xc;�{&#x2;�W&#x3;/�팺&#x4;bm�&#x6;̣/��&#xe;�W�`�8sH��q7��e�ԑc��ڽ��j-�8�.�+&#xd;
����Օ[�&gt;�&#x16;��&#x5fa;&#x5;�� ,��ag �&#x15;g&#x0;�&#x8;J��W&#xd;&#x14;&#xb;�Q&lt;&#x18;W6�$�&#xb;�&#x14;A�&#x1a;�c&#x0;�&#x6;����&#x4;�&#x1;�c+�3#��&lt;��&#x5fb;Q�5���m�&#x1;��30��Ol&#xd;
`w&#x5;@&#x1b;&#x0;���I-�g~�&#x15;��8^&#x6;��.����&#x1c;�;�yt�-8Pw����rp��&#x13;�t����yu&apos;����*��&#x0;�&#xe;��&#x1;�%�!&#x1e;��&#x1b;�@j�p0�&#x13;&#xb;&#xc;&#xc;eݎ�q�&#x6;ж/�~���p&amp;��;��������T�&apos;��?x&lt;o�!Ԍ+�P�E8�ە�^��1���^�A&#x14;&#x1b;&quot;�&#x10;�&#x4;�I� Y*&#x15;tU�&#x4;͢��&#x18;�&#x14;����&gt;��y��ߞ�d��b��%&#x15;&#xb;&#x4;SI�&#x1b;U&#x0;yI��L�b�&#x10;&#x1d;�?%:&#x19;����w�&lt;n�6&amp;&#x12;U�&#x12;M&#x15;	 Y]�5K&#x16;�d&#x13;F&#x14;˶t��������39B&#x1a;�%*��ȿCcE�&#xd;�&#x5;�d:S$dQ&#x15;�5��{w��ۺ�� }��&#x7;{E�}6��&#x1a;���&#x10;��,�5������Y�k��ˢ_z&#x1c;&#xf;X��Kվ;=�&#x7f;&#x1c;/�\&#x13;}�8��n��H��3��1&#x14;)�����&#x13;&#x1b;cdEU�,&#xb;�F4A�u&amp;hL&#x3;&#x13;�DD&#xd;&#xd;�&#xd;
1&#xd;
omc��A���$�$��1��&#x10;�x�|�&#x18;��&#x1b;c��1/� $�3X�&#x1a;��}!��&#x10;}�&#x17;&gt;�	�۶�&gt;�m&#x1;&#x14;��E&#xc;�~��$��&#x17;E&#x14;&#x1f;�t�)n&gt;|@&#x12;+���6�ev&#x7f;É��۪r]tk�&#xd;
�L��9&#x5;3�Ȯ����$Ru�D[&#x15;��&#x0;&#x1e;&#x1;f&#x14;TK�&#x0;��L1�	�	���$�w��&#x7;G$E�×��u2z�x]^����8��{���JE}�	;��O�sĎ&#x17;���$a��J�G�$���H�&gt;,ż��(��ιRY�&apos;@(��$E*��&#x1e;������$��?o�eu�-k#&#xb;uG��&#x52c;�k!B0&#xe;\i�F�|{Θ��z&#x11;�_U&apos;��3�Y�;�HZ��T&#x2;�4&#x15;[&#x10;�&#x15;&#x15;@���_&apos;�ҩa�&#x6;zy&#x2;�k)~|��K&#x13;0��\t2�5XP���Y�&#x0;7X�%6&#x11;l�i�)&#x0;�,��=��x*T&#x2;yb&#xc;@ʔ� ɖ&#x4;�A�&#xd;
�b���5&#x1d;�/?������ɾI�&#x11;p�HV&#x5;&#x11;�&apos;H�&quot;� 5IP,�&#x12;C�5KBoM|F��F�zk�8W�F&#x12;E]���9��Q&amp;[�&#x12;&#x12;��D�b���Lv6qf&#x1c;&#x14;���~���G��Nt�&#x15;9��b�&#x1a;���&#xe;�d�&#x7f;&#xd;{{y�&lt;&apos;���J�_-x&#xd;��4Λ�&#x6;�(�&#x7f;o&#x16;&#x4;7{�&#x1e;Hgls&#x19;w��D�	��&#x16;�ςˬ�,�0r\��̉�4��Dy�&#x1c;�&#x1d;ш�һ�$�L�+��&lt;�ϥ�ul&#x3;I�&#x8;D�� ��)0�0&#x4;Ӕm�&#x16;��&#xc;������&#x7;��E�bQ~��tw�P��{��/K&#x17;�������é�督���=���{�Q&gt;zf��&#x7;0�&#x5;�(��A�#��&#xd;
�/ZZX6&#x13;&#x1;%��d��Ca�&#x0;��&#x8;�V,E�&#x15;���O,-x�{���{�f&#x3;sm�$X3&#x4;ÖdA�L��Jl&#x1d;`��&#x15;Ӧ��ѷ&amp;��&#x1c;���4e�i�&#x6;X�`�$&#x1a;&#xd;
X��&#x5;�bIe�h&#x18;L&#x7f;k�|���8R�b&#x1a;�:8R�&#x12;`&#x5;J&#x4;M&#x3; f�&#xc;�*�&#xf;e�|��/&#x12;���&#x1c;&#xd;�&#x1e;{��^�s�&#x1c;ͯ`o��_�旰����3O�&#xb;��˚�&#xc;�&#xd;&apos;&#xc;#��j��������#����0q.�W��e��I9^�����&#x1;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api-glb-hkg.smoot.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/5/fb?cabv=2&amp;cc=IN&amp;key=shibainu9415&amp;locale=en_IN&amp;v=2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Apple-Languages" elementType="Header">
                  <stringProp name="Header.name">X-Apple-Languages</stringProp>
                  <stringProp name="Header.value">[&quot;en-IN&quot;,&quot;hi-IN&quot;]</stringProp>
                </elementProp>
                <elementProp name="X-Apple-Digest" elementType="Header">
                  <stringProp name="Header.name">X-Apple-Digest</stringProp>
                  <stringProp name="Header.value">c9a0f9b55903b113a81dcb9291b9a42d425911fb88461dcb5aa45c73abdaaec65ed2ae48cdb361681e3b124806ac3d69202a95aec1fdb00cbfb3b4415e553463</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">deflate</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Parsecd/1.0 (iPhone7,2; iPhone OS 11.2.6 15D100) Parsecd/1.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Login" enabled="false"/>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="true">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list"/>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">true</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
