<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
      </CacheManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">501</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">6</stringProp>
        <longProp name="ThreadGroup.start_time">1545384223000</longProp>
        <longProp name="ThreadGroup.end_time">1545384223000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">/Users/kiwitech/Downloads/in_progress_fileuploadmirthengine.txt</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">encounterid,memberid,orderid</stringProp>
        </CSVDataSet>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2100</stringProp>
        </ConstantTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">admin</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">admin</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">51.143.10.118</stringProp>
          <stringProp name="HTTPSampler.port">8445</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/users/_login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Processes a new message through a channel" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">MSH|^~\&amp;|QLS|TME^05D0642827^CLIA||78372330|20171127113614.000-0800||ORU^R01^ORU_R01|8000000000000921456|P|2.5.1|2||AL|NE|||||LRI_NG_RN_Profile^^2.16.840.1.113883.9.20^ISO&#xd;
PID|1|${memberid}|${memberid}-${encounterid}~2||Jami^Santosh||19920105|M|||123 Main St^^Dallas^TX^75204^USA||7813664236&#xd;
ORC|RE|${orderid}^QUEST_PHP_78372330|NE022022A^QUEST_PHP||CM|||||||1952666257^EZIGBO^CHIKA^^^^^^^^^^NPI|||||||||SAFE^^^^^^^^^78372330|7904 SANTA MONICA BLVD^MAIL992^WEST HOLLYWOOD^CA^90046-5170^^O^^USA|^^^^^310^5792778~^^^^^^13233860886&#xd;
OBR|3|${orderid}^QUEST_PHP_78372330|NE022022A^QUEST_PHP|91431^HIV1/2 AG/AB,4 W/RFL^99QDI|||20180424124200.000-0400|||||||||1952666257^EZIGBO^CHIKA^^^^^^^^^^NPI||||||20180426153009.000-0400|||F&#xd;
OBX|1|ST|86009052^HIV AG/AB, 4TH GEN^99QDI^56888-1^HIV 1+2 Ab+HIV1 p24 Ag SerPl Ql IA^LN|1|NON-REACTIVE||NON-REACTIVE|N|||F|||20180426153009.000-0400|||||20180426112211.000-0400||||QUEST DIAGNOSTICS HORSHAM^^^^^^FI^CLIA^^39D0204404|900 BUSINESS CENTER DRIVE^^HORSHAM^PA^19044-3432|1205872041^EDELMAN^ANDREW^S^MD PHD^^^^^^^^NPI^QHO&#xd;
NTE|1|L|HIV-1 antigen and HIV-1/HIV-2 antibodies were not&#xd;
NTE|2|L|detected. There is no laboratory evidence of HIV&#xd;
NTE|3|L|infection.&#xd;
NTE|4|L&#xd;
NTE|5|L|PLEASE NOTE: This information has been disclosed to&#xd;
NTE|6|L|you from records whose confidentiality may be&#xd;
NTE|7|L|protected by state law.  If your state requires such&#xd;
NTE|8|L|protection, then the state law prohibits you from&#xd;
NTE|9|L|making any further disclosure of the information&#xd;
NTE|10|L|without the specific written consent of the person&#xd;
NTE|11|L|to whom it pertains, or as otherwise permitted by law.&#xd;
NTE|12|L|A general authorization for the release of medical or&#xd;
NTE|13|L|other information is NOT sufficient for this purpose.&#xd;
NTE|14|L&#xd;
NTE|15|L|For additional information please refer to&#xd;
NTE|16|L|http://education.questdiagnostics.com/faq/FAQ106&#xd;
NTE|17|L|(This link is being provided for informational/&#xd;
NTE|18|L|educational purposes only.)&#xd;
NTE|19|L&#xd;
NTE|20|L&#xd;
NTE|21|L|The performance of this assay has not been clinically&#xd;
NTE|22|L|validated in patients less than 2 years old.&#xd;
NTE|23|L&#xd;
SPM|1|||USPEC^Source, Unspecified^HL70487|||||||||||||20180424124200.000-0400|20180425120638.000-0400&#xd;
ORC|RE|${orderid}^QUEST_PHP_78372330|NE022022A^QUEST_PHP||CM|||||||1952666257^EZIGBO^CHIKA^^^^^^^^^^NPI|||||||||SAFE^^^^^^^^^78372330|7904 SANTA MONICA BLVD^MAIL992^WEST HOLLYWOOD^CA^90046-5170^^O^^USA|^^^^^310^5792778~^^^^^^13233860886&#xd;
OBR|2|${orderid}^QUEST_PHP_78372330|NE022022A^QUEST_PHP|3640^HSV 2 IGG^99QDI|||20180424124200.000-0400|||||||||1952666257^EZIGBO^CHIKA^^^^^^^^^^NPI||||||20180426153009.000-0400|||F&#xd;
OBX|1|SN|70020600^HSV 2 IGG, TYPE SPECIFIC AB^99QDI^5209-2^HSV2 IgG Ser IA-aCnc^LN|1|&lt;^0.90|index^^99QDI||N|||F|||20180426153009.000-0400|||||20180426152301.000-0400||||QUEST DIAGNOSTICS HORSHAM^^^^^^FI^CLIA^^39D0204404|900 BUSINESS CENTER DRIVE^^HORSHAM^PA^19044-3432|1205872041^EDELMAN^ANDREW^S^MD PHD^^^^^^^^NPI^QHO&#xd;
NTE|1|L|Index          Interpretation&#xd;
NTE|2|L|-----          --------------&#xd;
NTE|3|L|&lt;0.90          Negative&#xd;
NTE|4|L|0.90-1.09      Equivocal&#xd;
NTE|5|L|&gt;1.09          Positive&#xd;
NTE|6|L&#xd;
NTE|7|L|This assay utilizes recombinant type-specific antigens&#xd;
NTE|8|L|to differentiate HSV-1 from HSV-2 infections. A&#xd;
NTE|9|L|positive result cannot distinguish between recent and&#xd;
NTE|10|L|past infection. If recent HSV infection is suspected&#xd;
NTE|11|L|but the results are negative or equivocal, the assay&#xd;
NTE|12|L|should be repeated in 4-6 weeks. The performance&#xd;
NTE|13|L|characteristics of the assay have not been established&#xd;
NTE|14|L|for pediatric populations, immunocompromised patients,&#xd;
NTE|15|L|or neonatal screening.&#xd;
SPM|1|02^02||USPEC^Source, Unspecified^HL70487|||||||||||||20180424124200.000-0400|20180425120638.000-0400&#xd;
ORC|RE|${orderid}^QUEST_MET_78372330|EN948342W^QUEST_MET||CM|||||||1497711865^FIFE^KENNETH^^^^^^^^^^NPI|||||||||SAFE^^^^^^^^^78372330|7904 SANTA MONICA BLVD STE 300^MAIL992^WEST HOLLYWOOD^CA^90046-5170^^O^^USA|^^^^^310^5792778~^^^^^^13233860886&#xd;
OBR|3|${orderid}^QUEST_MET_78372330|EN948342W^QUEST_MET|11363^CT/GC RNA,TMA,UROGEN^99QDI|||20180511144800.000-0700|||||||||1497711865^FIFE^KENNETH^^^^^^^^^^NPI||||||20180512165233.000-0700|||F&#xd;
OBX|1|ST|70043800^CHLAMYDIA TRACHOMATIS RNA, TMA, UROGENITAL^99QDI^43304-5^C trach rRNA XXX Ql NAA+probe^LN|1|NOT DETECTED||NOT DETECTED|N|||F|||20180512165233.000-0700|||||20180512155621.000-0700||||QUEST DIAGNOSTICS-WEST HILLS^^^^^^FI^CLIA^^05D0642827|8401 FALLBROOK AVENUE^^WEST HILLS^CA^91304-3226|1366479099^TOOCHINDA^TAB^^MD^^^^^^^^NPI^EN&#xd;
OBX|2|ST|70043900^NEISSERIA GONORRHOEAE RNA, TMA, UROGENITAL^99QDI^43305-2^N gonorrhoea rRNA XXX Ql NAA+probe^LN|1|NOT DETECTED||NOT DETECTED|N|||F|||20180512165233.000-0700|||||20180512155621.000-0700||||QUEST DIAGNOSTICS-WEST HILLS^^^^^^FI^CLIA^^05D0642827|8401 FALLBROOK AVENUE^^WEST HILLS^CA^91304-3226|1366479099^TOOCHINDA^TAB^^MD^^^^^^^^NPI^EN&#xd;
NTE|1|TWWAPTIMA|This test was performed using the APTIMA COMBO2 Assay&#xd;
NTE|2|TWWAPTIMA|(Gen-Probe Inc.).&#xd;
NTE|3|TWWAPTIMA&#xd;
NTE|4|TWWAPTIMA|The analytical performance characteristics of this &#xd;
NTE|5|TWWAPTIMA|assay, when used to test SurePath specimens have&#xd;
NTE|6|TWWAPTIMA|been determined by Quest Diagnostics.&#xd;
NTE|7|TWWAPTIMA&#xd;
SPM|1|04^04||USPEC^Source, Unspecified^HL70487|||||||||||||20180511144800.000-0700|20180512055130.000-0700&#xd;
ORC|RE|${orderid}^QUEST_MET_78372330|EN948342W^QUEST_MET||CM|||||||1497711865^FIFE^KENNETH^^^^^^^^^^NPI|||||||||SAFE^^^^^^^^^78372330|7904 SANTA MONICA BLVD STE 300^MAIL992^WEST HOLLYWOOD^CA^90046-5170^^O^^USA|^^^^^310^5792778~^^^^^^13233860886&#xd;
OBR|4|${orderid}^QUEST_MET_78372330|EN948342W^QUEST_MET|799^RPR (MONITOR) W/REFL^99QDI|||20180511144800.000-0700|||||||||1497711865^FIFE^KENNETH^^^^^^^^^^NPI||||||20180512165233.000-0700|||F&#xd;
OBX|1|ST|40010100^RPR (MONITOR) W/REFL TITER^99QDI^20507-0^RPR Ser Ql^LN|1|REACTIVE||NON-REACTIVE|A|||F|||20180512165233.000-0700|||||20180512155001.000-0700||||QUEST DIAGNOSTICS-WEST HILLS^^^^^^FI^CLIA^^05D0642827|8401 FALLBROOK AVENUE^^WEST HILLS^CA^91304-3226|1366479099^TOOCHINDA^TAB^^MD^^^^^^^^NPI^EN&#xd;
NTE|1|TWW11907|The RPR is a non-treponemal-specific test; therefore, &#xd;
NTE|2|TWW11907|a treponemal-specific confirmatory test should be &#xd;
NTE|3|TWW11907|performed unless prior syphilis infection has been &#xd;
NTE|4|TWW11907|documented for this patient.&#xd;
SPM|1|01^01||USPEC^Source, Unspecified^HL70487|||||||||||||20180511144800.000-0700|20180512022319.000-0700&#xd;
ORC|RE|${orderid}^QUEST_PHP_78372330|NE022022A^QUEST_PHP||CM|||||||1952666257^EZIGBO^CHIKA^^^^^^^^^^NPI|||||||||SAFE^^^^^^^^^78372330|7904 SANTA MONICA BLVD^MAIL992^WEST HOLLYWOOD^CA^90046-5170^^O^^USA|^^^^^310^5792778~^^^^^^13233860886&#xd;
OBR|5|${orderid}^QUEST_PHP_78372330|NE022022A^QUEST_PHP|EnhancedPDFReport1^Enhanced PDF Report NE022022A-1^99QDI|||20180424124200.000-0400|||||||||1952666257^EZIGBO^CHIKA^^^^^^^^^^NPI||||||20180426153009.000-0400|||F&#xd;
OBX|1|ED|EnhancedPDFReport1^Enhanced PDF Report NE022022A-1^99QDI||PHP^IM^^Base64^||||||F||||||||||||QUEST DIAGNOSTICS HORSHAM^^^^^^FI^CLIA^^39D0204404|900 BUSINESS CENTER DRIVE^^HORSHAM^PA^19044-3432|1205872041^EDELMAN^ANDREW^S^MD PHD^^^^^^^^NPI^QHO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">51.143.10.118</stringProp>
          <stringProp name="HTTPSampler.port">8445</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/channels/6243c9ab-fdb0-4d38-9311-b5ef9d63e442/messages</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">text/plain; charset=us-ascii</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Returns the maximum message ID for the given channel" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">51.143.10.118</stringProp>
          <stringProp name="HTTPSampler.port">8445</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/channels/6243c9ab-fdb0-4d38-9311-b5ef9d63e442/messages/maxMessageId</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name"></stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">id</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;long&gt;(.*?)&lt;/long&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">id_not_found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reprocesses and overwrites a single message" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">51.143.10.118</stringProp>
          <stringProp name="HTTPSampler.port">8445</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/channels/6243c9ab-fdb0-4d38-9311-b5ef9d63e442/messages/${id}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
