<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1536908452000</longProp>
        <longProp name="ThreadGroup.end_time">1536908452000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <MongoSourceElement guiclass="TestBeanGUI" testclass="MongoSourceElement" testname="MongoDB Source Config (DEPRECATED)" enabled="true">
          <boolProp name="autoConnectRetry">false</boolProp>
          <intProp name="connectTimeout">0</intProp>
          <stringProp name="connection">52.90.163.220</stringProp>
          <intProp name="connectionsPerHost">10</intProp>
          <boolProp name="continueOnInsertError">false</boolProp>
          <boolProp name="fsync">false</boolProp>
          <longProp name="maxAutoConnectRetryTime">0</longProp>
          <intProp name="maxWaitTime">120000</intProp>
          <boolProp name="safe">false</boolProp>
          <boolProp name="socketKeepAlive">false</boolProp>
          <intProp name="socketTimeout">0</intProp>
          <stringProp name="source">yatprod</stringProp>
          <intProp name="threadsAllowedToBlockForConnectionMultiplier">5</intProp>
          <boolProp name="waitForJournaling">false</boolProp>
          <intProp name="writeOperationNumberOfServers">0</intProp>
          <intProp name="writeOperationTimeout">0</intProp>
        </MongoSourceElement>
        <hashTree/>
        <MongoScriptSampler guiclass="TestBeanGUI" testclass="MongoScriptSampler" testname="MongoDB Script (DEPRECATED)" enabled="false">
          <stringProp name="database">yatprod</stringProp>
          <stringProp name="password"></stringProp>
          <stringProp name="source">yatprod</stringProp>
          <stringProp name="username"></stringProp>
          <stringProp name="script">db.posts.find({&quot;$and&quot;:[{&quot;loc&quot;:{&quot;$near&quot;:{&quot;$geometry&quot;:{&quot;type&quot;:&quot;Point&quot;,&quot;coordinates&quot;:[77.32054587453604,28.579556965039046]},&quot;$maxDistance&quot;:1609.34}}},{&quot;status&quot;:{&quot;$in&quot;:[&quot;confirmed&quot;,&quot;requested&quot;]}},{&quot;$or&quot;:[{&quot;service_type&quot;:&quot;traditional&quot;},{&quot;$and&quot;:[{&quot;service_type&quot;:&quot;yatthat&quot;},{&quot;post_expiry_datetime&quot;:{&quot;$gt&quot;:{&quot;$date&quot;:{&quot;$numberLong&quot;:&quot;1536909045000&quot;}}}}]}]},{&quot;offer_accepted_users&quot;:{&quot;$nin&quot;:[&quot;5b8d049b53e6fd3a633b98cd&quot;]}},{&quot;status&quot;:&quot;requested&quot;},{&quot;service_type&quot;:{&quot;$ne&quot;:&quot;traditional&quot;}},{&quot;deleted_at&quot;:null}]})</stringProp>
        </MongoScriptSampler>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
            <stringProp name="VAR">test</stringProp>
            <stringProp name="JSONPATH">$.id</stringProp>
            <stringProp name="DEFAULT">not_found</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">test</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$._id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="test" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">test</stringProp>
            <stringProp name="RegexExtractor.regex">oid&quot; : &quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">not_found</stringProp>
            <stringProp name="RegexExtractor.match_number">2</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <MongoScriptSampler guiclass="TestBeanGUI" testclass="MongoScriptSampler" testname="MongoDB Script (DEPRECATED)" enabled="true">
          <stringProp name="database">yatprod</stringProp>
          <stringProp name="password"></stringProp>
          <stringProp name="source">yatprod</stringProp>
          <stringProp name="username"></stringProp>
          <stringProp name="script">db.getCollection(&quot;posts&quot;).find({},{_id:1}).limit(100).toArray().pretty()</stringProp>
        </MongoScriptSampler>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
            <stringProp name="VAR">test</stringProp>
            <stringProp name="JSONPATH">$.id</stringProp>
            <stringProp name="DEFAULT">not_found</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">test</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$._id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="test" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">test</stringProp>
            <stringProp name="RegexExtractor.regex">oid&quot; : &quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">not_found</stringProp>
            <stringProp name="RegexExtractor.match_number">2</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Java Request ${test}" enabled="false">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Sleep_Time" elementType="Argument">
                <stringProp name="Argument.name">Sleep_Time</stringProp>
                <stringProp name="Argument.value">100</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Sleep_Mask" elementType="Argument">
                <stringProp name="Argument.name">Sleep_Mask</stringProp>
                <stringProp name="Argument.value">0xFF</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Label" elementType="Argument">
                <stringProp name="Argument.name">Label</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResponseCode" elementType="Argument">
                <stringProp name="Argument.name">ResponseCode</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResponseMessage" elementType="Argument">
                <stringProp name="Argument.name">ResponseMessage</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Status" elementType="Argument">
                <stringProp name="Argument.name">Status</stringProp>
                <stringProp name="Argument.value">OK</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SamplerData" elementType="Argument">
                <stringProp name="Argument.name">SamplerData</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResultData" elementType="Argument">
                <stringProp name="Argument.name">ResultData</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.protocol.java.test.JavaTest</stringProp>
        </JavaSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
