<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
      </CacheManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">500</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1544686273000</longProp>
        <longProp name="ThreadGroup.end_time">1544686273000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">/Users/kiwitech/Downloads/DATA_BACKUP/Data_Backup/Safe/Safe_data_creation/key.txt</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">key</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">/Users/kiwitech/Downloads/DATA_BACKUP/Data_Backup/Safe/Safe_data_creation/physicians1.txt</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">email1</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="173 /api/Account/mobile/register" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;lastName&quot;:&quot;weiniger&quot;,&quot;email&quot;:&quot;${email1}@yopmail.com&quot;,&quot;firstName&quot;:&quot;${email1}&quot;,&quot;password&quot;:&quot;Qwerty12@&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/Account/mobile/register</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.5.7 CFNetwork/974.2.1 Darwin/18.0.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="174 //connect/token" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client_secret" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_secret</stringProp>
                  <stringProp name="Argument.value">dataEventRecordsSecret</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_Id</stringProp>
                  <stringProp name="Argument.value">five</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">id_token token</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">Qwerty12@</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid profile fiver_auth_api offline_access</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">${email1}@yopmail.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.security.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">//connect/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.5.7 CFNetwork/974.2.1 Darwin/18.0.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="access_token" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">access_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="175 /api/member/create" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;email&quot;:&quot;${email1}@yopmail.com&quot;,&quot;firstName&quot;:&quot;${email1}&quot;,&quot;lastName&quot;:&quot;${email1}&quot;,&quot;password&quot;:&quot;Qwerty12@&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/member/create</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.5.7 CFNetwork/974.2.1 Darwin/18.0.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="180 /api/member/update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;gender&quot;:&quot;Male&quot;,&quot;password&quot;:&quot;Qwerty12@&quot;,&quot;firstName&quot;:&quot;${email1}&quot;,&quot;birthDate&quot;:&quot;07\/14\/1983&quot;,&quot;email&quot;:&quot;${email1}@yopmail.com&quot;,&quot;zip&quot;:&quot;55555&quot;,&quot;mobileNumber&quot;:&quot;44518049188657&quot;,&quot;lastName&quot;:&quot;${email1}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/member/update</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.5.7 CFNetwork/974.2.1 Darwin/18.0.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="258 /connect/token" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client_secret" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_secret</stringProp>
                  <stringProp name="Argument.value">dataEventRecordsSecret</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">id_token token</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">Qwerty12@</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_Id</stringProp>
                  <stringProp name="Argument.value">five</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid profile fiver_auth_api offline_access</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">PTappuser500@yopmail.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.security.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/connect/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="false">
            <collectionProp name="AuthManager.auth_list">
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/member/info</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api//v2/Message/UnreadCount</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/state</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/results/getEhrLatest/</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/Order/myOrders</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/v2/StateProfile/5/physicians/primary</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/consultation/all</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/Labtest/all/0</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://maps.google.com/maps/api/geocode/json?address=55555&amp;key=AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/facility/searchnearest</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/appointment/FindAvailableAppointment</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/Payment/creditCards</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/Message/getMessages?PageNumber=0&amp;PageSize=10</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://maps.googleapis.com/maps/api/place/autocomplete/json?key=AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o&amp;input=c</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://maps.googleapis.com/maps/api/place/autocomplete/json?key=AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o&amp;input=c2</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://maps.googleapis.com/maps/api/place/autocomplete/json?key=AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o&amp;input=c21</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://maps.googleapis.com/maps/api/place/autocomplete/json?key=AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o&amp;input=c21r</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://maps.googleapis.com/maps/api/place/autocomplete/json?key=AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o&amp;input=c21re</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://maps.googleapis.com/maps/api/place/autocomplete/json?key=AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o&amp;input=c21ri</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://maps.googleapis.com/maps/api/place/autocomplete/json?key=AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o&amp;input=c21riv</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://maps.googleapis.com/maps/api/place/autocomplete/json?key=AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o&amp;input=c21rive</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://maps.googleapis.com/maps/api/place/autocomplete/json?key=AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o&amp;input=c21river</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://api.stripe.com/v1/tokens</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/member/update</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/Payment/createCustomer/tok_1DgonXB1UwkcYwtq8hDaM6H0</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/document/7</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/document/5</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/document/8</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/appointment/create</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/payment/chargecc</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://qa.api.ursafe.io/api/v2/Order/set</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
            </collectionProp>
          </AuthManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="259 /api/member/info" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/member/info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="260 /api/member/info" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/member/info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="263 /api/member/info" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/member/info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="261 /api/member/info" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/member/info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="264 /api//v2/Message/UnreadCount" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api//v2/Message/UnreadCount</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="262 /api/state" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/state</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="266 /dispatcher.arpc" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="en-US_US&#x0;&#xe;com.apple.geod&#x0;&#xa;12.1.16B92&#x0;&#x0;&#x0;&lt;&#x0;&#x0;&#x2;6&#xa;¡&#x1;&#xa;&#x19;org.safemovement.frontend&#x12;&#x5;2.4.5&#x1a;&#x5;1.6.1&quot;&#x9;iPhone7,1*&#xa;12.1.16B920&#x0;8&#x0;B&#x15;&#x8;ÚÆß¦ã&#x81;ß¤&#x19;&#x10;&#x99;õÈÅ¶³«Äë&#x1;Hðâ©C`&#x1;j(&#x8;&#x12;&#x12;$B145CAA2-B5F3-4C4B-87BF-A235B17F5E80r&#x9;iPhone OS&#x91;&#x1;&#x0;&#x0;&#x80;¹&#x18;&#x88;W@&#x12;%&#xa;&#x2;IN&#x1a;&#x5;en-USJ&#x0;P&#x1;X&#x17;`&#x3;&#x80;&#x1;&#x3;&#x98;&#x1;&#x0;¢&#x6;&#x9;&#x12;&#x0;*&#x5;&#x8;«I&#x10;&#x0;&#x1a;&#x5;en-US*&#x4;&#x8;&#x2;&#x18;&#x5;*&#x4;&#x8;&#x1;&#x18;&#x5;*&#x4;&#x8;&#x5;&#x18;&#x5;*&#x10;&#x8;&#x1f;&#x18;&#x5;*&#xa;ú&#x1;&#x7;&#xa;&#x5;7.2.0*&#x4;&#x8;&#x3;&#x18;&#x1;*&#x4;&#x8;&#x6;&#x18;&#x3;*&#x8;&#x8;&#x9;&#x18;ÿÿÿÿ&#x7;*&#x4;&#x8;&#xa;&#x18;&#x1;*&#x4;&#x8;&#x18;&#x18;&#x1;*&#x4;&#x8;5&#x18;&#x1;*1&#x8;&#xb;&#x18;&#x1;*+Z)*&#xd;&#xa;&#x9;&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;2&#xd;&#xa;&#x9;&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;:&#x9;&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;*&#x4;&#x8;&#x14;&#x18;&#x1;*&#x4;&#x8;&#x16;&#x18;&#x1;*&#x4;&#x8;&#x17;&#x18;&#x6;*&#x4;&#x8;&apos;&#x18;&#x1;*&#x10;&#x8;&#x7;&#x18;&#x3;*&#xa;:&#x8;&#xa;&#x4;&#x8;&lt;&#x10;&lt;&#x10;&#x1;*&#xf;&#x8;$&#x18;&#x3;*&#x9;¢&#x2;&#x6;&#xa;&#x4;&#x8;&lt;&#x10;&lt;*&#x4;&#x8;&#xd;&#x18;&#x1;*!&#x8;&#x1a;&#x18;&#x3;*&#x1b;Ò&#x1;&#x18;&#xa;&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;&#xa;&#x6;&#x8;ø&#x1;&#x10;º&#x1;&#xa;&#x6;&#x8;°&#x9;&#x10; &#x6;*&#x4;&#x8;&#x4;&#x18;&#x1;*&#x4;&#x8;)&#x18;&#x5;*&#x8;&#x8;&#xf;&#x18;ÿÿÿÿ&#x7;*&#x8;&#x8;&#x10;&#x18;ÿÿÿÿ&#x7;*&#x9;&#x8;&#x1e;&#x18;&#x5;*&#x3;ò&#x1;&#x0;*&#x4;&#x8;!&#x18;&#x1;*&#x4;&#x8;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en-US_US&#x0;&#xe;com.apple.geod&#x0;
12.1.16B92&#x0;&#x0;&#x0;&lt;&#x0;&#x0;&#x2;6
¡&#x1;
&#x19;org.safemovement.frontend&#x12;&#x5;2.4.5&#x1a;&#x5;1.6.1&quot;	iPhone7,1*
12.1.16B920&#x0;8&#x0;B&#x15;&#x8;ÚÆß¦ã&#x81;ß¤&#x19;&#x10;&#x99;õÈÅ¶³«Äë&#x1;Hðâ©C`&#x1;j(&#x8;&#x12;&#x12;$B145CAA2-B5F3-4C4B-87BF-A235B17F5E80r	iPhone OS&#x91;&#x1;&#x0;&#x0;&#x80;¹&#x18;&#x88;W@&#x12;%
&#x2;IN&#x1a;&#x5;en-USJ&#x0;P&#x1;X&#x17;`&#x3;&#x80;&#x1;&#x3;&#x98;&#x1;&#x0;¢&#x6;	&#x12;&#x0;*&#x5;&#x8;«I&#x10;&#x0;&#x1a;&#x5;en-US*&#x4;&#x8;&#x2;&#x18;&#x5;*&#x4;&#x8;&#x1;&#x18;&#x5;*&#x4;&#x8;&#x5;&#x18;&#x5;*&#x10;&#x8;&#x1f;&#x18;&#x5;*
ú&#x1;&#x7;
&#x5;7.2.0*&#x4;&#x8;&#x3;&#x18;&#x1;*&#x4;&#x8;&#x6;&#x18;&#x3;*&#x8;&#x8;	&#x18;ÿÿÿÿ&#x7;*&#x4;&#x8;
&#x18;&#x1;*&#x4;&#x8;&#x18;&#x18;&#x1;*&#x4;&#x8;5&#x18;&#x1;*1&#x8;&#xb;&#x18;&#x1;*+Z)*&#xd;
	&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;2&#xd;
	&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;:	&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;*&#x4;&#x8;&#x14;&#x18;&#x1;*&#x4;&#x8;&#x16;&#x18;&#x1;*&#x4;&#x8;&#x17;&#x18;&#x6;*&#x4;&#x8;&apos;&#x18;&#x1;*&#x10;&#x8;&#x7;&#x18;&#x3;*
:&#x8;
&#x4;&#x8;&lt;&#x10;&lt;&#x10;&#x1;*&#xf;&#x8;$&#x18;&#x3;*	¢&#x2;&#x6;
&#x4;&#x8;&lt;&#x10;&lt;*&#x4;&#x8;&#xd;&#x18;&#x1;*!&#x8;&#x1a;&#x18;&#x3;*&#x1b;Ò&#x1;&#x18;
&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;
&#x6;&#x8;ø&#x1;&#x10;º&#x1;
&#x6;&#x8;°	&#x10; &#x6;*&#x4;&#x8;&#x4;&#x18;&#x1;*&#x4;&#x8;)&#x18;&#x5;*&#x8;&#x8;&#xf;&#x18;ÿÿÿÿ&#x7;*&#x8;&#x8;&#x10;&#x18;ÿÿÿÿ&#x7;*	&#x8;&#x1e;&#x18;&#x5;*&#x3;ò&#x1;&#x0;*&#x4;&#x8;!&#x18;&#x1;*&#x4;&#x8;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x18;&#x1;*&#x4;&#x8;0&#x18;&#x1;*&#x4;&#x8;2&#x18;&#x1;*&#x4;&#x8;6&#x18;&#x1;*!&#x8;9&#x18;&#x1;*&#x1b;Ê&#x3;&#x18;&#xa;&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;&#xa;&#x6;&#x8;ø&#x1;&#x10;º&#x1;&#xa;&#x6;&#x8;°&#x9;&#x10; &#x6;8&#x2;B&#xd;&#x12;&#xb;&#x10;&#x5;&quot;&#x7;b&#x5;55555J&#x2;US" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x18;&#x1;*&#x4;&#x8;0&#x18;&#x1;*&#x4;&#x8;2&#x18;&#x1;*&#x4;&#x8;6&#x18;&#x1;*!&#x8;9&#x18;&#x1;*&#x1b;Ê&#x3;&#x18;
&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;
&#x6;&#x8;ø&#x1;&#x10;º&#x1;
&#x6;&#x8;°	&#x10; &#x6;8&#x2;B&#xd;&#x12;&#xb;&#x10;&#x5;&quot;&#x7;b&#x5;55555J&#x2;US</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">gsp-ssl.ls.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/dispatcher.arpc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">geod/1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-msg-priority" elementType="Header">
                  <stringProp name="Header.name">x-msg-priority</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="267 /dispatcher.arpc" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="en-US_US&#x0;&#xe;com.apple.geod&#x0;&#xa;12.1.16B92&#x0;&#x0;&#x0;&lt;&#x0;&#x0;&#x2;6&#xa;¡&#x1;&#xa;&#x19;org.safemovement.frontend&#x12;&#x5;2.4.5&#x1a;&#x5;1.6.1&quot;&#x9;iPhone7,1*&#xa;12.1.16B920&#x0;8&#x0;B&#x15;&#x8;ÚÆß¦ã&#x81;ß¤&#x19;&#x10;&#x99;õÈÅ¶³«Äë&#x1;H&#x92;¿¬C`&#x1;j(&#x8;&#x12;&#x12;$70899656-0B42-49B7-8518-BE4A6A14EAB6r&#x9;iPhone OS&#x91;&#x1;&#x0;&#x0;&#x0;&#x97;ÿ&#x89;W@&#x12;%&#xa;&#x2;IN&#x1a;&#x5;en-USJ&#x0;P&#x1;X&#x17;`&#x3;&#x80;&#x1;&#x3;&#x98;&#x1;&#x0;¢&#x6;&#x9;&#x12;&#x0;*&#x5;&#x8;«I&#x10;&#x0;&#x1a;&#x5;en-US*&#x4;&#x8;&#x2;&#x18;&#x5;*&#x4;&#x8;&#x1;&#x18;&#x5;*&#x4;&#x8;&#x5;&#x18;&#x5;*&#x10;&#x8;&#x1f;&#x18;&#x5;*&#xa;ú&#x1;&#x7;&#xa;&#x5;7.2.0*&#x4;&#x8;&#x3;&#x18;&#x1;*&#x4;&#x8;&#x6;&#x18;&#x3;*&#x8;&#x8;&#x9;&#x18;ÿÿÿÿ&#x7;*&#x4;&#x8;&#xa;&#x18;&#x1;*&#x4;&#x8;&#x18;&#x18;&#x1;*&#x4;&#x8;5&#x18;&#x1;*1&#x8;&#xb;&#x18;&#x1;*+Z)*&#xd;&#xa;&#x9;&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;2&#xd;&#xa;&#x9;&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;:&#x9;&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;*&#x4;&#x8;&#x14;&#x18;&#x1;*&#x4;&#x8;&#x16;&#x18;&#x1;*&#x4;&#x8;&#x17;&#x18;&#x6;*&#x4;&#x8;&apos;&#x18;&#x1;*&#x10;&#x8;&#x7;&#x18;&#x3;*&#xa;:&#x8;&#xa;&#x4;&#x8;&lt;&#x10;&lt;&#x10;&#x1;*&#xf;&#x8;$&#x18;&#x3;*&#x9;¢&#x2;&#x6;&#xa;&#x4;&#x8;&lt;&#x10;&lt;*&#x4;&#x8;&#xd;&#x18;&#x1;*!&#x8;&#x1a;&#x18;&#x3;*&#x1b;Ò&#x1;&#x18;&#xa;&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;&#xa;&#x6;&#x8;ø&#x1;&#x10;º&#x1;&#xa;&#x6;&#x8;°&#x9;&#x10; &#x6;*&#x4;&#x8;&#x4;&#x18;&#x1;*&#x4;&#x8;)&#x18;&#x5;*&#x8;&#x8;&#xf;&#x18;ÿÿÿÿ&#x7;*&#x8;&#x8;&#x10;&#x18;ÿÿÿÿ&#x7;*&#x9;&#x8;&#x1e;&#x18;&#x5;*&#x3;ò&#x1;&#x0;*&#x4;&#x8;!&#x18;&#x1;*&#x4;&#x8;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en-US_US&#x0;&#xe;com.apple.geod&#x0;
12.1.16B92&#x0;&#x0;&#x0;&lt;&#x0;&#x0;&#x2;6
¡&#x1;
&#x19;org.safemovement.frontend&#x12;&#x5;2.4.5&#x1a;&#x5;1.6.1&quot;	iPhone7,1*
12.1.16B920&#x0;8&#x0;B&#x15;&#x8;ÚÆß¦ã&#x81;ß¤&#x19;&#x10;&#x99;õÈÅ¶³«Äë&#x1;H&#x92;¿¬C`&#x1;j(&#x8;&#x12;&#x12;$70899656-0B42-49B7-8518-BE4A6A14EAB6r	iPhone OS&#x91;&#x1;&#x0;&#x0;&#x0;&#x97;ÿ&#x89;W@&#x12;%
&#x2;IN&#x1a;&#x5;en-USJ&#x0;P&#x1;X&#x17;`&#x3;&#x80;&#x1;&#x3;&#x98;&#x1;&#x0;¢&#x6;	&#x12;&#x0;*&#x5;&#x8;«I&#x10;&#x0;&#x1a;&#x5;en-US*&#x4;&#x8;&#x2;&#x18;&#x5;*&#x4;&#x8;&#x1;&#x18;&#x5;*&#x4;&#x8;&#x5;&#x18;&#x5;*&#x10;&#x8;&#x1f;&#x18;&#x5;*
ú&#x1;&#x7;
&#x5;7.2.0*&#x4;&#x8;&#x3;&#x18;&#x1;*&#x4;&#x8;&#x6;&#x18;&#x3;*&#x8;&#x8;	&#x18;ÿÿÿÿ&#x7;*&#x4;&#x8;
&#x18;&#x1;*&#x4;&#x8;&#x18;&#x18;&#x1;*&#x4;&#x8;5&#x18;&#x1;*1&#x8;&#xb;&#x18;&#x1;*+Z)*&#xd;
	&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;2&#xd;
	&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;:	&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;*&#x4;&#x8;&#x14;&#x18;&#x1;*&#x4;&#x8;&#x16;&#x18;&#x1;*&#x4;&#x8;&#x17;&#x18;&#x6;*&#x4;&#x8;&apos;&#x18;&#x1;*&#x10;&#x8;&#x7;&#x18;&#x3;*
:&#x8;
&#x4;&#x8;&lt;&#x10;&lt;&#x10;&#x1;*&#xf;&#x8;$&#x18;&#x3;*	¢&#x2;&#x6;
&#x4;&#x8;&lt;&#x10;&lt;*&#x4;&#x8;&#xd;&#x18;&#x1;*!&#x8;&#x1a;&#x18;&#x3;*&#x1b;Ò&#x1;&#x18;
&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;
&#x6;&#x8;ø&#x1;&#x10;º&#x1;
&#x6;&#x8;°	&#x10; &#x6;*&#x4;&#x8;&#x4;&#x18;&#x1;*&#x4;&#x8;)&#x18;&#x5;*&#x8;&#x8;&#xf;&#x18;ÿÿÿÿ&#x7;*&#x8;&#x8;&#x10;&#x18;ÿÿÿÿ&#x7;*	&#x8;&#x1e;&#x18;&#x5;*&#x3;ò&#x1;&#x0;*&#x4;&#x8;!&#x18;&#x1;*&#x4;&#x8;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x18;&#x1;*&#x4;&#x8;0&#x18;&#x1;*&#x4;&#x8;2&#x18;&#x1;*&#x4;&#x8;6&#x18;&#x1;*!&#x8;9&#x18;&#x1;*&#x1b;Ê&#x3;&#x18;&#xa;&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;&#xa;&#x6;&#x8;ø&#x1;&#x10;º&#x1;&#xa;&#x6;&#x8;°&#x9;&#x10; &#x6;8&#x2;B&#xd;&#x12;&#xb;&#x10;&#x5;&quot;&#x7;b&#x5;55555J&#x2;US" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x18;&#x1;*&#x4;&#x8;0&#x18;&#x1;*&#x4;&#x8;2&#x18;&#x1;*&#x4;&#x8;6&#x18;&#x1;*!&#x8;9&#x18;&#x1;*&#x1b;Ê&#x3;&#x18;
&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;
&#x6;&#x8;ø&#x1;&#x10;º&#x1;
&#x6;&#x8;°	&#x10; &#x6;8&#x2;B&#xd;&#x12;&#xb;&#x10;&#x5;&quot;&#x7;b&#x5;55555J&#x2;US</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">gsp-ssl.ls.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/dispatcher.arpc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">geod/1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-msg-priority" elementType="Header">
                  <stringProp name="Header.name">x-msg-priority</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="268 /dispatcher.arpc" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="en-US_US&#x0;&#xe;com.apple.geod&#x0;&#xa;12.1.16B92&#x0;&#x0;&#x0;&lt;&#x0;&#x0;&#x2;4&#xa;¡&#x1;&#xa;&#x19;org.safemovement.frontend&#x12;&#x5;2.4.5&#x1a;&#x5;1.6.1&quot;&#x9;iPhone7,1*&#xa;12.1.16B920&#x0;8&#x0;B&#x15;&#x8;ÚÆß¦ã&#x81;ß¤&#x19;&#x10;&#x99;õÈÅ¶³«Äë&#x1;HÚÇØC`&#x1;j(&#x8;&#x12;&#x12;$F057C85F-0318-4F6F-8487-5D7A21B24B33r&#x9;iPhone OS&#x91;&#x1;&#x0;&#x0;&#x0;yÍ¨W@&#x12;%&#xa;&#x2;IN&#x1a;&#x5;en-USJ&#x0;P&#x1;X&#x17;`&#x3;&#x80;&#x1;&#x3;&#x98;&#x1;&#x0;¢&#x6;&#x9;&#x12;&#x0;*&#x5;&#x8;«I&#x10;&#x0;&#x1a;&#x5;en-US*&#x4;&#x8;&#x2;&#x18;&#x5;*&#x4;&#x8;&#x1;&#x18;&#x5;*&#x4;&#x8;&#x5;&#x18;&#x5;*&#x10;&#x8;&#x1f;&#x18;&#x5;*&#xa;ú&#x1;&#x7;&#xa;&#x5;7.2.0*&#x4;&#x8;&#x3;&#x18;&#x1;*&#x4;&#x8;&#x6;&#x18;&#x3;*&#x8;&#x8;&#x9;&#x18;ÿÿÿÿ&#x7;*&#x4;&#x8;&#xa;&#x18;&#x1;*&#x4;&#x8;&#x18;&#x18;&#x1;*&#x4;&#x8;5&#x18;&#x1;*1&#x8;&#xb;&#x18;&#x1;*+Z)*&#xd;&#xa;&#x9;&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;2&#xd;&#xa;&#x9;&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;:&#x9;&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;*&#x4;&#x8;&#x14;&#x18;&#x1;*&#x4;&#x8;&#x16;&#x18;&#x1;*&#x4;&#x8;&#x17;&#x18;&#x6;*&#x4;&#x8;&apos;&#x18;&#x1;*&#x10;&#x8;&#x7;&#x18;&#x3;*&#xa;:&#x8;&#xa;&#x4;&#x8;&lt;&#x10;&lt;&#x10;&#x1;*&#xf;&#x8;$&#x18;&#x3;*&#x9;¢&#x2;&#x6;&#xa;&#x4;&#x8;&lt;&#x10;&lt;*&#x4;&#x8;&#xd;&#x18;&#x1;*!&#x8;&#x1a;&#x18;&#x3;*&#x1b;Ò&#x1;&#x18;&#xa;&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;&#xa;&#x6;&#x8;ø&#x1;&#x10;º&#x1;&#xa;&#x6;&#x8;°&#x9;&#x10; &#x6;*&#x4;&#x8;&#x4;&#x18;&#x1;*&#x4;&#x8;)&#x18;&#x5;*&#x8;&#x8;&#xf;&#x18;ÿÿÿÿ&#x7;*&#x8;&#x8;&#x10;&#x18;ÿÿÿÿ&#x7;*&#x9;&#x8;&#x1e;&#x18;&#x5;*&#x3;ò&#x1;&#x0;*&#x4;&#x8;!&#x18;&#x1;*&#x4;&#x8;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en-US_US&#x0;&#xe;com.apple.geod&#x0;
12.1.16B92&#x0;&#x0;&#x0;&lt;&#x0;&#x0;&#x2;4
¡&#x1;
&#x19;org.safemovement.frontend&#x12;&#x5;2.4.5&#x1a;&#x5;1.6.1&quot;	iPhone7,1*
12.1.16B920&#x0;8&#x0;B&#x15;&#x8;ÚÆß¦ã&#x81;ß¤&#x19;&#x10;&#x99;õÈÅ¶³«Äë&#x1;HÚÇØC`&#x1;j(&#x8;&#x12;&#x12;$F057C85F-0318-4F6F-8487-5D7A21B24B33r	iPhone OS&#x91;&#x1;&#x0;&#x0;&#x0;yÍ¨W@&#x12;%
&#x2;IN&#x1a;&#x5;en-USJ&#x0;P&#x1;X&#x17;`&#x3;&#x80;&#x1;&#x3;&#x98;&#x1;&#x0;¢&#x6;	&#x12;&#x0;*&#x5;&#x8;«I&#x10;&#x0;&#x1a;&#x5;en-US*&#x4;&#x8;&#x2;&#x18;&#x5;*&#x4;&#x8;&#x1;&#x18;&#x5;*&#x4;&#x8;&#x5;&#x18;&#x5;*&#x10;&#x8;&#x1f;&#x18;&#x5;*
ú&#x1;&#x7;
&#x5;7.2.0*&#x4;&#x8;&#x3;&#x18;&#x1;*&#x4;&#x8;&#x6;&#x18;&#x3;*&#x8;&#x8;	&#x18;ÿÿÿÿ&#x7;*&#x4;&#x8;
&#x18;&#x1;*&#x4;&#x8;&#x18;&#x18;&#x1;*&#x4;&#x8;5&#x18;&#x1;*1&#x8;&#xb;&#x18;&#x1;*+Z)*&#xd;
	&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;2&#xd;
	&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;:	&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;*&#x4;&#x8;&#x14;&#x18;&#x1;*&#x4;&#x8;&#x16;&#x18;&#x1;*&#x4;&#x8;&#x17;&#x18;&#x6;*&#x4;&#x8;&apos;&#x18;&#x1;*&#x10;&#x8;&#x7;&#x18;&#x3;*
:&#x8;
&#x4;&#x8;&lt;&#x10;&lt;&#x10;&#x1;*&#xf;&#x8;$&#x18;&#x3;*	¢&#x2;&#x6;
&#x4;&#x8;&lt;&#x10;&lt;*&#x4;&#x8;&#xd;&#x18;&#x1;*!&#x8;&#x1a;&#x18;&#x3;*&#x1b;Ò&#x1;&#x18;
&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;
&#x6;&#x8;ø&#x1;&#x10;º&#x1;
&#x6;&#x8;°	&#x10; &#x6;*&#x4;&#x8;&#x4;&#x18;&#x1;*&#x4;&#x8;)&#x18;&#x5;*&#x8;&#x8;&#xf;&#x18;ÿÿÿÿ&#x7;*&#x8;&#x8;&#x10;&#x18;ÿÿÿÿ&#x7;*	&#x8;&#x1e;&#x18;&#x5;*&#x3;ò&#x1;&#x0;*&#x4;&#x8;!&#x18;&#x1;*&#x4;&#x8;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x18;&#x1;*&#x4;&#x8;0&#x18;&#x1;*&#x4;&#x8;2&#x18;&#x1;*&#x4;&#x8;6&#x18;&#x1;*!&#x8;9&#x18;&#x1;*&#x1b;Ê&#x3;&#x18;&#xa;&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;&#xa;&#x6;&#x8;ø&#x1;&#x10;º&#x1;&#xa;&#x6;&#x8;°&#x9;&#x10; &#x6;8&#x2;B&#xb;&#x12;&#x9;&#xa;&#x5;55555&#x10;&#x5;J&#x2;US" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x18;&#x1;*&#x4;&#x8;0&#x18;&#x1;*&#x4;&#x8;2&#x18;&#x1;*&#x4;&#x8;6&#x18;&#x1;*!&#x8;9&#x18;&#x1;*&#x1b;Ê&#x3;&#x18;
&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;
&#x6;&#x8;ø&#x1;&#x10;º&#x1;
&#x6;&#x8;°	&#x10; &#x6;8&#x2;B&#xb;&#x12;	
&#x5;55555&#x10;&#x5;J&#x2;US</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">gsp-ssl.ls.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/dispatcher.arpc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">geod/1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-msg-priority" elementType="Header">
                  <stringProp name="Header.name">x-msg-priority</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="270 /dispatcher.arpc" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="en-US_US&#x0;&#xe;com.apple.geod&#x0;&#xa;12.1.16B92&#x0;&#x0;&#x0;&lt;&#x0;&#x0;&#x2;4&#xa;¡&#x1;&#xa;&#x19;org.safemovement.frontend&#x12;&#x5;2.4.5&#x1a;&#x5;1.6.1&quot;&#x9;iPhone7,1*&#xa;12.1.16B920&#x0;8&#x0;B&#x15;&#x8;ÚÆß¦ã&#x81;ß¤&#x19;&#x10;&#x99;õÈÅ¶³«Äë&#x1;HòÀÙC`&#x1;j(&#x8;&#x12;&#x12;$5797D72F-EAA0-471A-9DB8-C95DBBDA8F06r&#x9;iPhone OS&#x91;&#x1;&#x0;&#x0;&#x0;âv©W@&#x12;%&#xa;&#x2;IN&#x1a;&#x5;en-USJ&#x0;P&#x1;X&#x17;`&#x3;&#x80;&#x1;&#x3;&#x98;&#x1;&#x0;¢&#x6;&#x9;&#x12;&#x0;*&#x5;&#x8;«I&#x10;&#x0;&#x1a;&#x5;en-US*&#x4;&#x8;&#x2;&#x18;&#x5;*&#x4;&#x8;&#x1;&#x18;&#x5;*&#x4;&#x8;&#x5;&#x18;&#x5;*&#x10;&#x8;&#x1f;&#x18;&#x5;*&#xa;ú&#x1;&#x7;&#xa;&#x5;7.2.0*&#x4;&#x8;&#x3;&#x18;&#x1;*&#x4;&#x8;&#x6;&#x18;&#x3;*&#x8;&#x8;&#x9;&#x18;ÿÿÿÿ&#x7;*&#x4;&#x8;&#xa;&#x18;&#x1;*&#x4;&#x8;&#x18;&#x18;&#x1;*&#x4;&#x8;5&#x18;&#x1;*1&#x8;&#xb;&#x18;&#x1;*+Z)*&#xd;&#xa;&#x9;&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;2&#xd;&#xa;&#x9;&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;:&#x9;&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;*&#x4;&#x8;&#x14;&#x18;&#x1;*&#x4;&#x8;&#x16;&#x18;&#x1;*&#x4;&#x8;&#x17;&#x18;&#x6;*&#x4;&#x8;&apos;&#x18;&#x1;*&#x10;&#x8;&#x7;&#x18;&#x3;*&#xa;:&#x8;&#xa;&#x4;&#x8;&lt;&#x10;&lt;&#x10;&#x1;*&#xf;&#x8;$&#x18;&#x3;*&#x9;¢&#x2;&#x6;&#xa;&#x4;&#x8;&lt;&#x10;&lt;*&#x4;&#x8;&#xd;&#x18;&#x1;*!&#x8;&#x1a;&#x18;&#x3;*&#x1b;Ò&#x1;&#x18;&#xa;&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;&#xa;&#x6;&#x8;ø&#x1;&#x10;º&#x1;&#xa;&#x6;&#x8;°&#x9;&#x10; &#x6;*&#x4;&#x8;&#x4;&#x18;&#x1;*&#x4;&#x8;)&#x18;&#x5;*&#x8;&#x8;&#xf;&#x18;ÿÿÿÿ&#x7;*&#x8;&#x8;&#x10;&#x18;ÿÿÿÿ&#x7;*&#x9;&#x8;&#x1e;&#x18;&#x5;*&#x3;ò&#x1;&#x0;*&#x4;&#x8;!&#x18;&#x1;*&#x4;&#x8;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en-US_US&#x0;&#xe;com.apple.geod&#x0;
12.1.16B92&#x0;&#x0;&#x0;&lt;&#x0;&#x0;&#x2;4
¡&#x1;
&#x19;org.safemovement.frontend&#x12;&#x5;2.4.5&#x1a;&#x5;1.6.1&quot;	iPhone7,1*
12.1.16B920&#x0;8&#x0;B&#x15;&#x8;ÚÆß¦ã&#x81;ß¤&#x19;&#x10;&#x99;õÈÅ¶³«Äë&#x1;HòÀÙC`&#x1;j(&#x8;&#x12;&#x12;$5797D72F-EAA0-471A-9DB8-C95DBBDA8F06r	iPhone OS&#x91;&#x1;&#x0;&#x0;&#x0;âv©W@&#x12;%
&#x2;IN&#x1a;&#x5;en-USJ&#x0;P&#x1;X&#x17;`&#x3;&#x80;&#x1;&#x3;&#x98;&#x1;&#x0;¢&#x6;	&#x12;&#x0;*&#x5;&#x8;«I&#x10;&#x0;&#x1a;&#x5;en-US*&#x4;&#x8;&#x2;&#x18;&#x5;*&#x4;&#x8;&#x1;&#x18;&#x5;*&#x4;&#x8;&#x5;&#x18;&#x5;*&#x10;&#x8;&#x1f;&#x18;&#x5;*
ú&#x1;&#x7;
&#x5;7.2.0*&#x4;&#x8;&#x3;&#x18;&#x1;*&#x4;&#x8;&#x6;&#x18;&#x3;*&#x8;&#x8;	&#x18;ÿÿÿÿ&#x7;*&#x4;&#x8;
&#x18;&#x1;*&#x4;&#x8;&#x18;&#x18;&#x1;*&#x4;&#x8;5&#x18;&#x1;*1&#x8;&#xb;&#x18;&#x1;*+Z)*&#xd;
	&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;2&#xd;
	&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;:	&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;*&#x4;&#x8;&#x14;&#x18;&#x1;*&#x4;&#x8;&#x16;&#x18;&#x1;*&#x4;&#x8;&#x17;&#x18;&#x6;*&#x4;&#x8;&apos;&#x18;&#x1;*&#x10;&#x8;&#x7;&#x18;&#x3;*
:&#x8;
&#x4;&#x8;&lt;&#x10;&lt;&#x10;&#x1;*&#xf;&#x8;$&#x18;&#x3;*	¢&#x2;&#x6;
&#x4;&#x8;&lt;&#x10;&lt;*&#x4;&#x8;&#xd;&#x18;&#x1;*!&#x8;&#x1a;&#x18;&#x3;*&#x1b;Ò&#x1;&#x18;
&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;
&#x6;&#x8;ø&#x1;&#x10;º&#x1;
&#x6;&#x8;°	&#x10; &#x6;*&#x4;&#x8;&#x4;&#x18;&#x1;*&#x4;&#x8;)&#x18;&#x5;*&#x8;&#x8;&#xf;&#x18;ÿÿÿÿ&#x7;*&#x8;&#x8;&#x10;&#x18;ÿÿÿÿ&#x7;*	&#x8;&#x1e;&#x18;&#x5;*&#x3;ò&#x1;&#x0;*&#x4;&#x8;!&#x18;&#x1;*&#x4;&#x8;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x18;&#x1;*&#x4;&#x8;0&#x18;&#x1;*&#x4;&#x8;2&#x18;&#x1;*&#x4;&#x8;6&#x18;&#x1;*!&#x8;9&#x18;&#x1;*&#x1b;Ê&#x3;&#x18;&#xa;&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;&#xa;&#x6;&#x8;ø&#x1;&#x10;º&#x1;&#xa;&#x6;&#x8;°&#x9;&#x10; &#x6;8&#x2;B&#xb;&#x12;&#x9;&#xa;&#x5;55555&#x10;&#x5;J&#x2;US" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x18;&#x1;*&#x4;&#x8;0&#x18;&#x1;*&#x4;&#x8;2&#x18;&#x1;*&#x4;&#x8;6&#x18;&#x1;*!&#x8;9&#x18;&#x1;*&#x1b;Ê&#x3;&#x18;
&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;
&#x6;&#x8;ø&#x1;&#x10;º&#x1;
&#x6;&#x8;°	&#x10; &#x6;8&#x2;B&#xb;&#x12;	
&#x5;55555&#x10;&#x5;J&#x2;US</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">gsp-ssl.ls.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/dispatcher.arpc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">geod/1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-msg-priority" elementType="Header">
                  <stringProp name="Header.name">x-msg-priority</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="269 /dispatcher.arpc" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="en-US_US&#x0;&#xe;com.apple.geod&#x0;&#xa;12.1.16B92&#x0;&#x0;&#x0;&lt;&#x0;&#x0;&#x2;4&#xa;¡&#x1;&#xa;&#x19;org.safemovement.frontend&#x12;&#x5;2.4.5&#x1a;&#x5;1.6.1&quot;&#x9;iPhone7,1*&#xa;12.1.16B920&#x0;8&#x0;B&#x15;&#x8;ÚÆß¦ã&#x81;ß¤&#x19;&#x10;&#x99;õÈÅ¶³«Äë&#x1;H&#x87;ÎÛC`&#x1;j(&#x8;&#x12;&#x12;$BADCC025-03E6-49F5-A8AD-138595E116D3r&#x9;iPhone OS&#x91;&#x1;&#x0;&#x0;&#x80;0ïªW@&#x12;%&#xa;&#x2;IN&#x1a;&#x5;en-USJ&#x0;P&#x1;X&#x17;`&#x3;&#x80;&#x1;&#x3;&#x98;&#x1;&#x0;¢&#x6;&#x9;&#x12;&#x0;*&#x5;&#x8;«I&#x10;&#x0;&#x1a;&#x5;en-US*&#x4;&#x8;&#x2;&#x18;&#x5;*&#x4;&#x8;&#x1;&#x18;&#x5;*&#x4;&#x8;&#x5;&#x18;&#x5;*&#x10;&#x8;&#x1f;&#x18;&#x5;*&#xa;ú&#x1;&#x7;&#xa;&#x5;7.2.0*&#x4;&#x8;&#x3;&#x18;&#x1;*&#x4;&#x8;&#x6;&#x18;&#x3;*&#x8;&#x8;&#x9;&#x18;ÿÿÿÿ&#x7;*&#x4;&#x8;&#xa;&#x18;&#x1;*&#x4;&#x8;&#x18;&#x18;&#x1;*&#x4;&#x8;5&#x18;&#x1;*1&#x8;&#xb;&#x18;&#x1;*+Z)*&#xd;&#xa;&#x9;&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;2&#xd;&#xa;&#x9;&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;:&#x9;&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;*&#x4;&#x8;&#x14;&#x18;&#x1;*&#x4;&#x8;&#x16;&#x18;&#x1;*&#x4;&#x8;&#x17;&#x18;&#x6;*&#x4;&#x8;&apos;&#x18;&#x1;*&#x10;&#x8;&#x7;&#x18;&#x3;*&#xa;:&#x8;&#xa;&#x4;&#x8;&lt;&#x10;&lt;&#x10;&#x1;*&#xf;&#x8;$&#x18;&#x3;*&#x9;¢&#x2;&#x6;&#xa;&#x4;&#x8;&lt;&#x10;&lt;*&#x4;&#x8;&#xd;&#x18;&#x1;*!&#x8;&#x1a;&#x18;&#x3;*&#x1b;Ò&#x1;&#x18;&#xa;&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;&#xa;&#x6;&#x8;ø&#x1;&#x10;º&#x1;&#xa;&#x6;&#x8;°&#x9;&#x10; &#x6;*&#x4;&#x8;&#x4;&#x18;&#x1;*&#x4;&#x8;)&#x18;&#x5;*&#x8;&#x8;&#xf;&#x18;ÿÿÿÿ&#x7;*&#x8;&#x8;&#x10;&#x18;ÿÿÿÿ&#x7;*&#x9;&#x8;&#x1e;&#x18;&#x5;*&#x3;ò&#x1;&#x0;*&#x4;&#x8;!&#x18;&#x1;*&#x4;&#x8;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en-US_US&#x0;&#xe;com.apple.geod&#x0;
12.1.16B92&#x0;&#x0;&#x0;&lt;&#x0;&#x0;&#x2;4
¡&#x1;
&#x19;org.safemovement.frontend&#x12;&#x5;2.4.5&#x1a;&#x5;1.6.1&quot;	iPhone7,1*
12.1.16B920&#x0;8&#x0;B&#x15;&#x8;ÚÆß¦ã&#x81;ß¤&#x19;&#x10;&#x99;õÈÅ¶³«Äë&#x1;H&#x87;ÎÛC`&#x1;j(&#x8;&#x12;&#x12;$BADCC025-03E6-49F5-A8AD-138595E116D3r	iPhone OS&#x91;&#x1;&#x0;&#x0;&#x80;0ïªW@&#x12;%
&#x2;IN&#x1a;&#x5;en-USJ&#x0;P&#x1;X&#x17;`&#x3;&#x80;&#x1;&#x3;&#x98;&#x1;&#x0;¢&#x6;	&#x12;&#x0;*&#x5;&#x8;«I&#x10;&#x0;&#x1a;&#x5;en-US*&#x4;&#x8;&#x2;&#x18;&#x5;*&#x4;&#x8;&#x1;&#x18;&#x5;*&#x4;&#x8;&#x5;&#x18;&#x5;*&#x10;&#x8;&#x1f;&#x18;&#x5;*
ú&#x1;&#x7;
&#x5;7.2.0*&#x4;&#x8;&#x3;&#x18;&#x1;*&#x4;&#x8;&#x6;&#x18;&#x3;*&#x8;&#x8;	&#x18;ÿÿÿÿ&#x7;*&#x4;&#x8;
&#x18;&#x1;*&#x4;&#x8;&#x18;&#x18;&#x1;*&#x4;&#x8;5&#x18;&#x1;*1&#x8;&#xb;&#x18;&#x1;*+Z)*&#xd;
	&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;2&#xd;
	&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;:	&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;*&#x4;&#x8;&#x14;&#x18;&#x1;*&#x4;&#x8;&#x16;&#x18;&#x1;*&#x4;&#x8;&#x17;&#x18;&#x6;*&#x4;&#x8;&apos;&#x18;&#x1;*&#x10;&#x8;&#x7;&#x18;&#x3;*
:&#x8;
&#x4;&#x8;&lt;&#x10;&lt;&#x10;&#x1;*&#xf;&#x8;$&#x18;&#x3;*	¢&#x2;&#x6;
&#x4;&#x8;&lt;&#x10;&lt;*&#x4;&#x8;&#xd;&#x18;&#x1;*!&#x8;&#x1a;&#x18;&#x3;*&#x1b;Ò&#x1;&#x18;
&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;
&#x6;&#x8;ø&#x1;&#x10;º&#x1;
&#x6;&#x8;°	&#x10; &#x6;*&#x4;&#x8;&#x4;&#x18;&#x1;*&#x4;&#x8;)&#x18;&#x5;*&#x8;&#x8;&#xf;&#x18;ÿÿÿÿ&#x7;*&#x8;&#x8;&#x10;&#x18;ÿÿÿÿ&#x7;*	&#x8;&#x1e;&#x18;&#x5;*&#x3;ò&#x1;&#x0;*&#x4;&#x8;!&#x18;&#x1;*&#x4;&#x8;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x18;&#x1;*&#x4;&#x8;0&#x18;&#x1;*&#x4;&#x8;2&#x18;&#x1;*&#x4;&#x8;6&#x18;&#x1;*!&#x8;9&#x18;&#x1;*&#x1b;Ê&#x3;&#x18;&#xa;&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;&#xa;&#x6;&#x8;ø&#x1;&#x10;º&#x1;&#xa;&#x6;&#x8;°&#x9;&#x10; &#x6;8&#x2;B&#xb;&#x12;&#x9;&#xa;&#x5;55555&#x10;&#x5;J&#x2;US" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x18;&#x1;*&#x4;&#x8;0&#x18;&#x1;*&#x4;&#x8;2&#x18;&#x1;*&#x4;&#x8;6&#x18;&#x1;*!&#x8;9&#x18;&#x1;*&#x1b;Ê&#x3;&#x18;
&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;
&#x6;&#x8;ø&#x1;&#x10;º&#x1;
&#x6;&#x8;°	&#x10; &#x6;8&#x2;B&#xb;&#x12;	
&#x5;55555&#x10;&#x5;J&#x2;US</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">gsp-ssl.ls.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/dispatcher.arpc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">geod/1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-msg-priority" elementType="Header">
                  <stringProp name="Header.name">x-msg-priority</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="271 /dispatcher.arpc" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="en-US_US&#x0;&#xe;com.apple.geod&#x0;&#xa;12.1.16B92&#x0;&#x0;&#x0;&lt;&#x0;&#x0;&#x2;4&#xa;¡&#x1;&#xa;&#x19;org.safemovement.frontend&#x12;&#x5;2.4.5&#x1a;&#x5;1.6.1&quot;&#x9;iPhone7,1*&#xa;12.1.16B920&#x0;8&#x0;B&#x15;&#x8;ÚÆß¦ã&#x81;ß¤&#x19;&#x10;&#x99;õÈÅ¶³«Äë&#x1;H©àÛC`&#x1;j(&#x8;&#x12;&#x12;$D54646FE-18BF-41F3-8F54-9E16F7C75F56r&#x9;iPhone OS&#x91;&#x1;&#x0;&#x0;&#x80;·&#x8;«W@&#x12;%&#xa;&#x2;IN&#x1a;&#x5;en-USJ&#x0;P&#x1;X&#x17;`&#x3;&#x80;&#x1;&#x3;&#x98;&#x1;&#x0;¢&#x6;&#x9;&#x12;&#x0;*&#x5;&#x8;«I&#x10;&#x0;&#x1a;&#x5;en-US*&#x4;&#x8;&#x2;&#x18;&#x5;*&#x4;&#x8;&#x1;&#x18;&#x5;*&#x4;&#x8;&#x5;&#x18;&#x5;*&#x10;&#x8;&#x1f;&#x18;&#x5;*&#xa;ú&#x1;&#x7;&#xa;&#x5;7.2.0*&#x4;&#x8;&#x3;&#x18;&#x1;*&#x4;&#x8;&#x6;&#x18;&#x3;*&#x8;&#x8;&#x9;&#x18;ÿÿÿÿ&#x7;*&#x4;&#x8;&#xa;&#x18;&#x1;*&#x4;&#x8;&#x18;&#x18;&#x1;*&#x4;&#x8;5&#x18;&#x1;*1&#x8;&#xb;&#x18;&#x1;*+Z)*&#xd;&#xa;&#x9;&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;2&#xd;&#xa;&#x9;&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;:&#x9;&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;*&#x4;&#x8;&#x14;&#x18;&#x1;*&#x4;&#x8;&#x16;&#x18;&#x1;*&#x4;&#x8;&#x17;&#x18;&#x6;*&#x4;&#x8;&apos;&#x18;&#x1;*&#x10;&#x8;&#x7;&#x18;&#x3;*&#xa;:&#x8;&#xa;&#x4;&#x8;&lt;&#x10;&lt;&#x10;&#x1;*&#xf;&#x8;$&#x18;&#x3;*&#x9;¢&#x2;&#x6;&#xa;&#x4;&#x8;&lt;&#x10;&lt;*&#x4;&#x8;&#xd;&#x18;&#x1;*!&#x8;&#x1a;&#x18;&#x3;*&#x1b;Ò&#x1;&#x18;&#xa;&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;&#xa;&#x6;&#x8;ø&#x1;&#x10;º&#x1;&#xa;&#x6;&#x8;°&#x9;&#x10; &#x6;*&#x4;&#x8;&#x4;&#x18;&#x1;*&#x4;&#x8;)&#x18;&#x5;*&#x8;&#x8;&#xf;&#x18;ÿÿÿÿ&#x7;*&#x8;&#x8;&#x10;&#x18;ÿÿÿÿ&#x7;*&#x9;&#x8;&#x1e;&#x18;&#x5;*&#x3;ò&#x1;&#x0;*&#x4;&#x8;!&#x18;&#x1;*&#x4;&#x8;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en-US_US&#x0;&#xe;com.apple.geod&#x0;
12.1.16B92&#x0;&#x0;&#x0;&lt;&#x0;&#x0;&#x2;4
¡&#x1;
&#x19;org.safemovement.frontend&#x12;&#x5;2.4.5&#x1a;&#x5;1.6.1&quot;	iPhone7,1*
12.1.16B920&#x0;8&#x0;B&#x15;&#x8;ÚÆß¦ã&#x81;ß¤&#x19;&#x10;&#x99;õÈÅ¶³«Äë&#x1;H©àÛC`&#x1;j(&#x8;&#x12;&#x12;$D54646FE-18BF-41F3-8F54-9E16F7C75F56r	iPhone OS&#x91;&#x1;&#x0;&#x0;&#x80;·&#x8;«W@&#x12;%
&#x2;IN&#x1a;&#x5;en-USJ&#x0;P&#x1;X&#x17;`&#x3;&#x80;&#x1;&#x3;&#x98;&#x1;&#x0;¢&#x6;	&#x12;&#x0;*&#x5;&#x8;«I&#x10;&#x0;&#x1a;&#x5;en-US*&#x4;&#x8;&#x2;&#x18;&#x5;*&#x4;&#x8;&#x1;&#x18;&#x5;*&#x4;&#x8;&#x5;&#x18;&#x5;*&#x10;&#x8;&#x1f;&#x18;&#x5;*
ú&#x1;&#x7;
&#x5;7.2.0*&#x4;&#x8;&#x3;&#x18;&#x1;*&#x4;&#x8;&#x6;&#x18;&#x3;*&#x8;&#x8;	&#x18;ÿÿÿÿ&#x7;*&#x4;&#x8;
&#x18;&#x1;*&#x4;&#x8;&#x18;&#x18;&#x1;*&#x4;&#x8;5&#x18;&#x1;*1&#x8;&#xb;&#x18;&#x1;*+Z)*&#xd;
	&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;2&#xd;
	&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;:	&#x8;&#x99;&#x87;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;*&#x4;&#x8;&#x14;&#x18;&#x1;*&#x4;&#x8;&#x16;&#x18;&#x1;*&#x4;&#x8;&#x17;&#x18;&#x6;*&#x4;&#x8;&apos;&#x18;&#x1;*&#x10;&#x8;&#x7;&#x18;&#x3;*
:&#x8;
&#x4;&#x8;&lt;&#x10;&lt;&#x10;&#x1;*&#xf;&#x8;$&#x18;&#x3;*	¢&#x2;&#x6;
&#x4;&#x8;&lt;&#x10;&lt;*&#x4;&#x8;&#xd;&#x18;&#x1;*!&#x8;&#x1a;&#x18;&#x3;*&#x1b;Ò&#x1;&#x18;
&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;
&#x6;&#x8;ø&#x1;&#x10;º&#x1;
&#x6;&#x8;°	&#x10; &#x6;*&#x4;&#x8;&#x4;&#x18;&#x1;*&#x4;&#x8;)&#x18;&#x5;*&#x8;&#x8;&#xf;&#x18;ÿÿÿÿ&#x7;*&#x8;&#x8;&#x10;&#x18;ÿÿÿÿ&#x7;*	&#x8;&#x1e;&#x18;&#x5;*&#x3;ò&#x1;&#x0;*&#x4;&#x8;!&#x18;&#x1;*&#x4;&#x8;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x18;&#x1;*&#x4;&#x8;0&#x18;&#x1;*&#x4;&#x8;2&#x18;&#x1;*&#x4;&#x8;6&#x18;&#x1;*!&#x8;9&#x18;&#x1;*&#x1b;Ê&#x3;&#x18;&#xa;&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;&#xa;&#x6;&#x8;ø&#x1;&#x10;º&#x1;&#xa;&#x6;&#x8;°&#x9;&#x10; &#x6;8&#x2;B&#xb;&#x12;&#x9;&#xa;&#x5;55555&#x10;&#x5;J&#x2;US" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x18;&#x1;*&#x4;&#x8;0&#x18;&#x1;*&#x4;&#x8;2&#x18;&#x1;*&#x4;&#x8;6&#x18;&#x1;*!&#x8;9&#x18;&#x1;*&#x1b;Ê&#x3;&#x18;
&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;
&#x6;&#x8;ø&#x1;&#x10;º&#x1;
&#x6;&#x8;°	&#x10; &#x6;8&#x2;B&#xb;&#x12;	
&#x5;55555&#x10;&#x5;J&#x2;US</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">gsp-ssl.ls.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/dispatcher.arpc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">geod/1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-msg-priority" elementType="Header">
                  <stringProp name="Header.name">x-msg-priority</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="265 /api/results/getEhrLatest/" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/results/getEhrLatest/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="272 /api/Order/myOrders" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/Order/myOrders</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="273 /api/v2/StateProfile/5/physicians/primary" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v2/StateProfile/5/physicians/primary</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="274 /api/consultation/all" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/consultation/all</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="275 /gtvcdn/video/93534.MP4" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">s3-us-west-1.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/gtvcdn/video/93534.MP4</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Playback-Session-Id" elementType="Header">
                  <stringProp name="Header.name">X-Playback-Session-Id</stringProp>
                  <stringProp name="Header.value">3BF7A057-3BBE-4287-9A7D-19FA77F9F710</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Range" elementType="Header">
                  <stringProp name="Header.name">Range</stringProp>
                  <stringProp name="Header.value">bytes=0-1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">AppleCoreMedia/1.0.0.16B92 (iPhone; U; CPU OS 12_1 like Mac OS X; en_us)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="276 /api/v2/StateProfile/5/physicians/primary" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v2/StateProfile/5/physicians/primary</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="278 /api/Labtest/all/0" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/Labtest/all/0</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="279 /geo_manifest/dynamic/config" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="application" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">application</stringProp>
                  <stringProp name="Argument.value">geod</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="application_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">application_version</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="country_code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">country_code</stringProp>
                  <stringProp name="Argument.value">IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hardware" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hardware</stringProp>
                  <stringProp name="Argument.value">iPhone7,1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="os" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">os</stringProp>
                  <stringProp name="Argument.value">ios</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="os_build" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">os_build</stringProp>
                  <stringProp name="Argument.value">16B92</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="os_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">os_version</stringProp>
                  <stringProp name="Argument.value">12.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">gspe35-ssl.ls.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/geo_manifest/dynamic/config</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">geod/1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="280 /maps/api/geocode/json" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="address" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">address</stringProp>
                  <stringProp name="Argument.value">55555</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">maps.google.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/maps/api/geocode/json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="283 /tile.vf" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">gspe19-ssl.ls.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/tile.vf</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Maps-Tile-Y" elementType="Header">
                  <stringProp name="Header.name">Maps-Tile-Y</stringProp>
                  <stringProp name="Header.value">373</stringProp>
                </elementProp>
                <elementProp name="Maps-Tile-Z" elementType="Header">
                  <stringProp name="Header.name">Maps-Tile-Z</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="Maps-Tile-Style" elementType="Header">
                  <stringProp name="Header.name">Maps-Tile-Style</stringProp>
                  <stringProp name="Header.value">flags=3&amp;style=13&amp;size=2&amp;scale=0&amp;v=11281053</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Maps-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Maps-Auth-Token</stringProp>
                  <stringProp name="Header.value">KIpDG8IwlcYyIbn7MNkV362SA9VK0s4AFhnwOhaTq7A=</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">16B92</stringProp>
                </elementProp>
                <elementProp name="Maps-Tile-X" elementType="Header">
                  <stringProp name="Header.name">Maps-Tile-X</stringProp>
                  <stringProp name="Header.value">286</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="284 /tile.vf" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">gspe19-ssl.ls.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/tile.vf</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Maps-Tile-Y" elementType="Header">
                  <stringProp name="Header.name">Maps-Tile-Y</stringProp>
                  <stringProp name="Header.value">373</stringProp>
                </elementProp>
                <elementProp name="Maps-Tile-Z" elementType="Header">
                  <stringProp name="Header.name">Maps-Tile-Z</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="Maps-Tile-Style" elementType="Header">
                  <stringProp name="Header.name">Maps-Tile-Style</stringProp>
                  <stringProp name="Header.value">flags=3&amp;style=1&amp;size=2&amp;scale=0&amp;v=11281053&amp;lang=en</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Maps-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Maps-Auth-Token</stringProp>
                  <stringProp name="Header.value">KIpDG8IwlcYyIbn7MNkV362SA9VK0s4AFhnwOhaTq7A=</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">16B92</stringProp>
                </elementProp>
                <elementProp name="Maps-Tile-X" elementType="Header">
                  <stringProp name="Header.name">Maps-Tile-X</stringProp>
                  <stringProp name="Header.value">285</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="285 /tile.vf" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">gspe19-ssl.ls.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/tile.vf</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Maps-Tile-Y" elementType="Header">
                  <stringProp name="Header.name">Maps-Tile-Y</stringProp>
                  <stringProp name="Header.value">373</stringProp>
                </elementProp>
                <elementProp name="Maps-Tile-Z" elementType="Header">
                  <stringProp name="Header.name">Maps-Tile-Z</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="Maps-Tile-Style" elementType="Header">
                  <stringProp name="Header.name">Maps-Tile-Style</stringProp>
                  <stringProp name="Header.value">flags=3&amp;style=13&amp;size=2&amp;scale=0&amp;v=11281053&amp;lang=en</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Maps-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Maps-Auth-Token</stringProp>
                  <stringProp name="Header.value">KIpDG8IwlcYyIbn7MNkV362SA9VK0s4AFhnwOhaTq7A=</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">16B92</stringProp>
                </elementProp>
                <elementProp name="Maps-Tile-X" elementType="Header">
                  <stringProp name="Header.name">Maps-Tile-X</stringProp>
                  <stringProp name="Header.value">285</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="286 /tile.vf" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">gspe19-ssl.ls.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/tile.vf</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Maps-Tile-Y" elementType="Header">
                  <stringProp name="Header.name">Maps-Tile-Y</stringProp>
                  <stringProp name="Header.value">373</stringProp>
                </elementProp>
                <elementProp name="Maps-Tile-Z" elementType="Header">
                  <stringProp name="Header.name">Maps-Tile-Z</stringProp>
                  <stringProp name="Header.value">10</stringProp>
                </elementProp>
                <elementProp name="Maps-Tile-Style" elementType="Header">
                  <stringProp name="Header.name">Maps-Tile-Style</stringProp>
                  <stringProp name="Header.value">flags=3&amp;style=20&amp;size=2&amp;scale=0&amp;v=11281054</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Maps-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Maps-Auth-Token</stringProp>
                  <stringProp name="Header.value">o1Z0hJAyfi75OSnjKK9zCEJDjym8K8mvvMxjaSPwlJM=</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">16B92</stringProp>
                </elementProp>
                <elementProp name="Maps-Tile-X" elementType="Header">
                  <stringProp name="Header.name">Maps-Tile-X</stringProp>
                  <stringProp name="Header.value">285</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="282 /api/facility/searchnearest" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;maxResults&quot;:50,&quot;maxRadius&quot;:100,&quot;term&quot;:&quot;&quot;,&quot;latitude&quot;:43.727822099999997,&quot;longitude&quot;:-79.479372400000003}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/facility/searchnearest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="281 /api/facility/searchnearest" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;maxResults&quot;:50,&quot;maxRadius&quot;:100,&quot;term&quot;:&quot;&quot;,&quot;latitude&quot;:43.727822099999997,&quot;longitude&quot;:-79.479372400000003}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/facility/searchnearest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="303 /api/appointment/FindAvailableAppointment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;toDate&quot;:&quot;15 Jan 2019&quot;,&quot;siteCode&quot;:&quot;${key}&quot;,&quot;fromDate&quot;:&quot;20 Dec 2018&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/appointment/FindAvailableAppointment</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="date" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">date</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;date&quot;:&quot;(.+?)T</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NO</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hour" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">hour</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;hour&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">time_NOT_FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="min" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">min</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;min&quot;:(.+?)}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">time_NOT_FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="316 /api/Payment/creditCards" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/Payment/creditCards</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="317 /api/Payment/creditCards" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Payment/creditCards</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="277 /gtvcdn/video/93534.MP4" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">s3-us-west-1.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/gtvcdn/video/93534.MP4</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Playback-Session-Id" elementType="Header">
                  <stringProp name="Header.name">X-Playback-Session-Id</stringProp>
                  <stringProp name="Header.value">3BF7A057-3BBE-4287-9A7D-19FA77F9F710</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Range" elementType="Header">
                  <stringProp name="Header.name">Range</stringProp>
                  <stringProp name="Header.value">bytes=262144-11859629</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">AppleCoreMedia/1.0.0.16B92 (iPhone; U; CPU OS 12_1 like Mac OS X; en_us)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="318 /gtvcdn/video/93534.MP4" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">s3-us-west-1.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/gtvcdn/video/93534.MP4</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Playback-Session-Id" elementType="Header">
                  <stringProp name="Header.name">X-Playback-Session-Id</stringProp>
                  <stringProp name="Header.value">3BF7A057-3BBE-4287-9A7D-19FA77F9F710</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Range" elementType="Header">
                  <stringProp name="Header.name">Range</stringProp>
                  <stringProp name="Header.value">bytes=278528-11859629</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">AppleCoreMedia/1.0.0.16B92 (iPhone; U; CPU OS 12_1 like Mac OS X; en_us)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="319 /api/Message/getMessages" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="PageNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">PageNumber</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="PageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">PageSize</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/Message/getMessages</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="320 /maps/api/place/autocomplete/json" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="input" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">input</stringProp>
                  <stringProp name="Argument.value">c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">maps.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/maps/api/place/autocomplete/json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="321 /maps/api/place/autocomplete/json" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="input" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">input</stringProp>
                  <stringProp name="Argument.value">c2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">maps.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/maps/api/place/autocomplete/json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="322 /maps/api/place/autocomplete/json" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="input" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">input</stringProp>
                  <stringProp name="Argument.value">c21</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">maps.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/maps/api/place/autocomplete/json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="323 /maps/api/place/autocomplete/json" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="input" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">input</stringProp>
                  <stringProp name="Argument.value">c21r</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">maps.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/maps/api/place/autocomplete/json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="324 /maps/api/place/autocomplete/json" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="input" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">input</stringProp>
                  <stringProp name="Argument.value">c21re</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">maps.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/maps/api/place/autocomplete/json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="325 /maps/api/place/autocomplete/json" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="input" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">input</stringProp>
                  <stringProp name="Argument.value">c21r</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">maps.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/maps/api/place/autocomplete/json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="326 /maps/api/place/autocomplete/json" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="input" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">input</stringProp>
                  <stringProp name="Argument.value">c21ri</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">maps.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/maps/api/place/autocomplete/json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="327 /maps/api/place/autocomplete/json" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="input" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">input</stringProp>
                  <stringProp name="Argument.value">c21riv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">maps.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/maps/api/place/autocomplete/json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="328 /maps/api/place/autocomplete/json" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="input" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">input</stringProp>
                  <stringProp name="Argument.value">c21rive</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">maps.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/maps/api/place/autocomplete/json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="329 /maps/api/place/autocomplete/json" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="input" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">input</stringProp>
                  <stringProp name="Argument.value">c21river</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">maps.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/maps/api/place/autocomplete/json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="330 /placesios/v1/getPlaceById?prettyPrint=false&amp;key=AIzaSyDa3el7QIULDAuCJn6edoTLF8ecdVpetqE" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;placeIds&quot;:[&quot;ChIJxZrqu03l94cRd2WcnoCNW1E&quot;],&quot;header&quot;:{&quot;locale&quot;:&quot;en-US&quot;,&quot;context&quot;:{&quot;source&quot;:&quot;programmaticApi&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/placesios/v1/getPlaceById?prettyPrint=false&amp;key=AIzaSyDa3el7QIULDAuCJn6edoTLF8ecdVpetqE</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Ios-Bundle-Identifier" elementType="Header">
                  <stringProp name="Header.name">X-Ios-Bundle-Identifier</stringProp>
                  <stringProp name="Header.value">org.safemovement.frontend</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">org.safemovement.frontend/2.4.5 google-api-objc-client/3.0 iPhone/12.1 hw/iPhone7_1 GoogleMapsSDK/2.7.30514 (gzip)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="331 /maps/api/place/autocomplete/json" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="input" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">input</stringProp>
                  <stringProp name="Argument.value">c2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">maps.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/maps/api/place/autocomplete/json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="332 /maps/api/place/autocomplete/json" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyDGVnpMzM_rpZRX-NfJnA3dF9c-EPd7n0o</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="input" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">input</stringProp>
                  <stringProp name="Argument.value">c21ri</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">maps.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/maps/api/place/autocomplete/json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="333 /placesios/v1/getPlaceById?prettyPrint=false&amp;key=AIzaSyDa3el7QIULDAuCJn6edoTLF8ecdVpetqE" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;placeIds&quot;:[&quot;ChIJUxQOILbk94cRM3Mw6CW-IuA&quot;],&quot;header&quot;:{&quot;locale&quot;:&quot;en-US&quot;,&quot;context&quot;:{&quot;source&quot;:&quot;programmaticApi&quot;},&quot;key&quot;:&quot;2:Pn18pPosBAsdPbRe:VxVlbzf5ex12z7QE&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/placesios/v1/getPlaceById?prettyPrint=false&amp;key=AIzaSyDa3el7QIULDAuCJn6edoTLF8ecdVpetqE</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Ios-Bundle-Identifier" elementType="Header">
                  <stringProp name="Header.name">X-Ios-Bundle-Identifier</stringProp>
                  <stringProp name="Header.value">org.safemovement.frontend</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">org.safemovement.frontend/2.4.5 google-api-objc-client/3.0 iPhone/12.1 hw/iPhone7_1 GoogleMapsSDK/2.7.30514 (gzip)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="335 /" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="additional_payment_methods" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">additional_payment_methods</stringProp>
                  <stringProp name="Argument.value">none</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="analytics_ua" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">analytics_ua</stringProp>
                  <stringProp name="Argument.value">analytics.stripeios-1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="app_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">app_name</stringProp>
                  <stringProp name="Argument.value">SAFE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="app_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">app_version</stringProp>
                  <stringProp name="Argument.value">2.4.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="apple_merchant_identifier" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">apple_merchant_identifier</stringProp>
                  <stringProp name="Argument.value">merchant.safemovement.org</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="apple_pay_enabled" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">apple_pay_enabled</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bindings_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bindings_version</stringProp>
                  <stringProp name="Argument.value">13.2.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="company_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">company_name</stringProp>
                  <stringProp name="Argument.value">SAFE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="device_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">device_type</stringProp>
                  <stringProp name="Argument.value">iPhone7%2C1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">stripeios.token_creation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ocr_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ocr_type</stringProp>
                  <stringProp name="Argument.value">card_io</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="os_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">os_version</stringProp>
                  <stringProp name="Argument.value">12.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="publishable_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">publishable_key</stringProp>
                  <stringProp name="Argument.value">pk_test_NKcD5Cwyo5Gg2Dj4SmlOxviX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="required_billing_address_fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">required_billing_address_fields</stringProp>
                  <stringProp name="Argument.value">name</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="required_shipping_address_fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">required_shipping_address_fields</stringProp>
                  <stringProp name="Argument.value">none</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="shipping_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">shipping_type</stringProp>
                  <stringProp name="Argument.value">delivery</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="token_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">token_type</stringProp>
                  <stringProp name="Argument.value">card</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ui_usage_level" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ui_usage_level</stringProp>
                  <stringProp name="Argument.value">none</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">q.stripe.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="337 /ios-sdk-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;src&quot;:&quot;ios-sdk&quot;,&quot;b&quot;:{&quot;d&quot;:&quot;FB3DC7B4-EB69-4DD7-B3A0-02539C9E179B&quot;,&quot;k&quot;:&quot;SAFE&quot;,&quot;l&quot;:&quot;2.4.5&quot;,&quot;s&quot;:&quot;iPhone7,1&quot;,&quot;o&quot;:&quot;12.1&quot;,&quot;m&quot;:false},&quot;v2&quot;:1,&quot;a&quot;:{&quot;d&quot;:{&quot;v&quot;:&quot;iPhone7,1 12.1&quot;},&quot;g&quot;:{&quot;v&quot;:&quot;-8&quot;},&quot;c&quot;:{&quot;v&quot;:&quot;en_US&quot;},&quot;f&quot;:{&quot;v&quot;:&quot;414w_736h_3r&quot;}},&quot;tag&quot;:&quot;13.2.0&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.stripe.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ios-sdk-1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="336 /v1/tokens" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="card%5Bcurrency%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">card%5Bcurrency%5D</stringProp>
                  <stringProp name="Argument.value">USD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="card%5Bcvc%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">card%5Bcvc%5D</stringProp>
                  <stringProp name="Argument.value">524</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="card%5Bexp_month%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">card%5Bexp_month%5D</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="card%5Bexp_year%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">card%5Bexp_year%5D</stringProp>
                  <stringProp name="Argument.value">22</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="card%5Bnumber%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">card%5Bnumber%5D</stringProp>
                  <stringProp name="Argument.value">4242424242424242</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="muid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">muid</stringProp>
                  <stringProp name="Argument.value">FB3DC7B4-EB69-4DD7-B3A0-02539C9E179B</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="time_on_page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">time_on_page</stringProp>
                  <stringProp name="Argument.value">212195</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.stripe.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/tokens</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Stripe-Version" elementType="Header">
                  <stringProp name="Header.name">Stripe-Version</stringProp>
                  <stringProp name="Header.value">2015-10-12</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="X-Stripe-User-Agent" elementType="Header">
                  <stringProp name="Header.name">X-Stripe-User-Agent</stringProp>
                  <stringProp name="Header.value">{&quot;vendor_identifier&quot;:&quot;FB3DC7B4-EB69-4DD7-B3A0-02539C9E179B&quot;,&quot;model&quot;:&quot;iPhone&quot;,&quot;lang&quot;:&quot;objective-c&quot;,&quot;bindings_version&quot;:&quot;13.2.0&quot;,&quot;os_version&quot;:&quot;12.1&quot;,&quot;type&quot;:&quot;iPhone7,1&quot;}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer pk_test_NKcD5Cwyo5Gg2Dj4SmlOxviX</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="tokid" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">tokid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;: &quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">tokid_not_found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="334 /api/member/update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;city&quot;:&quot;River Falls&quot;,&quot;street&quot;:&quot;1561, Commerce Court&quot;,&quot;country&quot;:&quot;United States&quot;,&quot;zip&quot;:&quot;54022&quot;,&quot;state&quot;:&quot;WI&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/member/update</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="338 /api/Payment/createCustomer/tok_1DgonXB1UwkcYwtq8hDaM6H0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/Payment/createCustomer/${tokid}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="339 /api/member/info" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/member/info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="340 /api/Payment/creditCards" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Payment/creditCards</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="342 /dispatcher.arpc" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="en-US_US&#x0;&#xe;com.apple.geod&#x0;&#xa;12.1.16B92&#x0;&#x0;&#x0;&lt;&#x0;&#x0;&#x2;7&#xa;¢&#x1;&#xa;&#x19;org.safemovement.frontend&#x12;&#x5;2.4.5&#x1a;&#x5;1.6.1&quot;&#x9;iPhone7,1*&#xa;12.1.16B920&#x0;8&#x0;B&#x15;&#x8;ÚÆß¦ã&#x81;ß¤&#x19;&#x10;&#x99;õÈÅ¶³«Äë&#x1;H&#x88;Â&#x90;Æ&#x1;`&#x1;j(&#x8;&#x12;&#x12;$19186155-1152-48B9-B5A5-41F7FEEAB2DFr&#x9;iPhone OS&#x91;&#x1;&#x0;&#x0;À&#x93;óOq@&#x12;%&#xa;&#x2;IN&#x1a;&#x5;en-USJ&#x0;P&#x1;X&#x17;`&#x3;&#x80;&#x1;&#x3;&#x98;&#x1;&#x0;¢&#x6;&#x9;&#x12;&#x0;*&#x5;&#x8;«I&#x10;&#x0;&#x1a;&#x5;en-US*&#x4;&#x8;&#x2;&#x18;&#x5;*&#x4;&#x8;&#x1;&#x18;&#x5;*&#x4;&#x8;&#x5;&#x18;&#x5;*&#x10;&#x8;&#x1f;&#x18;&#x5;*&#xa;ú&#x1;&#x7;&#xa;&#x5;7.2.0*&#x4;&#x8;&#x3;&#x18;&#x1;*&#x4;&#x8;&#x6;&#x18;&#x3;*&#x8;&#x8;&#x9;&#x18;ÿÿÿÿ&#x7;*&#x4;&#x8;&#xa;&#x18;&#x1;*&#x4;&#x8;&#x18;&#x18;&#x1;*&#x4;&#x8;5&#x18;&#x1;*1&#x8;&#xb;&#x18;&#x1;*+Z)*&#xd;&#xa;&#x9;&#x8;Ï&#x88;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;2&#xd;&#xa;&#x9;&#x8;Ï&#x88;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;:&#x9;&#x8;Ï&#x88;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;*&#x4;&#x8;&#x14;&#x18;&#x1;*&#x4;&#x8;&#x16;&#x18;&#x1;*&#x4;&#x8;&#x17;&#x18;&#x6;*&#x4;&#x8;&apos;&#x18;&#x1;*&#x10;&#x8;&#x7;&#x18;&#x3;*&#xa;:&#x8;&#xa;&#x4;&#x8;&lt;&#x10;&lt;&#x10;&#x1;*&#xf;&#x8;$&#x18;&#x3;*&#x9;¢&#x2;&#x6;&#xa;&#x4;&#x8;&lt;&#x10;&lt;*&#x4;&#x8;&#xd;&#x18;&#x1;*!&#x8;&#x1a;&#x18;&#x3;*&#x1b;Ò&#x1;&#x18;&#xa;&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;&#xa;&#x6;&#x8;ø&#x1;&#x10;º&#x1;&#xa;&#x6;&#x8;°&#x9;&#x10; &#x6;*&#x4;&#x8;&#x4;&#x18;&#x1;*&#x4;&#x8;)&#x18;&#x5;*&#x8;&#x8;&#xf;&#x18;ÿÿÿÿ&#x7;*&#x8;&#x8;&#x10;&#x18;ÿÿÿÿ&#x7;*&#x9;&#x8;&#x1e;&#x18;&#x5;*&#x3;ò&#x1;&#x0;*&#x4;&#x8;!&#x18;&#x1;*&#x4;&#x8;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en-US_US&#x0;&#xe;com.apple.geod&#x0;
12.1.16B92&#x0;&#x0;&#x0;&lt;&#x0;&#x0;&#x2;7
¢&#x1;
&#x19;org.safemovement.frontend&#x12;&#x5;2.4.5&#x1a;&#x5;1.6.1&quot;	iPhone7,1*
12.1.16B920&#x0;8&#x0;B&#x15;&#x8;ÚÆß¦ã&#x81;ß¤&#x19;&#x10;&#x99;õÈÅ¶³«Äë&#x1;H&#x88;Â&#x90;Æ&#x1;`&#x1;j(&#x8;&#x12;&#x12;$19186155-1152-48B9-B5A5-41F7FEEAB2DFr	iPhone OS&#x91;&#x1;&#x0;&#x0;À&#x93;óOq@&#x12;%
&#x2;IN&#x1a;&#x5;en-USJ&#x0;P&#x1;X&#x17;`&#x3;&#x80;&#x1;&#x3;&#x98;&#x1;&#x0;¢&#x6;	&#x12;&#x0;*&#x5;&#x8;«I&#x10;&#x0;&#x1a;&#x5;en-US*&#x4;&#x8;&#x2;&#x18;&#x5;*&#x4;&#x8;&#x1;&#x18;&#x5;*&#x4;&#x8;&#x5;&#x18;&#x5;*&#x10;&#x8;&#x1f;&#x18;&#x5;*
ú&#x1;&#x7;
&#x5;7.2.0*&#x4;&#x8;&#x3;&#x18;&#x1;*&#x4;&#x8;&#x6;&#x18;&#x3;*&#x8;&#x8;	&#x18;ÿÿÿÿ&#x7;*&#x4;&#x8;
&#x18;&#x1;*&#x4;&#x8;&#x18;&#x18;&#x1;*&#x4;&#x8;5&#x18;&#x1;*1&#x8;&#xb;&#x18;&#x1;*+Z)*&#xd;
	&#x8;Ï&#x88;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;2&#xd;
	&#x8;Ï&#x88;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;&#x10;&#x4;:	&#x8;Ï&#x88;&#x89;&#x8e;&#x2;&#x10;&#x88;&#xe;*&#x4;&#x8;&#x14;&#x18;&#x1;*&#x4;&#x8;&#x16;&#x18;&#x1;*&#x4;&#x8;&#x17;&#x18;&#x6;*&#x4;&#x8;&apos;&#x18;&#x1;*&#x10;&#x8;&#x7;&#x18;&#x3;*
:&#x8;
&#x4;&#x8;&lt;&#x10;&lt;&#x10;&#x1;*&#xf;&#x8;$&#x18;&#x3;*	¢&#x2;&#x6;
&#x4;&#x8;&lt;&#x10;&lt;*&#x4;&#x8;&#xd;&#x18;&#x1;*!&#x8;&#x1a;&#x18;&#x3;*&#x1b;Ò&#x1;&#x18;
&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;
&#x6;&#x8;ø&#x1;&#x10;º&#x1;
&#x6;&#x8;°	&#x10; &#x6;*&#x4;&#x8;&#x4;&#x18;&#x1;*&#x4;&#x8;)&#x18;&#x5;*&#x8;&#x8;&#xf;&#x18;ÿÿÿÿ&#x7;*&#x8;&#x8;&#x10;&#x18;ÿÿÿÿ&#x7;*	&#x8;&#x1e;&#x18;&#x5;*&#x3;ò&#x1;&#x0;*&#x4;&#x8;!&#x18;&#x1;*&#x4;&#x8;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x18;&#x1;*&#x4;&#x8;0&#x18;&#x1;*&#x4;&#x8;2&#x18;&#x1;*&#x4;&#x8;6&#x18;&#x1;*!&#x8;9&#x18;&#x1;*&#x1b;Ê&#x3;&#x18;&#xa;&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;&#xa;&#x6;&#x8;ø&#x1;&#x10;º&#x1;&#xa;&#x6;&#x8;°&#x9;&#x10; &#x6;8&#x2;B&#xd;&#x12;&#xb;&#x10;&#x5;&quot;&#x7;b&#x5;54022J&#x2;US" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x18;&#x1;*&#x4;&#x8;0&#x18;&#x1;*&#x4;&#x8;2&#x18;&#x1;*&#x4;&#x8;6&#x18;&#x1;*!&#x8;9&#x18;&#x1;*&#x1b;Ê&#x3;&#x18;
&#x6;&#x8;Ø&#x4;&#x10;&#x90;&#x3;
&#x6;&#x8;ø&#x1;&#x10;º&#x1;
&#x6;&#x8;°	&#x10; &#x6;8&#x2;B&#xd;&#x12;&#xb;&#x10;&#x5;&quot;&#x7;b&#x5;54022J&#x2;US</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">gsp-ssl.ls.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/dispatcher.arpc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">geod/1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-msg-priority" elementType="Header">
                  <stringProp name="Header.name">x-msg-priority</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="341 /api/document/7" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/document/7</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="343 /api/document/5" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/document/5</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="344 /api/document/8" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/document/8</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="345 /api/appointment/create" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Time&quot;:&quot;${hour}:${min}&quot;,&quot;ExternalId&quot;:&quot;SAFE:224dd860d83a1e0b4bf9ad52ec&quot;,&quot;SiteId&quot;:&quot;&quot;,&quot;Date&quot;:&quot;${date}&quot;,&quot;Phone&quot;:&quot;4849188657&quot;,&quot;FirstName&quot;:&quot;${email1}&quot;,&quot;LastName&quot;:&quot;${email1}&quot;,&quot;SiteCode&quot;:&quot;${key}&quot;,&quot;Email&quot;:&quot;${email1}@yopmail.com&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/appointment/create</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="appointmentId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">appointmentId</stringProp>
              <stringProp name="RegexExtractor.regex">(.+)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.text.SimpleDateFormat;


SimpleDateFormat source = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
SimpleDateFormat target = new SimpleDateFormat(&quot;dd MMM yyyy&quot;);
Date date = source.parse(vars.get(&quot;date&quot;));
String newDate = target.format(date);
vars.put(&quot;date&quot;, newDate)</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="346 /api/payment/chargecc" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Token&quot;:&quot;&quot;,&quot;couponCode&quot;:&quot;&quot;,&quot;Amount&quot;:99,&quot;Currency&quot;:&quot;usd&quot;,&quot;creditCardId&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/payment/chargecc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="chargeId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">chargeId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;chargeId&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="348 /api/Message/getMessages" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="PageNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">PageNumber</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="PageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">PageSize</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Message/getMessages</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="347 /api/v2/Order/set" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;SafeSelectedPhysicianId&quot;:&quot;12665532&quot;,&quot;facilityId&quot;:1102,&quot;tax&quot;:0,&quot;PaymentType&quot;:1,&quot;testTypes&quot;:[1,2,3,4,5,7],&quot;comment&quot;:&quot;&quot;,&quot;appointmentId&quot;:&quot;${appointmentId}&quot;,&quot;facilityVisitType&quot;:1,&quot;paymentAmount&quot;:99,&quot;signature&quot;:&quot;iVBORw0KGgoAAAANSUhEUgAAAY4AAABuCAYAAAAwN\/RKAAAAAXNSR0IArs4c6QAA\r\nABxpRE9UAAAAAgAAAAAAAAA3AAAAKAAAADcAAAA3AAAByhmWs7sAAAGWSURBVHgB\r\n7NAxAQAAAMKg9U9tDQ+IQGHAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAED\r\nBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwY\r\nMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDA\r\ngAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAED\r\nBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwY\r\nMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDA\r\ngAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAED\r\nBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwY\r\nMGDAgAEDBgwYMGDAwOnAAAAA\/\/+X1lMvAAACwklEQVTt3LFKHFEUBuBVIoiNFsEm\r\nmEYCBgSfIKzEZ9DSNimsUqfJW4gpA6kjYhXyANpqkZBCO8HCNCkSkpj8B3ZYhpl9\r\ngDDfgZ+99+xt9msOM7uzo5EiQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA\r\nAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIE\r\nCBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQJTgYdZPp9urQgQIECA\r\nQL\/A47TfJ9+Tv4nhEQRFgAABAv0C+2n\/SWpgVI6T5UQRIECAAIGWwHp2n5NmYNTw\r\nGLdO2BAgQIAAgYnAaV5\/JzU07pPLZC1RBAgQIECgJbCU3Yekucq4ynqrdcKGAAEC\r\nBAhE4GnyNfmZ1ND4lbxMFAECBAgQ6AjUL6S+Jc1tqZusDzqnNAgQIEBg8AJzEXib\r\nNN9lnGe9OXgVAAQIECDQK7CR7kXSXGW8yXq+96QmAQIECAxaYCGf\/nXyI6mhUQ\/0\r\nvUoUAQIECBDoCOym8yVprjKOsl7pnNIgQIAAgcELPIhA3Yqq5zFqaNSvp7YTRYAA\r\nAQIEOgJP0jlLamDUk9+fksVEESBAgACBjsCLdJo\/JbzOetw5oUGAAAECBCKwmpwk\r\ndZVReZf4U8IgKAIECBDoCjxL6zapgXGX7CWKAAECBAjMFDjMOzU0PiaPZp7yBgEC\r\nBAgQmAjULamdpJ4KVwQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAAB\r\nAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\r\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBA\r\ngAABAgQIECBA4L8W+AcO3kAGZssYRgAAAABJRU5ErkJggg==&quot;,&quot;questionnaire&quot;:&quot;10:45:10,11:49:11,&quot;,&quot;reference&quot;:&quot;Safe Test&quot;,&quot;CreditCard&quot;:&quot;4242&quot;,&quot;cardType&quot;:&quot;Visa&quot;,&quot;paymentStatus&quot;:1,&quot;paymentId&quot;:&quot;${chargeId}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v2/Order/set</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="349 /api/results/getEhrLatest/" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/results/getEhrLatest/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="350 /api/Message/getMessages" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="PageNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">PageNumber</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="PageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">PageSize</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Message/getMessages</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="351 /api//v2/Message/UnreadCount" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api//v2/Message/UnreadCount</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="352 /api/Order/myOrders" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Order/myOrders</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="353 /hvr/v3/use" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="en-US_US&#x0;&#xe;com.apple.geod&#x0;&#xa;12.1.16B92&#x0;&#x3;LZ4&#x0;&#x0;&#x3;ù&#x0;&#x0;&#x2;Abv418&#x3;&#x0;&#x0;1&#x2;&#x0;&#x0;ô&#x9f;&#xa;&#x99;&#x3;²&#x6;&#x91;&#x3;&#xa;&#xe;&#x98;&#x6;&#x92;&#x3;&#x92;&#x19;&#x7;&#xa;&#x5;en-US&#xa;0&#x98;&#x6;­&#x2;ê&#x12;)&#xa;&#x19;org.safemovement.frontend&#x12;&#x5;2.4.5&#x1a;&#x5;1.6.1&#xa;&quot;&#x98;&#x6;É&#x1;Ê&#xc;&#x1b;&#xa;&#xa;12.1.16B92&#x12;&#x9;iPhone7,1&#x18;&#x0; &#x0;&#xa;&#xb;&#x98;&#x6;ù&#x3;Ê&#x1f;&#x4;&#x8;&#x3;&#x18;&#x1;&#xa;&#x89;&#x1;&#x98;&#x6;õ&#x3;ª&#x1f;&#x81;&#x1;&#xa;t)&#x8;Ú&#x85;3-×@@1T&#x96;&#x12;&#x80;Ê®\À9i«R&#x0;úã@@A½?&#x92;&#x0;&#x8f;¦\ÀJ&#x12;&#x9;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en-US_US&#x0;&#xe;com.apple.geod&#x0;
12.1.16B92&#x0;&#x3;LZ4&#x0;&#x0;&#x3;ù&#x0;&#x0;&#x2;Abv418&#x3;&#x0;&#x0;1&#x2;&#x0;&#x0;ô&#x9f;
&#x99;&#x3;²&#x6;&#x91;&#x3;
&#xe;&#x98;&#x6;&#x92;&#x3;&#x92;&#x19;&#x7;
&#x5;en-US
0&#x98;&#x6;­&#x2;ê&#x12;)
&#x19;org.safemovement.frontend&#x12;&#x5;2.4.5&#x1a;&#x5;1.6.1
&quot;&#x98;&#x6;É&#x1;Ê&#xc;&#x1b;

12.1.16B92&#x12;	iPhone7,1&#x18;&#x0; &#x0;
&#xb;&#x98;&#x6;ù&#x3;Ê&#x1f;&#x4;&#x8;&#x3;&#x18;&#x1;
&#x89;&#x1;&#x98;&#x6;õ&#x3;ª&#x1f;&#x81;&#x1;
t)&#x8;Ú&#x85;3-×@@1T&#x96;&#x12;&#x80;Ê®\À9i«R&#x0;úã@@A½?&#x92;&#x0;&#x8f;¦\ÀJ&#x12;	</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x0;&#x14;&#x11;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x0;&#x14;&#x11;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x0;&#x8;&#x14;&#x0;&#x7;(&#x0;&#x4;&lt;&#x0;&#xf;&#x14;&#x0;&#x2;&#x4;&lt;&#x0;ð9&#x11;&#x0;&#x0;&#x0; ½I*@&#x18;&#x1;&#xa;;&#x98;&#x6;Ù&#x4;Ê%4&#xa;&#x16;&#x8;&#x8b;ð·è&#x91;Û²¤»&#x1;&#x10;¸ÿ&#x91;¹&#x88;&#x87;&#x8e;îÍ&#x1;&#x10;&#x89;²&#x8e;Î&#x4;&#x19;&#x0;&#x0; ´éÍ&#x89;@2&#xb;&#x8;ðõ&#x88;&#x8e;&#x2;&#x15;&#x0;&#x0;&#x0;ÁÖ&#x0;ð9Ú&#x4;Ò%&#x4;&#x1a;&#x2;&#x8;&#x0;&#xa;&#xf;&#x98;&#x6;&#x93;&#x3;&#x9a;&#x19;&#x8;&#x8;&#x3;&#x12;&#x2;IN &#x3; &#x6;&#x2;²&#x6;1&#xa;&#x6;&#x8;&#x3;&#x10;&#xa;&#x18;&#xa;&#xa;&#x6;&#x8;&#x2;&#x10;&#xa;&#x18;&#x9;&#xa;&#x6;&#x8;&#x5;&#x10;&#xb;&#x18;&#xb;&#xa;&#x6;&#x8;&#x1;&#x10;&#x1;&#x18;&#x1;&#xa;&#x6;&#x8;&#x4;&#x10;&#x9;&#x18;&#x9;&#x94;&#x0;&#x9f;&#x80;£³÷?À&gt;øU&#x9c;&#x1;uñ&#x12;&#x1e;õæ¢lÜ@@1&#x89;ùÒÁj«\À9&#x16;&#x13;d}»Þ@@A&#x85;ÜÑ¾î©&#x9c;&#x1;&#x4;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x0;&#x8;&#x14;&#x0;&#x7;(&#x0;&#x4;&lt;&#x0;&#xf;&#x14;&#x0;&#x2;&#x4;&lt;&#x0;ð9&#x11;&#x0;&#x0;&#x0; ½I*@&#x18;&#x1;
;&#x98;&#x6;Ù&#x4;Ê%4
&#x16;&#x8;&#x8b;ð·è&#x91;Û²¤»&#x1;&#x10;¸ÿ&#x91;¹&#x88;&#x87;&#x8e;îÍ&#x1;&#x10;&#x89;²&#x8e;Î&#x4;&#x19;&#x0;&#x0; ´éÍ&#x89;@2&#xb;&#x8;ðõ&#x88;&#x8e;&#x2;&#x15;&#x0;&#x0;&#x0;ÁÖ&#x0;ð9Ú&#x4;Ò%&#x4;&#x1a;&#x2;&#x8;&#x0;
&#xf;&#x98;&#x6;&#x93;&#x3;&#x9a;&#x19;&#x8;&#x8;&#x3;&#x12;&#x2;IN &#x3; &#x6;&#x2;²&#x6;1
&#x6;&#x8;&#x3;&#x10;
&#x18;

&#x6;&#x8;&#x2;&#x10;
&#x18;	
&#x6;&#x8;&#x5;&#x10;&#xb;&#x18;&#xb;
&#x6;&#x8;&#x1;&#x10;&#x1;&#x18;&#x1;
&#x6;&#x8;&#x4;&#x10;	&#x18;	&#x94;&#x0;&#x9f;&#x80;£³÷?À&gt;øU&#x9c;&#x1;uñ&#x12;&#x1e;õæ¢lÜ@@1&#x89;ùÒÁj«\À9&#x16;&#x13;d}»Þ@@A&#x85;ÜÑ¾î©&#x9c;&#x1;&#x4;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x0;&#x14;&#x11;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x0;&#x14;&#x11;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x0;&#x8;&#x14;&#x0;&#x7;(&#x0;&#x4;&lt;&#x0;&#xf;&#x14;&#x0;&#x2;&#x4;&lt;&#x0;&#x0;&#x8;&#x1;O&#x0;&#x1b;;/&#x9c;&#x1;&#x9;ðn&#x91;¹&#x88;&#x87;&#x8e;îÍ&#x1;&#x10;½»&#x8b;Ñ&#x4;&#x19;&#x0;&#x0;°ï5ï&#x89;@2&#xb;&#x8;ðõ&#x88;&#x8e;&#x2;&#x15;&#x0;&#x0;&#x0;Á&#xa;&#xb;&#x98;&#x6;Ú&#x4;Ò%&#x4;&#x1a;&#x2;&#x8;&#x0;&#xa;&#xf;&#x98;&#x6;&#x93;&#x3;&#x9a;&#x19;&#x8;&#x8;&#x3;&#x12;&#x2;IN &#x3; &#x6;&#x2;²&#x6;1&#xa;&#x6;&#x8;&#x3;&#x10;&#xa;&#x18;&#xa;&#xa;&#x6;&#x8;&#x2;&#x10;&#x9;&#x18;&#xa;&#xa;&#x6;&#x8;&#x5;&#x10;&#xb;&#x18;&#xb;&#xa;&#x6;&#x8;&#x1;&#x10;&#x1;&#x18;&#x1;&#xa;&#x6;&#x8;&#x4;&#x10;&#x9;&#x18;&#x9;&#x11;&#x0;&#x0;&#x0;È&#x1d;¦&#x10;@À&gt;øUbv4$" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x0;&#x8;&#x14;&#x0;&#x7;(&#x0;&#x4;&lt;&#x0;&#xf;&#x14;&#x0;&#x2;&#x4;&lt;&#x0;&#x0;&#x8;&#x1;O&#x0;&#x1b;;/&#x9c;&#x1;	ðn&#x91;¹&#x88;&#x87;&#x8e;îÍ&#x1;&#x10;½»&#x8b;Ñ&#x4;&#x19;&#x0;&#x0;°ï5ï&#x89;@2&#xb;&#x8;ðõ&#x88;&#x8e;&#x2;&#x15;&#x0;&#x0;&#x0;Á
&#xb;&#x98;&#x6;Ú&#x4;Ò%&#x4;&#x1a;&#x2;&#x8;&#x0;
&#xf;&#x98;&#x6;&#x93;&#x3;&#x9a;&#x19;&#x8;&#x8;&#x3;&#x12;&#x2;IN &#x3; &#x6;&#x2;²&#x6;1
&#x6;&#x8;&#x3;&#x10;
&#x18;

&#x6;&#x8;&#x2;&#x10;	&#x18;

&#x6;&#x8;&#x5;&#x10;&#xb;&#x18;&#xb;
&#x6;&#x8;&#x1;&#x10;&#x1;&#x18;&#x1;
&#x6;&#x8;&#x4;&#x10;	&#x18;	&#x11;&#x0;&#x0;&#x0;È&#x1d;¦&#x10;@À&gt;øUbv4$</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">gsp64-ssl.ls.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/hvr/v3/use</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">geod/1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="354 /hvr/v3/use" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="en-US_US&#x0;&#xe;com.apple.geod&#x0;&#xa;12.1.16B92&#x0;&#x3;LZ4&#x0;&#x0;&#x3;ù&#x0;&#x0;&#x3;&#x13;bv41&#x8e;&#xc;&#x0;&#x0;&#x3;&#x3;&#x0;&#x0;ÿÓ&#xa;Ù&#x1;²&#x6;Ñ&#x1;&#xa;&#xe;&#x98;&#x6;&#x92;&#x3;&#x92;&#x19;&#x7;&#xa;&#x5;en-US&#xa;&#x1f;&#x98;&#x6;­&#x2;ê&#x12;&#x18;&#xa;&#xe;com.apple.geod&#x12;&#x3;1.0&#x1a;&#x1;1&#xa;&quot;&#x98;&#x6;É&#x1;Ê&#xc;&#x1b;&#xa;&#xa;12.1.16B92&#x12;&#x9;iPhone7,1&#x18;&#x0; &#x0;&#xa;3&#x98;&#x6;Ù&#x4;Ê%,&#xa;&#x14;&#x8;ÎÛÝ ýÄè¥R&#x10;&#x95;÷§ùÉÐêï}&#x19;&#x0;&#x0;&#x0;&#x84; áÀA2&#xb;&#x8;ðõ&#x88;&#x8e;&#x2;&#x15;&#x0;&#x0;&#x0;Á&#xa;&#xf;&#x98;&#x6;&#x93;&#x3;&#x9a;&#x19;&#x8;&#x8;&#x3;&#x12;&#x2;IN &#x3; &#x6;&#xc;Ò&#x6;0&#x8;&#x10;&#x10;¬&#x6;&#x18;&#xa;&#x80;&#x1;×&#xc;&#x88;&#x1;È&#x1;²&#x1;&#x4;prod¸&#x1;&#x9d;Ín&#x92;&#x3;&#x12;17.167.192.225:443À&gt;°m&#xa;õ&#x1;²&#x6;íÜ&#x0;&#x8c;ÿ&#x9;&#x82;&#x7;L&#x8;&#x1;&#x10;&#x1; Ó&#x10;0à]:&#x9;&#x8;&#x6;&#x10;&#x0;&#x18;&#x0; ¡&#x2;&#xb;&#x0;&#x1;&#x16;¢&#x16;&#x0;/&#x9f;&#x3;&#xb;&#x0;&#x3;&#x1;ø&#x0;&#xf;Ô&#x1;k&#x1f;¢Ô&#x1;&#x18;&#x11;ÉÔ&#x1;/é&#x8;Ô&#x1;&#x9;_4.230Ô&#x1;t&#xf;Ü&#x0;&#x13;&#x4;Ô&#x1;&#x91;ê&#x12;0øU:&#x9;&#x8;&#x2;Ô&#x1;&#x10;¦³&#x1;&#xf;&#xb;&#x0;&#x14;&#x10;&#x9a;ê&#x1;&#x4;,&#x0;&#x1;Ô&#x1;_×&#x1;²&#x6;ÏÌ&#x2;f&quot;&#x1a;!Ô&#x1;?&#x80;&#x92;&#x89;¨&#x3;&#xa;`.&#x8;&#x10;&#x10;&#x9d;&#x19;Ô&#x1;. &#xf;Ô&#x1;&#x10;&#x10;¨&#x3;w42.171.¦&#x3;_&#x6;²&#x6;í&#x6;Ú&#x0;&#x8b;A&#x82;&#x7;Ë&#x5;§&#x3;?çÈ&#x1;¨&#x3;&#x9;&#x11;!³&#x1;/Á&#x1;&#xb;&#x0;&#x6;&#xd;ß&#x3;&#xf;É&#x3;&#x3;&#x16; &#x16;&#x0;&#x7;&#xb;&#x0;&#x7;,&#x0;&#x7;&#x16;&#x0;&#xf;&#xb;&#x0;/&#x16;&#x9e;B&#x0;&#x7;c&#x0;&#x7;&#xb;&#x0;&#xf;!&#x0;/&#x7;M&#x0;&#x7;&#xb;&#x0;&#x7;X&#x0;&#xf;&#xb;&#x0;¨&#xf;Ñ&#x0;&#x3;&#x7;&#x16;&#x0;&#x7;¢&#x1;&#x7;&#x16;&#x0;&#x7;&#xb;&#x0;&#x7;!&#x0;&#xf;&#xb;&#x0;&#x3;&#xf;,&#x0;&#x3;&#x7;&#x16;&#x0;&#x7;&#xb;&#x0;&#xf;B&#x0;&#x10;&#xf;R&#x4;&#x9c;&#x11;ûR&#x4;/Å&#x3;R&#x4;&#x15;o·&#x7;²&#x6;¯&#x7;R&#x4;&#x8d;!&#x8d;&#x6;R&#x4;)&#x8a;ÀR&#x4;&#xf;¾&#x1;&#x3;&#xf;&#x16;&#x0;&#x19;&#x7;&#xb;&#x2;&#xf;&#xb;&#x0;$&#xf;n&#x0;&#xe;&#x7;X&#x0;&#x7;,&#x0;&#xf;&#x16;&#x0;&#x3;&#x7;!&#x0;&#xf;&#xb;&#x0;$&#xf;X&#x0;$&#xf;7&#x0;&#x3;&#x7;&#x16;&#x0;&#xf;&#xb;&#x0;&#x3;&#x7;¥&#x0;&#xf;!&#x0;&#xe;&#x7;,&#x0;&#xf;&#xb;&#x0;/&#x7;n&#x0;&#x1;M&#x0;&#x2;A&#x6;&#x16;¾L&#x6;&#x1f;¿&#xb;&#x0;&#x2;&#xf;!&#x0;&#x3;&#x7;&#x16;&#x0;&#xf;&#x8e;&#x6;&#x3;&#x1f;À&#x16;&#x0;&#x1;ðq Á&#x1;:&#x9;&#x8;!&#x10;&#x0;&#x18;&#x0; Á&#x1;:&#x9;&#x8;!&#x10;&#x0;&#x18;&#x0; Á&#x1;:&#x9;&#x8;!&#x10;&#x0;&#x18;&#x0; Á&#x1;:&#x9;&#x8;!&#x10;&#x0;&#x18;&#x0; Â&#x1;:&#x9;&#x8;!&#x10;&#x0;&#x18;&#x0; Á&#x1;:&#x9;&#x8;!&#x10;&#x0;&#x18;&#x0; Á&#x1;:&#x9;&#x8;!&#x10;&#x0;&#x18;&#x0; Á&#x1;:&#x9;&#x8;!&#x10;&#x0;&#x18;&#x0; Á&#x1;:&#x9;&#x8;!&#x10;&#x0;&#x18;&#x0; Â&#x1;:&#x9;&#x8;&#x6;&#x10;&#x0;&#x18;&#x0; ¡&#x2;:&#x9;&#x8;&#x6;&#x10;&#x0;&#x18;&#x0; ¡&#x2;À&gt;°mbv4$" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en-US_US&#x0;&#xe;com.apple.geod&#x0;
12.1.16B92&#x0;&#x3;LZ4&#x0;&#x0;&#x3;ù&#x0;&#x0;&#x3;&#x13;bv41&#x8e;&#xc;&#x0;&#x0;&#x3;&#x3;&#x0;&#x0;ÿÓ
Ù&#x1;²&#x6;Ñ&#x1;
&#xe;&#x98;&#x6;&#x92;&#x3;&#x92;&#x19;&#x7;
&#x5;en-US
&#x1f;&#x98;&#x6;­&#x2;ê&#x12;&#x18;
&#xe;com.apple.geod&#x12;&#x3;1.0&#x1a;&#x1;1
&quot;&#x98;&#x6;É&#x1;Ê&#xc;&#x1b;

12.1.16B92&#x12;	iPhone7,1&#x18;&#x0; &#x0;
3&#x98;&#x6;Ù&#x4;Ê%,
&#x14;&#x8;ÎÛÝ ýÄè¥R&#x10;&#x95;÷§ùÉÐêï}&#x19;&#x0;&#x0;&#x0;&#x84; áÀA2&#xb;&#x8;ðõ&#x88;&#x8e;&#x2;&#x15;&#x0;&#x0;&#x0;Á
&#xf;&#x98;&#x6;&#x93;&#x3;&#x9a;&#x19;&#x8;&#x8;&#x3;&#x12;&#x2;IN &#x3; &#x6;&#xc;Ò&#x6;0&#x8;&#x10;&#x10;¬&#x6;&#x18;
&#x80;&#x1;×&#xc;&#x88;&#x1;È&#x1;²&#x1;&#x4;prod¸&#x1;&#x9d;Ín&#x92;&#x3;&#x12;17.167.192.225:443À&gt;°m
õ&#x1;²&#x6;íÜ&#x0;&#x8c;ÿ	&#x82;&#x7;L&#x8;&#x1;&#x10;&#x1; Ó&#x10;0à]:	&#x8;&#x6;&#x10;&#x0;&#x18;&#x0; ¡&#x2;&#xb;&#x0;&#x1;&#x16;¢&#x16;&#x0;/&#x9f;&#x3;&#xb;&#x0;&#x3;&#x1;ø&#x0;&#xf;Ô&#x1;k&#x1f;¢Ô&#x1;&#x18;&#x11;ÉÔ&#x1;/é&#x8;Ô&#x1;	_4.230Ô&#x1;t&#xf;Ü&#x0;&#x13;&#x4;Ô&#x1;&#x91;ê&#x12;0øU:	&#x8;&#x2;Ô&#x1;&#x10;¦³&#x1;&#xf;&#xb;&#x0;&#x14;&#x10;&#x9a;ê&#x1;&#x4;,&#x0;&#x1;Ô&#x1;_×&#x1;²&#x6;ÏÌ&#x2;f&quot;&#x1a;!Ô&#x1;?&#x80;&#x92;&#x89;¨&#x3;
`.&#x8;&#x10;&#x10;&#x9d;&#x19;Ô&#x1;. &#xf;Ô&#x1;&#x10;&#x10;¨&#x3;w42.171.¦&#x3;_&#x6;²&#x6;í&#x6;Ú&#x0;&#x8b;A&#x82;&#x7;Ë&#x5;§&#x3;?çÈ&#x1;¨&#x3;	&#x11;!³&#x1;/Á&#x1;&#xb;&#x0;&#x6;&#xd;ß&#x3;&#xf;É&#x3;&#x3;&#x16; &#x16;&#x0;&#x7;&#xb;&#x0;&#x7;,&#x0;&#x7;&#x16;&#x0;&#xf;&#xb;&#x0;/&#x16;&#x9e;B&#x0;&#x7;c&#x0;&#x7;&#xb;&#x0;&#xf;!&#x0;/&#x7;M&#x0;&#x7;&#xb;&#x0;&#x7;X&#x0;&#xf;&#xb;&#x0;¨&#xf;Ñ&#x0;&#x3;&#x7;&#x16;&#x0;&#x7;¢&#x1;&#x7;&#x16;&#x0;&#x7;&#xb;&#x0;&#x7;!&#x0;&#xf;&#xb;&#x0;&#x3;&#xf;,&#x0;&#x3;&#x7;&#x16;&#x0;&#x7;&#xb;&#x0;&#xf;B&#x0;&#x10;&#xf;R&#x4;&#x9c;&#x11;ûR&#x4;/Å&#x3;R&#x4;&#x15;o·&#x7;²&#x6;¯&#x7;R&#x4;&#x8d;!&#x8d;&#x6;R&#x4;)&#x8a;ÀR&#x4;&#xf;¾&#x1;&#x3;&#xf;&#x16;&#x0;&#x19;&#x7;&#xb;&#x2;&#xf;&#xb;&#x0;$&#xf;n&#x0;&#xe;&#x7;X&#x0;&#x7;,&#x0;&#xf;&#x16;&#x0;&#x3;&#x7;!&#x0;&#xf;&#xb;&#x0;$&#xf;X&#x0;$&#xf;7&#x0;&#x3;&#x7;&#x16;&#x0;&#xf;&#xb;&#x0;&#x3;&#x7;¥&#x0;&#xf;!&#x0;&#xe;&#x7;,&#x0;&#xf;&#xb;&#x0;/&#x7;n&#x0;&#x1;M&#x0;&#x2;A&#x6;&#x16;¾L&#x6;&#x1f;¿&#xb;&#x0;&#x2;&#xf;!&#x0;&#x3;&#x7;&#x16;&#x0;&#xf;&#x8e;&#x6;&#x3;&#x1f;À&#x16;&#x0;&#x1;ðq Á&#x1;:	&#x8;!&#x10;&#x0;&#x18;&#x0; Á&#x1;:	&#x8;!&#x10;&#x0;&#x18;&#x0; Á&#x1;:	&#x8;!&#x10;&#x0;&#x18;&#x0; Á&#x1;:	&#x8;!&#x10;&#x0;&#x18;&#x0; Â&#x1;:	&#x8;!&#x10;&#x0;&#x18;&#x0; Á&#x1;:	&#x8;!&#x10;&#x0;&#x18;&#x0; Á&#x1;:	&#x8;!&#x10;&#x0;&#x18;&#x0; Á&#x1;:	&#x8;!&#x10;&#x0;&#x18;&#x0; Á&#x1;:	&#x8;!&#x10;&#x0;&#x18;&#x0; Â&#x1;:	&#x8;&#x6;&#x10;&#x0;&#x18;&#x0; ¡&#x2;:	&#x8;&#x6;&#x10;&#x0;&#x18;&#x0; ¡&#x2;À&gt;°mbv4$</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">gsp64-ssl.ls.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/hvr/v3/use</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">geod/1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="355 /hvr/v3/use" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="en-US_US&#x0;&#xe;com.apple.geod&#x0;&#xa;12.1.16B92&#x0;&#x3;LZ4&#x0;&#x0;&#x3;ù&#x0;&#x0;&#x8;©bv41&#x13;.&#x0;&#x0;&#x99;&#x8;&#x0;&#x0;ÿÿ&#x9;&#xa;&#x94;&#x2;²&#x6;&#x8c;&#x2;&#xa;&#xe;&#x98;&#x6;&#x92;&#x3;&#x92;&#x19;&#x7;&#xa;&#x5;en-US&#xa;&#x1f;&#x98;&#x6;­&#x2;ê&#x12;&#x18;&#xa;&#xe;com.apple.geod&#x12;&#x3;1.0&#x1a;&#x1;1&#xa;&quot;&#x98;&#x6;É&#x1;Ê&#xc;&#x1b;&#xa;&#xa;12.1.16B92&#x12;&#x9;iPhone7,1&#x18;&#x0; &#x0;&#xa;&#x9;&#x98;&#x6;Ã&#x5;&#x9a;,&#x2;&#x8;&#x2;&#xa;3&#x98;&#x6;Ù&#x4;Ê%,&#xa;&#x14;&#x8;ÎÛÝ ýÄè¥R&#x10;&#x95;÷§ùÉÐêï}&#x19;&#x0;&#x0;&#x0;&#x92;!áÀA2&#xb;&#x8;&#x80;&#x92;&#x89;&#x8e;&#x2;&#x15;&#x0;&#x0;&#x0;Á&#xa;&#xb;&#x98;&#x6;Ú&#x4;Ò%&#x4;&#x1a;&#x2;&#x8;&#x0;&#xa;&#xf;&#x98;&#x6;&#x93;&#x3;&#x9a;&#x19;&#x8;&#x8;&#x3;&#x12;&#x2;IN &#x3; &#x6;&#x6;Ò&#x6;S&#x8;&#xd;&#x10;ã&#x4;&#x18;&#x1d;B$6Z842A97CR.org.safemovement.frontend&#x80;&#x1;é&#x3;&#x88;&#x1;È&#x1;²&#x1;&#x4;prod¸&#x1;&#x9d;Ín&#x92;&#x3;&#xf;17.242.2.32:443À&gt;à]&#x17;&#x1;Ü/Í&#x2;&#x17;&#x1;ÿ&#x3;/&#x90;&#x5;&#x17;&#x1;ÿ&#x3;&#x1f;Ù&#x17;&#x1;ÿ&#x4;/Ê&#x4;&#x17;&#x1;&#x14;_­&#x2;²&#x6;¥s&#x5;q&#x1f;°s&#x5;!ÿ&#x10;l&#x8;&#xd;&#x10;æ&#x4;&#x18;û&#x5;*&#x12;GEOProtobufSession0&#x1;&#x8a;&#x5;&#x15;&#x1e;S-&#x1;ñ&#x4;&#x12;172.16.146.57:8888&#x8c;&#x5;&#xf;0&#x1;ò&#x1f;Z0&#x1;Ù&#x1f;ä`&#x2;/&#x1f;V0&#x1;ÿ&#x1d;&#x1f;N0&#x1;ÿ&#x1d;&#xf;&#x90;&#x3;ÿ&#x1e;&#x1f;U0&#x1;&#x17;o&#x93;&#x3;²&#x6;&#x8b;&#x3; &#x7;Cï&#xd;&#x98;&#x6;Â&#x5;&#x92;,&#x6;&#xa;&#x4;&#x8;&#xd;&#x10;&#x1;&#x97;&#xc;&#x10;&#x1f;Î$&#x7;!&#x7f;Í&#x1;&#x8;&#x5;&#x18;Ð&#xe;&#xc;&#x7;&#x13;px&#x8f;&#x1;&#x80;&#x1;Î&#x1e; &#x1;ð&#x4;&#x90;&#x1;&#x0;&#x99;&#x1;kºû&#x10;&#x83;&#x4;×A¡&#x1;¡&#x84;{&#x11;&#xa;&#x0;:¨&#x1;&#x0;³&#xc;&#xf;*&#x7;&#x0;q¢&#x6;Y&#x9;&#x8;8&#x3;0&#x0;A&#x11;D£&#x7;&#x9;&#x0;&#x14;&#x19;&#x9;&#x0;A!¢]&#x9;&#x12;&#x0;A)Q¥&#xa;&#x9;&#x0;A1ä½&#xe;&#x9;&#x0;&#x14;9&#x9;&#x0;AA\6&#xf;&#x12;&#x0;#I&#x0;&#x1;&#x0;&#x81;`&#x1;h&#x1;p&#x0;x&#x1;&#x86;&#x7;_&#x94;&#x3;²&#x6;&#x8c;&#x96;&#x1;O&#x1f;&#x1;&#x96;&#x1;G&#x10;Î&#x96;&#x1;/Ì&#x84;£&#x8;&#x14;fx&#x96;&#x1;&#x80;&#x1;ç&#x97;&#x1;3ýLü&#x97;&#x1;1&#x1;2å(&#x1;&#xf;&#x97;&#x1;&#x15;&quot;þ¶|&#x1;A&#x11;&#x82;t|&#x9;&#x0;&#x14;&#x19;&#x9;&#x0;A!»(}&#x12;&#x0;2)&#x8;&#x8b;&#x9;&#x0;A1&#x90;¡~&#x9;&#x0;&#x14;9&#x9;&#x0;2A&#x88;·&#x12;&#x0;&#xf;&#x97;&#x1;&#x3;&#xf;-&#x3;T&#x1f;&#x14;&#x97;&#x1;G&#x1;-&#x3;/ðy&#x96;&#x1;&#x14;e&#x95;&#x1;&#x80;&#x1;é*&#x96;&#x1;$&#x7f;2&#x96;&#x1;12sÓ&apos;&#x1;&#xf;&#x96;&#x1;&#x15;&quot;&#x8c;&#x9c;$&#x3;2&#x11;È·6&#x3;&#x14;&#x19;&#x9;&#x0;A!8õ&#x5;&#x12;&#x0;2) ñ$&#x0;A1³&#x9;&#xc;&#x9;&#x0;&#x14;9&#x9;&#x0;AA&#x14;t&#x10;&#x12;&#x0;&#xf;&#x96;&#x1;j&#xf;Ã&#x4;M/û&#xf;&#x96;&#x1;&#x14;&#x0;Ã&#x4;&#x16;ø&#x96;&#x1;$ºÀÃ&#x4;OÜ&#x14;R&#x12;&#x96;&#x1;&#x19;&quot;&#x10;&#x8;&#x84;&#x4;A&#x11;d@í&#x9;&#x0;&#x14;&#x19;&#x9;&#x0;A!&#x0;&#x5;î&#x12;&#x0;2)" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en-US_US&#x0;&#xe;com.apple.geod&#x0;
12.1.16B92&#x0;&#x3;LZ4&#x0;&#x0;&#x3;ù&#x0;&#x0;&#x8;©bv41&#x13;.&#x0;&#x0;&#x99;&#x8;&#x0;&#x0;ÿÿ	
&#x94;&#x2;²&#x6;&#x8c;&#x2;
&#xe;&#x98;&#x6;&#x92;&#x3;&#x92;&#x19;&#x7;
&#x5;en-US
&#x1f;&#x98;&#x6;­&#x2;ê&#x12;&#x18;
&#xe;com.apple.geod&#x12;&#x3;1.0&#x1a;&#x1;1
&quot;&#x98;&#x6;É&#x1;Ê&#xc;&#x1b;

12.1.16B92&#x12;	iPhone7,1&#x18;&#x0; &#x0;
	&#x98;&#x6;Ã&#x5;&#x9a;,&#x2;&#x8;&#x2;
3&#x98;&#x6;Ù&#x4;Ê%,
&#x14;&#x8;ÎÛÝ ýÄè¥R&#x10;&#x95;÷§ùÉÐêï}&#x19;&#x0;&#x0;&#x0;&#x92;!áÀA2&#xb;&#x8;&#x80;&#x92;&#x89;&#x8e;&#x2;&#x15;&#x0;&#x0;&#x0;Á
&#xb;&#x98;&#x6;Ú&#x4;Ò%&#x4;&#x1a;&#x2;&#x8;&#x0;
&#xf;&#x98;&#x6;&#x93;&#x3;&#x9a;&#x19;&#x8;&#x8;&#x3;&#x12;&#x2;IN &#x3; &#x6;&#x6;Ò&#x6;S&#x8;&#xd;&#x10;ã&#x4;&#x18;&#x1d;B$6Z842A97CR.org.safemovement.frontend&#x80;&#x1;é&#x3;&#x88;&#x1;È&#x1;²&#x1;&#x4;prod¸&#x1;&#x9d;Ín&#x92;&#x3;&#xf;17.242.2.32:443À&gt;à]&#x17;&#x1;Ü/Í&#x2;&#x17;&#x1;ÿ&#x3;/&#x90;&#x5;&#x17;&#x1;ÿ&#x3;&#x1f;Ù&#x17;&#x1;ÿ&#x4;/Ê&#x4;&#x17;&#x1;&#x14;_­&#x2;²&#x6;¥s&#x5;q&#x1f;°s&#x5;!ÿ&#x10;l&#x8;&#xd;&#x10;æ&#x4;&#x18;û&#x5;*&#x12;GEOProtobufSession0&#x1;&#x8a;&#x5;&#x15;&#x1e;S-&#x1;ñ&#x4;&#x12;172.16.146.57:8888&#x8c;&#x5;&#xf;0&#x1;ò&#x1f;Z0&#x1;Ù&#x1f;ä`&#x2;/&#x1f;V0&#x1;ÿ&#x1d;&#x1f;N0&#x1;ÿ&#x1d;&#xf;&#x90;&#x3;ÿ&#x1e;&#x1f;U0&#x1;&#x17;o&#x93;&#x3;²&#x6;&#x8b;&#x3; &#x7;Cï&#xd;&#x98;&#x6;Â&#x5;&#x92;,&#x6;
&#x4;&#x8;&#xd;&#x10;&#x1;&#x97;&#xc;&#x10;&#x1f;Î$&#x7;!&#x7f;Í&#x1;&#x8;&#x5;&#x18;Ð&#xe;&#xc;&#x7;&#x13;px&#x8f;&#x1;&#x80;&#x1;Î&#x1e; &#x1;ð&#x4;&#x90;&#x1;&#x0;&#x99;&#x1;kºû&#x10;&#x83;&#x4;×A¡&#x1;¡&#x84;{&#x11;
&#x0;:¨&#x1;&#x0;³&#xc;&#xf;*&#x7;&#x0;q¢&#x6;Y	&#x8;8&#x3;0&#x0;A&#x11;D£&#x7;	&#x0;&#x14;&#x19;	&#x0;A!¢]	&#x12;&#x0;A)Q¥
	&#x0;A1ä½&#xe;	&#x0;&#x14;9	&#x0;AA\6&#xf;&#x12;&#x0;#I&#x0;&#x1;&#x0;&#x81;`&#x1;h&#x1;p&#x0;x&#x1;&#x86;&#x7;_&#x94;&#x3;²&#x6;&#x8c;&#x96;&#x1;O&#x1f;&#x1;&#x96;&#x1;G&#x10;Î&#x96;&#x1;/Ì&#x84;£&#x8;&#x14;fx&#x96;&#x1;&#x80;&#x1;ç&#x97;&#x1;3ýLü&#x97;&#x1;1&#x1;2å(&#x1;&#xf;&#x97;&#x1;&#x15;&quot;þ¶|&#x1;A&#x11;&#x82;t|	&#x0;&#x14;&#x19;	&#x0;A!»(}&#x12;&#x0;2)&#x8;&#x8b;	&#x0;A1&#x90;¡~	&#x0;&#x14;9	&#x0;2A&#x88;·&#x12;&#x0;&#xf;&#x97;&#x1;&#x3;&#xf;-&#x3;T&#x1f;&#x14;&#x97;&#x1;G&#x1;-&#x3;/ðy&#x96;&#x1;&#x14;e&#x95;&#x1;&#x80;&#x1;é*&#x96;&#x1;$&#x7f;2&#x96;&#x1;12sÓ&apos;&#x1;&#xf;&#x96;&#x1;&#x15;&quot;&#x8c;&#x9c;$&#x3;2&#x11;È·6&#x3;&#x14;&#x19;	&#x0;A!8õ&#x5;&#x12;&#x0;2) ñ$&#x0;A1³	&#xc;	&#x0;&#x14;9	&#x0;AA&#x14;t&#x10;&#x12;&#x0;&#xf;&#x96;&#x1;j&#xf;Ã&#x4;M/û&#xf;&#x96;&#x1;&#x14;&#x0;Ã&#x4;&#x16;ø&#x96;&#x1;$ºÀÃ&#x4;OÜ&#x14;R&#x12;&#x96;&#x1;&#x19;&quot;&#x10;&#x8;&#x84;&#x4;A&#x11;d@í	&#x0;&#x14;&#x19;	&#x0;A!&#x0;&#x5;î&#x12;&#x0;2)</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="6&#x9;&#x0;A1&#x86;&#x1b;ï&#x9;&#x0;&#x14;9&#x9;&#x0;2A&#x92;!&#x12;&#x0;&#xf;&#x96;&#x1;&#x3;&#xf;Ã&#x4;´/¶½Ã&#x4;&#x15;e&#x93;&#x1;&#x80;&#x1;þ.&#x97;&#x1;$%&quot;-&#x3;?&#x8a;:s&#x97;&#x1;&#x1a;#R&#xa;&#x97;&#x1;1&#x3;xñ&#x9;&#x0;&#x14;&#x19;&#x9;&#x0;A!n4þ&#x12;&#x0;2)2U&#x9;&#x0;A1W[ÿ&#x9;&#x0;&#x14;9&#x9;&#x0;#A&#x1e;²&#x1;&#xf;&#x97;&#x1;&#x3;_&#x92;&#x3;²&#x6;&#x8a;Z&#x6;O&#xf;-&#x3;H&#x10;ÌÃ&#x4;/&#x99;&#x3;&#x96;&#x1;&#x14;U&#xb;&#x80;&#x1;°&#x15;&#x95;&#x1;1\&#x92;&#x7;&#x8b;&#x1;Q¡&#x1;jü&#x8e;&#xa;&#x0;&#xf;Â&#x4;&#x15;1ÏØ-0&#x0;A&#x11;ø&#x18;,&#x9;&#x0;&#x14;&#x19;&#x9;&#x0;2!&#xa;&#x9c;&#x12;&#x0;2)2Í&#x9;&#x0;21k&#x81;-&#x0;&#x14;9&#x9;&#x0;AA&#x8;Í.&#x12;&#x0;&#xf;&#x95;&#x1;&#x3;&#xf;X&#x6;T&#xf;ï&#x7;H&#x1;X&#x6;/Ú£,&#x3;&#x15;U&#x10;&#x80;&#x1;&#x90;&#x1f;&#x96;&#x1;$&#x9c;Þ&#x96;&#x1;1cîì&#xa;&#x0;&#xf;&#x96;&#x1;&#x15;&quot;À%W&#x1;A&#x11;¢&#x5;t&#x9;&#x0;&#x14;&#x19;&#x9;&#x0;2!µ&#x88;&#x12;&#x0;2)Ü¹&#x9;&#x0;A1³]u&#x9;&#x0;&#x14;9&#x9;&#x0;2A j&#x12;&#x0;&#xf;&#x96;&#x1;&#x3;&#xf;+&#x3;T&#xf;î&#x7;H&#x1;+&#x3;/íK&#x95;&#x1;&#x14;U&#xc;&#x80;&#x1; (&#x95;&#x1;1þï &#x1c;&#x1;`¡&#x1;J&#x94;c&#x13;&#xa;&#x0;&#xf;&#x95;&#x1;&#x15;#&#x8a;&#x90;&#x95;&#x1;&quot;&#x9a;ÕÎ&#x1;&#x14;&#x19;&#x9;&#x0;A!Ò&#x89;í&#x12;&#x0;2)&#x98;ª&#x9;&#x0;A1&#xc;&gt;î&#x9;&#x0;&#x14;9&#x9;&#x0;2AúF&#x12;&#x0;&#xf;&#x95;&#x1;j&#xf;À&#x4;M/&#x82;&#x2;&#x95;&#x1;&#x14;U&#xe;&#x80;&#x1;¼/&#x95;&#x1;$×¿*&#x3;1&#x1;Àµ&#xa;&#x0;&#xf;&#x95;&#x1;&#x15;#&gt;&#x5;&#x95;&#x1;1SwR&#x9;&#x0;&#x14;&#x19;&#x9;&#x0;2!fú&#x12;&#x0;A)QLS&#x9;&#x0;A1ì&#x10;T&#x9;&#x0;&#x14;9&#x9;&#x0;2A&#x86;&#x1a;&#x12;&#x0;&#xf;&#x95;&#x1;j&#xf;*&#x3;M/ W&#x95;&#x1;&#x14;F&#x18;&#x80;&#x1;Ç&#x95;&#x1;1@i&#x8;&#x1c;&#x1;_¡&#x1;î$&#x8c;*&#x3;&#x1a;#&#x17;F&#x95;&#x1;1ìô$9&#x0;&#x14;&#x19;&#x9;&#x0;A!&#x9c;g%&#x12;&#x0;2)Ä&#x98;&#x9;&#x0;A1Ö&#x1b;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">6	&#x0;A1&#x86;&#x1b;ï	&#x0;&#x14;9	&#x0;2A&#x92;!&#x12;&#x0;&#xf;&#x96;&#x1;&#x3;&#xf;Ã&#x4;´/¶½Ã&#x4;&#x15;e&#x93;&#x1;&#x80;&#x1;þ.&#x97;&#x1;$%&quot;-&#x3;?&#x8a;:s&#x97;&#x1;&#x1a;#R
&#x97;&#x1;1&#x3;xñ	&#x0;&#x14;&#x19;	&#x0;A!n4þ&#x12;&#x0;2)2U	&#x0;A1W[ÿ	&#x0;&#x14;9	&#x0;#A&#x1e;²&#x1;&#xf;&#x97;&#x1;&#x3;_&#x92;&#x3;²&#x6;&#x8a;Z&#x6;O&#xf;-&#x3;H&#x10;ÌÃ&#x4;/&#x99;&#x3;&#x96;&#x1;&#x14;U&#xb;&#x80;&#x1;°&#x15;&#x95;&#x1;1\&#x92;&#x7;&#x8b;&#x1;Q¡&#x1;jü&#x8e;
&#x0;&#xf;Â&#x4;&#x15;1ÏØ-0&#x0;A&#x11;ø&#x18;,	&#x0;&#x14;&#x19;	&#x0;2!
&#x9c;&#x12;&#x0;2)2Í	&#x0;21k&#x81;-&#x0;&#x14;9	&#x0;AA&#x8;Í.&#x12;&#x0;&#xf;&#x95;&#x1;&#x3;&#xf;X&#x6;T&#xf;ï&#x7;H&#x1;X&#x6;/Ú£,&#x3;&#x15;U&#x10;&#x80;&#x1;&#x90;&#x1f;&#x96;&#x1;$&#x9c;Þ&#x96;&#x1;1cîì
&#x0;&#xf;&#x96;&#x1;&#x15;&quot;À%W&#x1;A&#x11;¢&#x5;t	&#x0;&#x14;&#x19;	&#x0;2!µ&#x88;&#x12;&#x0;2)Ü¹	&#x0;A1³]u	&#x0;&#x14;9	&#x0;2A j&#x12;&#x0;&#xf;&#x96;&#x1;&#x3;&#xf;+&#x3;T&#xf;î&#x7;H&#x1;+&#x3;/íK&#x95;&#x1;&#x14;U&#xc;&#x80;&#x1; (&#x95;&#x1;1þï &#x1c;&#x1;`¡&#x1;J&#x94;c&#x13;
&#x0;&#xf;&#x95;&#x1;&#x15;#&#x8a;&#x90;&#x95;&#x1;&quot;&#x9a;ÕÎ&#x1;&#x14;&#x19;	&#x0;A!Ò&#x89;í&#x12;&#x0;2)&#x98;ª	&#x0;A1&#xc;&gt;î	&#x0;&#x14;9	&#x0;2AúF&#x12;&#x0;&#xf;&#x95;&#x1;j&#xf;À&#x4;M/&#x82;&#x2;&#x95;&#x1;&#x14;U&#xe;&#x80;&#x1;¼/&#x95;&#x1;$×¿*&#x3;1&#x1;Àµ
&#x0;&#xf;&#x95;&#x1;&#x15;#&gt;&#x5;&#x95;&#x1;1SwR	&#x0;&#x14;&#x19;	&#x0;2!fú&#x12;&#x0;A)QLS	&#x0;A1ì&#x10;T	&#x0;&#x14;9	&#x0;2A&#x86;&#x1a;&#x12;&#x0;&#xf;&#x95;&#x1;j&#xf;*&#x3;M/ W&#x95;&#x1;&#x14;F&#x18;&#x80;&#x1;Ç&#x95;&#x1;1@i&#x8;&#x1c;&#x1;_¡&#x1;î$&#x8c;*&#x3;&#x1a;#&#x17;F&#x95;&#x1;1ìô$9&#x0;&#x14;&#x19;	&#x0;A!&#x9c;g%&#x12;&#x0;2)Ä&#x98;	&#x0;A1Ö&#x1b;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x9;&#x0;&#x14;9&#x9;&#x0;2Aj£&#x4;&#x2;&#xf;&#x95;&#x1;&#x3;_&#x91;&#x3;²&#x6;&#x89;ê&#x7;ª&#x10;Ë¿&#x4;&#x1f;&#x1c;&#x94;&#x1;&#x14;U&#xc;&#x80;&#x1;¼4)&#x3;1&#x1a;ö &#x1b;&#x1;Q¡&#x1;&#xc;sÇ7&#x1;&#xf;)&#x3;&#x15;#®¡&#x94;&#x1;1&#x9e;$d9&#x0;&#x14;&#x19;&#x9;&#x0;2!ØØ&#x12;&#x0;A)þ&#x9;e&#x9;&#x0;21&#x9a;Î&#x9;&#x0;&#x14;9&#x9;&#x0;2A,Ù&#x12;&#x0;&#xf;&#x94;&#x1;&#x3;&#xf;S&#x6;´/Æ&#x17;&#x95;&#x1;&#x14;U-&#x80;&#x1;Ò0&#x95;&#x1;12²¤[&#x1;`¡&#x1;&#x1e;ä/&#x14;&#xa;&#x0;&#xf;&#x95;&#x1;&#x15;&quot;Yjü&#x2;A&#x11;ü&#x8b;Î&#x9;&#x0;&#x14;&#x19;&#x9;&#x0;A!6@Ï&#x12;&#x0;2)HÃ&#x9;&#x0;A1&#xa;¹Ð&#x9;&#x0;&#x14;9&#x9;&#x0;2ALÁ&#x12;&#x0;&#xf;&#x95;&#x1;j&#xf;S&#x6;M&#x1f;&#x91;S&#x6;&#x15;F&apos;&#x80;&#x1;ê&#x95;&#x1;$~&#x8f;&#x95;&#x1;1ðÝÌ" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">	&#x0;&#x14;9	&#x0;2Aj£&#x4;&#x2;&#xf;&#x95;&#x1;&#x3;_&#x91;&#x3;²&#x6;&#x89;ê&#x7;ª&#x10;Ë¿&#x4;&#x1f;&#x1c;&#x94;&#x1;&#x14;U&#xc;&#x80;&#x1;¼4)&#x3;1&#x1a;ö &#x1b;&#x1;Q¡&#x1;&#xc;sÇ7&#x1;&#xf;)&#x3;&#x15;#®¡&#x94;&#x1;1&#x9e;$d9&#x0;&#x14;&#x19;	&#x0;2!ØØ&#x12;&#x0;A)þ	e	&#x0;21&#x9a;Î	&#x0;&#x14;9	&#x0;2A,Ù&#x12;&#x0;&#xf;&#x94;&#x1;&#x3;&#xf;S&#x6;´/Æ&#x17;&#x95;&#x1;&#x14;U-&#x80;&#x1;Ò0&#x95;&#x1;12²¤[&#x1;`¡&#x1;&#x1e;ä/&#x14;
&#x0;&#xf;&#x95;&#x1;&#x15;&quot;Yjü&#x2;A&#x11;ü&#x8b;Î	&#x0;&#x14;&#x19;	&#x0;A!6@Ï&#x12;&#x0;2)HÃ	&#x0;A1
¹Ð	&#x0;&#x14;9	&#x0;2ALÁ&#x12;&#x0;&#xf;&#x95;&#x1;j&#xf;S&#x6;M&#x1f;&#x91;S&#x6;&#x15;F&apos;&#x80;&#x1;ê&#x95;&#x1;$~&#x8f;&#x95;&#x1;1ðÝÌ</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x1;&#xf;&#x95;&#x1;&#x15;&quot;¾½µ&#x4;A&#x11;&#x9;¦l&#x9;&#x0;&#x14;&#x19;&#x9;&#x0;A!¹&#x18;m&#x12;&#x0;2)àI&#x9;&#x0;21·í&#x9;&#x0;&#x14;9&#x9;&#x0;2A&#x88;ö&#x12;&#x0;&#xf;&#x95;&#x1;j&#xf;S&#x6;M/øO&#x95;&#x1;&#x14;U&#x1b;&#x80;&#x1;ôG*&#x3;$¿&#x9c;S&#x6;1­l&#x18;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x1;&#xf;&#x95;&#x1;&#x15;&quot;¾½µ&#x4;A&#x11;	¦l	&#x0;&#x14;&#x19;	&#x0;A!¹&#x18;m&#x12;&#x0;2)àI	&#x0;21·í	&#x0;&#x14;9	&#x0;2A&#x88;ö&#x12;&#x0;&#xf;&#x95;&#x1;j&#xf;S&#x6;M/øO&#x95;&#x1;&#x14;U&#x1b;&#x80;&#x1;ôG*&#x3;$¿&#x9c;S&#x6;1­l&#x18;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x1;&#xf;&#x95;&#x1;&#x15;#&#x0;m¿&#x4;1&#xe;÷¶&#x9;&#x0;&#x14;&#x19;&#x9;&#x0;A!&#x82;&#x8a;·&#x12;&#x0;2)H«&#x9;&#x0;A1¼&gt;¸&#x9;&#x0;&#x14;9&#x9;&#x0;2AØF&#x12;&#x0;&#xf;&#x95;&#x1;j&#xf;¨&#xc;H&#x1;&#x12;&#xb;/×1&#x95;&#x1;&#x14;U*&#x80;&#x1;Ä7&#x95;&#x1;$¤§*&#x3;?ÎWh¿&#x4;&#x1a;#&#x2;I¿&#x4;1¨¯ð&#x9;&#x0;&#x14;&#x19;&#x9;&#x0;A!~Sñ&#x12;&#x0;2)j¥&#x9;&#x0;A1&#x6;jò&#x9;&#x0;&#x14;9&#x9;&#x0;2A¨q&#x12;&#x0;&#xf;&#x95;&#x1;&#x3;m±&#x1;²&#x6;©&#x1;è&#x7;&#xf;4$&#x11;&#x8;¡&#x17;&#x1f;&#x18;8$&#x11;&#x1e;ì¡&#x17;&#x12;&#xd;8$?&#x6;&#x12;&#x0;:$&#x4;ñ&#x0;!ª&#x8;&#xb;&#xa;&#x9;&#x8;&#x1;&#x10;&#x1;&#x18;&#x10; É&quot;à&#x16;_²&#x1;²&#x6;ª´&#x0;.&#x1f;&#x1;´&#x0;I3&#xc;&#xa;&#xa;´&#x0;1Û&#x89;&#x10;µ&#x0;&#xf;i&#x1;3?&#x14;&#x18;&#x3;&#xa;&#x19;&#x10;&#xf;i&#x1;,A&#x2; À9´&#x0;&#xf;i&#x1;3&#x1f;&#x14;i&#x1;S1&#x81;ª&#x2;µ&#x0;_µ&#x1;²&#x6;­&#x1e;&#x2;0&#x1f;&#xa;i&#x1;G1&#xf;&#x12;&#xd;&#x1e;&#x2;r&#x2; &#x82;Â&#x2;0È¶&#x19;&#xf;¸&#x0;3?&#x14;&#x18;&#x9;¸&#x0;Q?&#x98;§&#x1;¸&#x0;;?&#x1;&#x18;&#x8;¸&#x0;Q%±Õ¸&#x0;_´&#x1;²&#x6;¬(&#x2;.&#x1f;&#xd;¸&#x0;I3&#xe;&#x12;&#xc;(&#x2;&#x15;­&apos;&#x2;&#xf;·&#x0;3&#x1f;&#x14;·&#x0;S/³c·&#x0;;&#x1f;&#xd;&#x96;&#x3;I&#x6;n&#x1;/Ë&#x1e;·&#x0;;&#x1f;&#x14;·&#x0;QO&#x1; ðy·&#x0;;&#x1f;&#xd;L&#x4;I&#x6;n&#x1;$&#x9b;&#x5;·&#x0;_®&#x2;²&#x6;¦o&apos;q-(&quot;ª&#x8;&#xf;â,&#x1;ðq&#x8;&#x8;&#x3;&#x12;&#x2;IN &#x3; &#x6;&#x6;Ò&#x6;m&#x8;&#xd;&#x10;ç&#x4;&#x18;û&#x5;*&#x12;GEOProtobufSession0&#x1;B$6Z842A97CR.org.safemovement.frontend&#x80;&#x1;²&#x1;&#x88;&#x1;È&#x1;²&#x1;&#x4;prod¸&#x1;&#x9d;Ín&#x92;&#x3;&#x12;172.16.146.57:8888À&gt;à]bv4$" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x1;&#xf;&#x95;&#x1;&#x15;#&#x0;m¿&#x4;1&#xe;÷¶	&#x0;&#x14;&#x19;	&#x0;A!&#x82;&#x8a;·&#x12;&#x0;2)H«	&#x0;A1¼&gt;¸	&#x0;&#x14;9	&#x0;2AØF&#x12;&#x0;&#xf;&#x95;&#x1;j&#xf;¨&#xc;H&#x1;&#x12;&#xb;/×1&#x95;&#x1;&#x14;U*&#x80;&#x1;Ä7&#x95;&#x1;$¤§*&#x3;?ÎWh¿&#x4;&#x1a;#&#x2;I¿&#x4;1¨¯ð	&#x0;&#x14;&#x19;	&#x0;A!~Sñ&#x12;&#x0;2)j¥	&#x0;A1&#x6;jò	&#x0;&#x14;9	&#x0;2A¨q&#x12;&#x0;&#xf;&#x95;&#x1;&#x3;m±&#x1;²&#x6;©&#x1;è&#x7;&#xf;4$&#x11;&#x8;¡&#x17;&#x1f;&#x18;8$&#x11;&#x1e;ì¡&#x17;&#x12;&#xd;8$?&#x6;&#x12;&#x0;:$&#x4;ñ&#x0;!ª&#x8;&#xb;
	&#x8;&#x1;&#x10;&#x1;&#x18;&#x10; É&quot;à&#x16;_²&#x1;²&#x6;ª´&#x0;.&#x1f;&#x1;´&#x0;I3&#xc;

´&#x0;1Û&#x89;&#x10;µ&#x0;&#xf;i&#x1;3?&#x14;&#x18;&#x3;
&#x19;&#x10;&#xf;i&#x1;,A&#x2; À9´&#x0;&#xf;i&#x1;3&#x1f;&#x14;i&#x1;S1&#x81;ª&#x2;µ&#x0;_µ&#x1;²&#x6;­&#x1e;&#x2;0&#x1f;
i&#x1;G1&#xf;&#x12;&#xd;&#x1e;&#x2;r&#x2; &#x82;Â&#x2;0È¶&#x19;&#xf;¸&#x0;3?&#x14;&#x18;	¸&#x0;Q?&#x98;§&#x1;¸&#x0;;?&#x1;&#x18;&#x8;¸&#x0;Q%±Õ¸&#x0;_´&#x1;²&#x6;¬(&#x2;.&#x1f;&#xd;¸&#x0;I3&#xe;&#x12;&#xc;(&#x2;&#x15;­&apos;&#x2;&#xf;·&#x0;3&#x1f;&#x14;·&#x0;S/³c·&#x0;;&#x1f;&#xd;&#x96;&#x3;I&#x6;n&#x1;/Ë&#x1e;·&#x0;;&#x1f;&#x14;·&#x0;QO&#x1; ðy·&#x0;;&#x1f;&#xd;L&#x4;I&#x6;n&#x1;$&#x9b;&#x5;·&#x0;_®&#x2;²&#x6;¦o&apos;q-(&quot;ª&#x8;&#xf;â,&#x1;ðq&#x8;&#x8;&#x3;&#x12;&#x2;IN &#x3; &#x6;&#x6;Ò&#x6;m&#x8;&#xd;&#x10;ç&#x4;&#x18;û&#x5;*&#x12;GEOProtobufSession0&#x1;B$6Z842A97CR.org.safemovement.frontend&#x80;&#x1;²&#x1;&#x88;&#x1;È&#x1;²&#x1;&#x4;prod¸&#x1;&#x9d;Ín&#x92;&#x3;&#x12;172.16.146.57:8888À&gt;à]bv4$</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">gsp64-ssl.ls.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/hvr/v3/use</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">geod/1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="356 /hvr/v3/use" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="en-US_US&#x0;&#xe;com.apple.geod&#x0;&#xa;12.1.16B92&#x0;&#x3;LZ4&#x0;&#x0;&#x3;ù&#x0;&#x0;&#x3;fbv41&#x2;&#x8;&#x0;&#x0;V&#x3;&#x0;&#x0;ô&#x9f;&#xa;&#x97;&#x3;²&#x6;&#x8f;&#x3;&#xa;&#xe;&#x98;&#x6;&#x92;&#x3;&#x92;&#x19;&#x7;&#xa;&#x5;en-US&#xa;0&#x98;&#x6;­&#x2;ê&#x12;)&#xa;&#x19;org.safemovement.frontend&#x12;&#x5;2.4.5&#x1a;&#x5;1.6.1&#xa;&quot;&#x98;&#x6;É&#x1;Ê&#xc;&#x1b;&#xa;&#xa;12.1.16B92&#x12;&#x9;iPhone7,1&#x18;&#x0; &#x0;&#xa;&#xb;&#x98;&#x6;ù&#x3;Ê&#x1f;&#x4;&#x8;&#x3;&#x18;&#x1;&#xa;&#x89;&#x1;&#x98;&#x6;õ&#x3;ª&#x1f;&#x81;&#x1;&#xa;t)&#x16;&#x9f;¦3&#x8f;¿&#x1c;@1&#x2;^FSÃÕP@9Ìê&#x1c;&#xb;&#x9c;\?@AXÙBî&#x9c;¿W@J&#x12;&#x9;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en-US_US&#x0;&#xe;com.apple.geod&#x0;
12.1.16B92&#x0;&#x3;LZ4&#x0;&#x0;&#x3;ù&#x0;&#x0;&#x3;fbv41&#x2;&#x8;&#x0;&#x0;V&#x3;&#x0;&#x0;ô&#x9f;
&#x97;&#x3;²&#x6;&#x8f;&#x3;
&#xe;&#x98;&#x6;&#x92;&#x3;&#x92;&#x19;&#x7;
&#x5;en-US
0&#x98;&#x6;­&#x2;ê&#x12;)
&#x19;org.safemovement.frontend&#x12;&#x5;2.4.5&#x1a;&#x5;1.6.1
&quot;&#x98;&#x6;É&#x1;Ê&#xc;&#x1b;

12.1.16B92&#x12;	iPhone7,1&#x18;&#x0; &#x0;
&#xb;&#x98;&#x6;ù&#x3;Ê&#x1f;&#x4;&#x8;&#x3;&#x18;&#x1;
&#x89;&#x1;&#x98;&#x6;õ&#x3;ª&#x1f;&#x81;&#x1;
t)&#x16;&#x9f;¦3&#x8f;¿&#x1c;@1&#x2;^FSÃÕP@9Ìê&#x1c;&#xb;&#x9c;\?@AXÙBî&#x9c;¿W@J&#x12;	</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x0;&#x14;&#x11;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x0;&#x14;&#x11;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x0;&#x8;&#x14;&#x0;&#x7;(&#x0;&#x4;&lt;&#x0;&#xf;&#x14;&#x0;&#x2;&#x4;&lt;&#x0;ð7&#x11;&#x0;&#x0;&#x0;Pn&#x95;&#x15;@&#x18;&#x1;&#xa;9&#x98;&#x6;Ù&#x4;Ê%2&#xa;&#x15;&#x8;ÚÆß¦ã&#x81;ß¤&#x19;&#x10;&#x99;õÈÅ¶³«Äë&#x1;&#x10;»ð&#x8f;_&#x19;&#x0;&#x0;&#x0;½©&#x9f;`@2&#xb;&#x8;&#x80;&#x92;&#x89;&#x8e;&#x2;&#x15;&#x0;&#x0;&#x0;ÁÔ&#x0;ñ&#x1f;Ú&#x4;Ò%&#x4;&#x1a;&#x2;&#x8;&#x0;&#xa;&#xf;&#x98;&#x6;&#x93;&#x3;&#x9a;&#x19;&#x8;&#x8;&#x3;&#x12;&#x2;IN &#x3; &#x6;&#x2;²&#x6;1&#xa;&#x6;&#x8;&#x3;&#x10;&#xa;&#x18;&#xa;&#xa;&#x6;&#x8;&#x2;&#x10;&#x9;&#x8;&#x0;ð&#x6;&#x5;&#x10;&#xb;&#x18;&#xb;&#xa;&#x6;&#x8;&#x1;&#x10;&#x1;&#x18;&#x1;&#xa;&#x6;&#x8;&#x4;&#x10;&#x9;&#x18;&#x9;&#x92;&#x0;&#x9f;&#x0;Ô|¥?À&gt;øU&#x9a;&#x1;uô&#x17;&#x9d;ÔÔ0ÂÖE@1ZuzzËåSÀ9&#x8c;©¡ý&#x8e;ãE@A&#x16;Ø«&#x98;&#x90;×SÀJ&#x12;&#x9;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x0;&#x8;&#x14;&#x0;&#x7;(&#x0;&#x4;&lt;&#x0;&#xf;&#x14;&#x0;&#x2;&#x4;&lt;&#x0;ð7&#x11;&#x0;&#x0;&#x0;Pn&#x95;&#x15;@&#x18;&#x1;
9&#x98;&#x6;Ù&#x4;Ê%2
&#x15;&#x8;ÚÆß¦ã&#x81;ß¤&#x19;&#x10;&#x99;õÈÅ¶³«Äë&#x1;&#x10;»ð&#x8f;_&#x19;&#x0;&#x0;&#x0;½©&#x9f;`@2&#xb;&#x8;&#x80;&#x92;&#x89;&#x8e;&#x2;&#x15;&#x0;&#x0;&#x0;ÁÔ&#x0;ñ&#x1f;Ú&#x4;Ò%&#x4;&#x1a;&#x2;&#x8;&#x0;
&#xf;&#x98;&#x6;&#x93;&#x3;&#x9a;&#x19;&#x8;&#x8;&#x3;&#x12;&#x2;IN &#x3; &#x6;&#x2;²&#x6;1
&#x6;&#x8;&#x3;&#x10;
&#x18;

&#x6;&#x8;&#x2;&#x10;	&#x8;&#x0;ð&#x6;&#x5;&#x10;&#xb;&#x18;&#xb;
&#x6;&#x8;&#x1;&#x10;&#x1;&#x18;&#x1;
&#x6;&#x8;&#x4;&#x10;	&#x18;	&#x92;&#x0;&#x9f;&#x0;Ô|¥?À&gt;øU&#x9a;&#x1;uô&#x17;&#x9d;ÔÔ0ÂÖE@1ZuzzËåSÀ9&#x8c;©¡ý&#x8e;ãE@A&#x16;Ø«&#x98;&#x90;×SÀJ&#x12;	</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x0;&#x14;&#x11;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x0;&#x14;&#x11;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x0;&#x8;&#x14;&#x0;&#x7;(&#x0;&#x4;&lt;&#x0;&#xf;&#x14;&#x0;&#x2;&#x4;&lt;&#x0;&#x0;&#x8;&#x1;Oà}µ(&#x9a;&#x1;&#x11;ÏµöÝa&#x19;&#x0;&#x0;Àøj&#x14;a&#x9a;&#x1;,?&#xa;&#x18;&#x9;&#x9a;&#x1;&#x9;_ðN0&#xd;@&#x9a;&#x1;yñ&#x12;&#x12;Ð&#x9d;;°ÌE@1Ô¼Ù-ùðSÀ9&#x9c;òtF&#x99;íE@A&#x9c;&#x90;LåbÌ&#x9a;&#x1;&#x4;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x0;&#x8;&#x14;&#x0;&#x7;(&#x0;&#x4;&lt;&#x0;&#xf;&#x14;&#x0;&#x2;&#x4;&lt;&#x0;&#x0;&#x8;&#x1;Oà}µ(&#x9a;&#x1;&#x11;ÏµöÝa&#x19;&#x0;&#x0;Àøj&#x14;a&#x9a;&#x1;,?
&#x18;	&#x9a;&#x1;	_ðN0&#xd;@&#x9a;&#x1;yñ&#x12;&#x12;Ð&#x9d;;°ÌE@1Ô¼Ù-ùðSÀ9&#x9c;òtF&#x99;íE@A&#x9c;&#x90;LåbÌ&#x9a;&#x1;&#x4;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x0;&#x14;&#x11;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x0;&#x14;&#x11;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x0;&#x8;&#x14;&#x0;&#x7;(&#x0;&#x4;&lt;&#x0;&#xf;&#x14;&#x0;&#x2;&#x4;&lt;&#x0;&#x1;&#x9a;&#x1;?ñû%&#x9a;&#x1;&#x11;@¤ç&#x8d;e&#x9a;&#x1;?þ]«&#x9a;&#x1;-&#xf;4&#x3;&#xc;OÀ`Þ&#x12;&#x9a;&#x1;zñ&#x12;o&#x84;&#x8f;ëïÉE@1!ûg\&#x6;ôSÀ9Ó&#x0;öQVðE@AOR¾¶UÉ&#x9a;&#x1;&#x4;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x0;&#x8;&#x14;&#x0;&#x7;(&#x0;&#x4;&lt;&#x0;&#xf;&#x14;&#x0;&#x2;&#x4;&lt;&#x0;&#x1;&#x9a;&#x1;?ñû%&#x9a;&#x1;&#x11;@¤ç&#x8d;e&#x9a;&#x1;?þ]«&#x9a;&#x1;-&#xf;4&#x3;&#xc;OÀ`Þ&#x12;&#x9a;&#x1;zñ&#x12;o&#x84;&#x8f;ëïÉE@1!ûg\&#x6;ôSÀ9Ó&#x0;öQVðE@AOR¾¶UÉ&#x9a;&#x1;&#x4;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x0;&#x14;&#x11;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x0;&#x14;&#x11;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x0;&#x8;&#x14;&#x0;&#x7;(&#x0;&#x4;&lt;&#x0;&#xf;&#x14;&#x0;&#x2;&#x4;&lt;&#x0;&#x0;&#x9a;&#x1;? ý&#x89;&#x9a;&#x1;&#x12;¿óÛ¸f&#x19;&#x0;&#x0;&#x80;m&#x1a;ç&#x9a;&#x1;-&#xf;4&#x3;&#xc;O`7ÞýÎ&#x4;zñ&#x12;ß(øà$&#x90;E@1I&#x13;k&#xd;Û×SÀ9Ì&#x9e;À!å&#x9b;E@Aû-Idé¬&#x9a;&#x1;&#x4;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x0;&#x8;&#x14;&#x0;&#x7;(&#x0;&#x4;&lt;&#x0;&#xf;&#x14;&#x0;&#x2;&#x4;&lt;&#x0;&#x0;&#x9a;&#x1;? ý&#x89;&#x9a;&#x1;&#x12;¿óÛ¸f&#x19;&#x0;&#x0;&#x80;m&#x1a;ç&#x9a;&#x1;-&#xf;4&#x3;&#xc;O`7ÞýÎ&#x4;zñ&#x12;ß(øà$&#x90;E@1I&#x13;k&#xd;Û×SÀ9Ì&#x9e;À!å&#x9b;E@Aû-Idé¬&#x9a;&#x1;&#x4;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x0;&#x14;&#x11;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x0;&#x14;&#x11;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="&#x0;&#x8;&#x14;&#x0;&#x7;(&#x0;&#x4;&lt;&#x0;&#xf;&#x14;&#x0;&#x2;&#x4;&lt;&#x0;&#x0;&#x9a;&#x1;?&#x0;&#x9c;&#x85;&#x9a;&#x1;&#x9;ðmÈÅ¶³«Äë&#x1;&#x10;&#x8d;ñ¸f&#x19;&#x0;&#x0;&#x0;9)ça@2&#xb;&#x8;&#x80;&#x92;&#x89;&#x8e;&#x2;&#x15;&#x0;&#x0;&#x0;Á&#xa;&#xb;&#x98;&#x6;Ú&#x4;Ò%&#x4;&#x1a;&#x2;&#x8;&#x0;&#xa;&#xf;&#x98;&#x6;&#x93;&#x3;&#x9a;&#x19;&#x8;&#x8;&#x3;&#x12;&#x2;IN &#x3; &#x6;&#x2;²&#x6;1&#xa;&#x6;&#x8;&#x3;&#x10;&#xa;&#x18;&#xa;&#xa;&#x6;&#x8;&#x2;&#x10;&#x9;&#x18;&#xa;&#xa;&#x6;&#x8;&#x5;&#x10;&#xb;&#x18;&#xb;&#xa;&#x6;&#x8;&#x1;&#x10;&#x1;&#x18;&#x1;&#xa;&#x6;&#x8;&#x4;&#x10;&#x9;&#x18;&#x9;&#x11;&#x0;&#x0;&#x0;&#x0;&#x0;&#x97;]?À&gt;øUbv4$" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x0;&#x8;&#x14;&#x0;&#x7;(&#x0;&#x4;&lt;&#x0;&#xf;&#x14;&#x0;&#x2;&#x4;&lt;&#x0;&#x0;&#x9a;&#x1;?&#x0;&#x9c;&#x85;&#x9a;&#x1;	ðmÈÅ¶³«Äë&#x1;&#x10;&#x8d;ñ¸f&#x19;&#x0;&#x0;&#x0;9)ça@2&#xb;&#x8;&#x80;&#x92;&#x89;&#x8e;&#x2;&#x15;&#x0;&#x0;&#x0;Á
&#xb;&#x98;&#x6;Ú&#x4;Ò%&#x4;&#x1a;&#x2;&#x8;&#x0;
&#xf;&#x98;&#x6;&#x93;&#x3;&#x9a;&#x19;&#x8;&#x8;&#x3;&#x12;&#x2;IN &#x3; &#x6;&#x2;²&#x6;1
&#x6;&#x8;&#x3;&#x10;
&#x18;

&#x6;&#x8;&#x2;&#x10;	&#x18;

&#x6;&#x8;&#x5;&#x10;&#xb;&#x18;&#xb;
&#x6;&#x8;&#x1;&#x10;&#x1;&#x18;&#x1;
&#x6;&#x8;&#x4;&#x10;	&#x18;	&#x11;&#x0;&#x0;&#x0;&#x0;&#x0;&#x97;]?À&gt;øUbv4$</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">gsp64-ssl.ls.apple.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/hvr/v3/use</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">geod/1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="357 /log" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="&#x8b;&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x13;ãÒâ`VR&#x93;b24Rb14Ò3Ôb5Ô3Ó34b&#xa;&#xd;¶âÌ&#xc;ÈÈÏK5×1tbJÍó`&#x10;HTèèíÞòKGËÍ&#x95;ãÊìV ËÈ&#x88;&#x83;QH&#x9a;K2¿(]¯81-57¿,575¯D/­(?¯$5/E&#x8b;&#x85;&#x83;Å&#x89;!&#x82;!&#x8b;ÓHÏ\ÏØÀÔÐ¤âÿAæ&#xe;ÆÏ&#xd;&#x9d;Z&#xe;Ë?õi&#x1;&#x0;&#x80;&lt;àd&#x82;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">&#x8b;&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x13;ãÒâ`VR&#x93;b24Rb14Ò3Ôb5Ô3Ó34b
&#xd;¶âÌ&#xc;ÈÈÏK5×1tbJÍó`&#x10;HTèèíÞòKGËÍ&#x95;ãÊìV ËÈ&#x88;&#x83;QH&#x9a;K2¿(]¯81-57¿,575¯D/­(?¯$5/E&#x8b;&#x85;&#x83;Å&#x89;!&#x82;!&#x8b;ÓHÏ\ÏØÀÔÐ¤âÿAæ&#xe;ÆÏ&#xd;&#x9d;Z&#xe;Ë?õi&#x1;&#x0;&#x80;&lt;àd&#x82;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">play.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/log</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="358 /log" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x13;���`V�&#x16;R6�&#xa;�3�(&#x8;�/vr,N&#x9;H&#xa;J�&#xa;�&#x8;�I�J3M�04�2&#xf;t�b24Rb14�3�b5�3�34b&#xa;&#xd;���&#xc;���K5�1tbJ��`&#x10;HT�Zؽ嗎V&#x3;�&#x17;ǫE�@��9&#x7;��4�d~Q�^qbZjn~Yjnj^�^ZQ~^Ij^�&#x11;�&#x10;{zj�_bnj&#x4;C&#x16;���������I����&#x1d;��&#x1d;�Z�&#x1c;�!F�&#x11;2J@�&#xf;h&#x14;�Q~��I�EXL�&#x2;��ʱ�B;�D#&#xe;F�" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x13;���`V�&#x16;R6�
�3�(&#x8;�/vr,N	H
J�
�&#x8;�I�J3M�04�2&#xf;t�b24Rb14�3�b5�3�34b
&#xd;���&#xc;���K5�1tbJ��`&#x10;HT�Zؽ嗎V&#x3;�&#x17;ǫE�@��9&#x7;��4�d~Q�^qbZjn~Yjnj^�^ZQ~^Ij^�&#x11;�&#x10;{zj�_bnj&#x4;C&#x16;���������I����&#x1d;��&#x1d;�Z�&#x1c;�!F�&#x11;2J@�&#xf;h&#x14;�Q~��I�EXL�&#x2;��ʱ�B;�D#&#xe;F�</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="j�p�81`1���n-/��W�)�⇝�@/^�&#x18;E&#x15;/~&#x4;�谲�_&#xb;&#x0;�q�i�" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j�p�81`1���n-/��W�)�⇝�@/^�&#x18;E&#x15;/~&#x4;�谲�_&#xb;&#x0;�q�i�</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">play.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/log</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="359 /api/Message/getMessages" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="PageNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">PageNumber</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="PageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">PageSize</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa.api.ursafe.io</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Message/getMessages</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">br, gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SAFE/1.6.1 CFNetwork/975.0.3 Darwin/18.2.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="true">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list"/>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">true</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
